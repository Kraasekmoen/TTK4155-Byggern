
OLED_EX4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000336  00800100  00000dda  00000e6e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dda  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800436  00800436  000011a4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001200  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  0000123c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001915  00000000  00000000  00001394  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bff  00000000  00000000  00002ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bd7  00000000  00000000  000038a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000468  00000000  00000000  00004480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c4  00000000  00000000  000048e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ee8  00000000  00000000  00004fac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00005e94  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 a0 00 	jmp	0x140	; 0x140 <__vector_2>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	14 e0       	ldi	r17, 0x04	; 4
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea ed       	ldi	r30, 0xDA	; 218
  84:	fd e0       	ldi	r31, 0x0D	; 13
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 33       	cpi	r26, 0x36	; 54
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	24 e0       	ldi	r18, 0x04	; 4
  94:	a6 e3       	ldi	r26, 0x36	; 54
  96:	b4 e0       	ldi	r27, 0x04	; 4
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a1 34       	cpi	r26, 0x41	; 65
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 69 01 	call	0x2d2	; 0x2d2 <main>
  a6:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <uart_putchar>:
	printf("Init CANINTE: 0x%02X\n", caninte);
	printf("Desired CANINTE: 0x%02X\n", des_caninte);
	MCP_write_byte(MCP_CANINTE, des_caninte);
	caninte = MCP_read_byte(MCP_CANINTE);
	printf("New CANINTE: 0x%02X\n\n", caninte);
}
  ae:	cf 93       	push	r28
  b0:	c8 2f       	mov	r28, r24
  b2:	8a 30       	cpi	r24, 0x0A	; 10
  b4:	19 f4       	brne	.+6      	; 0xbc <uart_putchar+0xe>
  b6:	8d e0       	ldi	r24, 0x0D	; 13
  b8:	0e 94 57 00 	call	0xae	; 0xae <uart_putchar>
  bc:	5d 9b       	sbis	0x0b, 5	; 11
  be:	fe cf       	rjmp	.-4      	; 0xbc <uart_putchar+0xe>
  c0:	cc b9       	out	0x0c, r28	; 12
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <xmem_init>:
  ca:	85 b7       	in	r24, 0x35	; 53
  cc:	80 68       	ori	r24, 0x80	; 128
  ce:	85 bf       	out	0x35, r24	; 53
  d0:	80 b7       	in	r24, 0x30	; 48
  d2:	80 62       	ori	r24, 0x20	; 32
  d4:	80 bf       	out	0x30, r24	; 48
  d6:	84 b3       	in	r24, 0x14	; 20
  d8:	8f ef       	ldi	r24, 0xFF	; 255
  da:	84 bb       	out	0x14, r24	; 20
  dc:	15 ba       	out	0x15, r1	; 21
  de:	08 95       	ret

000000e0 <Init_ports>:
  e0:	8e 9a       	sbi	0x11, 6	; 17
  e2:	96 9a       	sbi	0x12, 6	; 18
  e4:	b8 9a       	sbi	0x17, 0	; 23
  e6:	b9 98       	cbi	0x17, 1	; 23
  e8:	87 b3       	in	r24, 0x17	; 23
  ea:	87 bb       	out	0x17, r24	; 23
  ec:	08 95       	ret

000000ee <Init_pwm>:
  ee:	83 b7       	in	r24, 0x33	; 51
  f0:	89 61       	ori	r24, 0x19	; 25
  f2:	83 bf       	out	0x33, r24	; 51
  f4:	08 95       	ret

000000f6 <set_configs>:
  f6:	0e 94 32 02 	call	0x464	; 0x464 <SPI_init>
  fa:	85 b7       	in	r24, 0x35	; 53
  fc:	88 60       	ori	r24, 0x08	; 8
  fe:	85 bf       	out	0x35, r24	; 53
 100:	85 b7       	in	r24, 0x35	; 53
 102:	8b 7f       	andi	r24, 0xFB	; 251
 104:	85 bf       	out	0x35, r24	; 53
 106:	78 94       	sei
 108:	8b b7       	in	r24, 0x3b	; 59
 10a:	80 68       	ori	r24, 0x80	; 128
 10c:	8b bf       	out	0x3b, r24	; 59
 10e:	08 95       	ret

00000110 <MAIN_INITS>:
 110:	8f e1       	ldi	r24, 0x1F	; 31
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	0e 94 41 02 	call	0x482	; 0x482 <USART_init>
 118:	86 e0       	ldi	r24, 0x06	; 6
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	90 93 3a 04 	sts	0x043A, r25	; 0x80043a <__iob+0x3>
 120:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <__iob+0x2>
 124:	0e 94 65 00 	call	0xca	; 0xca <xmem_init>
 128:	0e 94 70 00 	call	0xe0	; 0xe0 <Init_ports>
 12c:	0e 94 7b 00 	call	0xf6	; 0xf6 <set_configs>
 130:	0e 94 77 00 	call	0xee	; 0xee <Init_pwm>
 134:	0e 94 32 02 	call	0x464	; 0x464 <SPI_init>
 138:	80 e4       	ldi	r24, 0x40	; 64
 13a:	0e 94 f9 01 	call	0x3f2	; 0x3f2 <MCP_init>
 13e:	08 95       	ret

00000140 <__vector_2>:
 140:	1f 92       	push	r1
 142:	0f 92       	push	r0
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	0f 92       	push	r0
 148:	11 24       	eor	r1, r1
 14a:	2f 93       	push	r18
 14c:	3f 93       	push	r19
 14e:	4f 93       	push	r20
 150:	5f 93       	push	r21
 152:	6f 93       	push	r22
 154:	7f 93       	push	r23
 156:	8f 93       	push	r24
 158:	9f 93       	push	r25
 15a:	af 93       	push	r26
 15c:	bf 93       	push	r27
 15e:	ef 93       	push	r30
 160:	ff 93       	push	r31
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <__data_end>
 168:	80 91 36 04 	lds	r24, 0x0436	; 0x800436 <__data_end>
 16c:	1f 92       	push	r1
 16e:	8f 93       	push	r24
 170:	84 e1       	ldi	r24, 0x14	; 20
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	9f 93       	push	r25
 176:	8f 93       	push	r24
 178:	0e 94 99 02 	call	0x532	; 0x532 <printf>
 17c:	0f 90       	pop	r0
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	ff 91       	pop	r31
 186:	ef 91       	pop	r30
 188:	bf 91       	pop	r27
 18a:	af 91       	pop	r26
 18c:	9f 91       	pop	r25
 18e:	8f 91       	pop	r24
 190:	7f 91       	pop	r23
 192:	6f 91       	pop	r22
 194:	5f 91       	pop	r21
 196:	4f 91       	pop	r20
 198:	3f 91       	pop	r19
 19a:	2f 91       	pop	r18
 19c:	0f 90       	pop	r0
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	0f 90       	pop	r0
 1a2:	1f 90       	pop	r1
 1a4:	18 95       	reti

000001a6 <SPI_failure_demo>:
 1a6:	5f 92       	push	r5
 1a8:	6f 92       	push	r6
 1aa:	7f 92       	push	r7
 1ac:	8f 92       	push	r8
 1ae:	9f 92       	push	r9
 1b0:	af 92       	push	r10
 1b2:	bf 92       	push	r11
 1b4:	cf 92       	push	r12
 1b6:	df 92       	push	r13
 1b8:	ef 92       	push	r14
 1ba:	ff 92       	push	r15
 1bc:	0f 93       	push	r16
 1be:	1f 93       	push	r17
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	00 d0       	rcall	.+0      	; 0x1c6 <SPI_failure_demo+0x20>
 1c6:	cd b7       	in	r28, 0x3d	; 61
 1c8:	de b7       	in	r29, 0x3e	; 62
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	89 83       	std	Y+1, r24	; 0x01
 1ce:	82 e0       	ldi	r24, 0x02	; 2
 1d0:	8a 83       	std	Y+2, r24	; 0x02
 1d2:	8e 01       	movw	r16, r28
 1d4:	0f 5f       	subi	r16, 0xFF	; 255
 1d6:	1f 4f       	sbci	r17, 0xFF	; 255
 1d8:	4e 01       	movw	r8, r28
 1da:	83 e0       	ldi	r24, 0x03	; 3
 1dc:	88 0e       	add	r8, r24
 1de:	91 1c       	adc	r9, r1
 1e0:	0f 2e       	mov	r0, r31
 1e2:	f6 e1       	ldi	r31, 0x16	; 22
 1e4:	af 2e       	mov	r10, r31
 1e6:	f3 e0       	ldi	r31, 0x03	; 3
 1e8:	bf 2e       	mov	r11, r31
 1ea:	f0 2d       	mov	r31, r0
 1ec:	0f 2e       	mov	r0, r31
 1ee:	ff e2       	ldi	r31, 0x2F	; 47
 1f0:	cf 2e       	mov	r12, r31
 1f2:	f3 e0       	ldi	r31, 0x03	; 3
 1f4:	df 2e       	mov	r13, r31
 1f6:	f0 2d       	mov	r31, r0
 1f8:	0f 2e       	mov	r0, r31
 1fa:	f7 e4       	ldi	r31, 0x47	; 71
 1fc:	ef 2e       	mov	r14, r31
 1fe:	f3 e0       	ldi	r31, 0x03	; 3
 200:	ff 2e       	mov	r15, r31
 202:	f0 2d       	mov	r31, r0
 204:	0f 2e       	mov	r0, r31
 206:	f2 e6       	ldi	r31, 0x62	; 98
 208:	6f 2e       	mov	r6, r31
 20a:	f3 e0       	ldi	r31, 0x03	; 3
 20c:	7f 2e       	mov	r7, r31
 20e:	f0 2d       	mov	r31, r0
 210:	60 e0       	ldi	r22, 0x00	; 0
 212:	8c e2       	ldi	r24, 0x2C	; 44
 214:	0e 94 e5 01 	call	0x3ca	; 0x3ca <MCP_write_byte>
 218:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
 21c:	82 e0       	ldi	r24, 0x02	; 2
 21e:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 222:	8b e2       	ldi	r24, 0x2B	; 43
 224:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 228:	f8 01       	movw	r30, r16
 22a:	51 90       	ld	r5, Z+
 22c:	8f 01       	movw	r16, r30
 22e:	85 2d       	mov	r24, r5
 230:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 234:	1f 92       	push	r1
 236:	5f 92       	push	r5
 238:	bf 92       	push	r11
 23a:	af 92       	push	r10
 23c:	0e 94 99 02 	call	0x532	; 0x532 <printf>
 240:	0e 94 24 02 	call	0x448	; 0x448 <SPI_read>
 244:	1f 92       	push	r1
 246:	8f 93       	push	r24
 248:	df 92       	push	r13
 24a:	cf 92       	push	r12
 24c:	0e 94 99 02 	call	0x532	; 0x532 <printf>
 250:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 254:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
 258:	83 e0       	ldi	r24, 0x03	; 3
 25a:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 25e:	8b e2       	ldi	r24, 0x2B	; 43
 260:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 264:	0e 94 24 02 	call	0x448	; 0x448 <SPI_read>
 268:	1f 92       	push	r1
 26a:	8f 93       	push	r24
 26c:	ff 92       	push	r15
 26e:	ef 92       	push	r14
 270:	0e 94 99 02 	call	0x532	; 0x532 <printf>
 274:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 278:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
 27c:	83 e0       	ldi	r24, 0x03	; 3
 27e:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 282:	8c e2       	ldi	r24, 0x2C	; 44
 284:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 288:	0e 94 24 02 	call	0x448	; 0x448 <SPI_read>
 28c:	1f 92       	push	r1
 28e:	8f 93       	push	r24
 290:	7f 92       	push	r7
 292:	6f 92       	push	r6
 294:	0e 94 99 02 	call	0x532	; 0x532 <printf>
 298:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 29c:	0f b6       	in	r0, 0x3f	; 63
 29e:	f8 94       	cli
 2a0:	de bf       	out	0x3e, r29	; 62
 2a2:	0f be       	out	0x3f, r0	; 63
 2a4:	cd bf       	out	0x3d, r28	; 61
 2a6:	08 15       	cp	r16, r8
 2a8:	19 05       	cpc	r17, r9
 2aa:	09 f0       	breq	.+2      	; 0x2ae <SPI_failure_demo+0x108>
 2ac:	b1 cf       	rjmp	.-158    	; 0x210 <SPI_failure_demo+0x6a>
 2ae:	0f 90       	pop	r0
 2b0:	0f 90       	pop	r0
 2b2:	df 91       	pop	r29
 2b4:	cf 91       	pop	r28
 2b6:	1f 91       	pop	r17
 2b8:	0f 91       	pop	r16
 2ba:	ff 90       	pop	r15
 2bc:	ef 90       	pop	r14
 2be:	df 90       	pop	r13
 2c0:	cf 90       	pop	r12
 2c2:	bf 90       	pop	r11
 2c4:	af 90       	pop	r10
 2c6:	9f 90       	pop	r9
 2c8:	8f 90       	pop	r8
 2ca:	7f 90       	pop	r7
 2cc:	6f 90       	pop	r6
 2ce:	5f 90       	pop	r5
 2d0:	08 95       	ret

000002d2 <main>:


int main(void)
{
	// Initialize USART transmission drivers, as well as MCU ports and external memory
	MAIN_INITS();
 2d2:	0e 94 88 00 	call	0x110	; 0x110 <MAIN_INITS>
	//Exercise_5_Demo();
	
	while (true)
	{
		// Essentially unpacked versions of MCP2515-driver read/send functions. Will successfully write to registers, even though scope SS is wack and SPDR read yields 0x00
		SPI_failure_demo();
 2d6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <SPI_failure_demo>
 2da:	fd cf       	rjmp	.-6      	; 0x2d6 <main+0x4>

000002dc <MCP_bit_modify>:
	}
	
	SPI_SS_HIGH();
	
	return rec;
}
 2dc:	1f 93       	push	r17
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
 2e2:	18 2f       	mov	r17, r24
 2e4:	d6 2f       	mov	r29, r22
 2e6:	c4 2f       	mov	r28, r20
 2e8:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
 2ec:	85 e0       	ldi	r24, 0x05	; 5
 2ee:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 2f2:	81 2f       	mov	r24, r17
 2f4:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 2f8:	8d 2f       	mov	r24, r29
 2fa:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 2fe:	8c 2f       	mov	r24, r28
 300:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 304:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	1f 91       	pop	r17
 30e:	08 95       	ret

00000310 <MCP_set_mode>:
 310:	48 2f       	mov	r20, r24
 312:	60 ee       	ldi	r22, 0xE0	; 224
 314:	8f e0       	ldi	r24, 0x0F	; 15
 316:	0e 94 6e 01 	call	0x2dc	; 0x2dc <MCP_bit_modify>
 31a:	08 95       	ret

0000031c <MCP_reset>:
 31c:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
 320:	80 ec       	ldi	r24, 0xC0	; 192
 322:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 326:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 32a:	08 95       	ret

0000032c <MCP_read_status>:
 32c:	cf 93       	push	r28
 32e:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
 332:	80 ea       	ldi	r24, 0xA0	; 160
 334:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 338:	0e 94 24 02 	call	0x448	; 0x448 <SPI_read>
 33c:	c8 2f       	mov	r28, r24
 33e:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 342:	8c 2f       	mov	r24, r28
 344:	cf 91       	pop	r28
 346:	08 95       	ret

00000348 <MCP_read_byte>:
 348:	cf 93       	push	r28
 34a:	c8 2f       	mov	r28, r24
 34c:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
 350:	83 e0       	ldi	r24, 0x03	; 3
 352:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 356:	8c 2f       	mov	r24, r28
 358:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
 35c:	0e 94 24 02 	call	0x448	; 0x448 <SPI_read>
 360:	c8 2f       	mov	r28, r24
 362:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 366:	8c 2f       	mov	r24, r28
 368:	cf 91       	pop	r28
 36a:	08 95       	ret

0000036c <MCP_print_diagnostix>:
 36c:	cf 93       	push	r28
 36e:	83 ec       	ldi	r24, 0xC3	; 195
 370:	93 e0       	ldi	r25, 0x03	; 3
 372:	0e 94 af 02 	call	0x55e	; 0x55e <puts>
 376:	8e e0       	ldi	r24, 0x0E	; 14
 378:	0e 94 a4 01 	call	0x348	; 0x348 <MCP_read_byte>
 37c:	1f 92       	push	r1
 37e:	1f 92       	push	r1
 380:	80 7e       	andi	r24, 0xE0	; 224
 382:	1f 92       	push	r1
 384:	8f 93       	push	r24
 386:	1f 92       	push	r1
 388:	1f 92       	push	r1
 38a:	80 ed       	ldi	r24, 0xD0	; 208
 38c:	93 e0       	ldi	r25, 0x03	; 3
 38e:	9f 93       	push	r25
 390:	8f 93       	push	r24
 392:	0e 94 99 02 	call	0x532	; 0x532 <printf>
 396:	0e 94 96 01 	call	0x32c	; 0x32c <MCP_read_status>
 39a:	c8 2f       	mov	r28, r24
 39c:	8f e0       	ldi	r24, 0x0F	; 15
 39e:	0e 94 a4 01 	call	0x348	; 0x348 <MCP_read_byte>
 3a2:	1f 92       	push	r1
 3a4:	8f 93       	push	r24
 3a6:	1f 92       	push	r1
 3a8:	cf 93       	push	r28
 3aa:	8c ef       	ldi	r24, 0xFC	; 252
 3ac:	93 e0       	ldi	r25, 0x03	; 3
 3ae:	9f 93       	push	r25
 3b0:	8f 93       	push	r24
 3b2:	0e 94 99 02 	call	0x532	; 0x532 <printf>
 3b6:	8d b7       	in	r24, 0x3d	; 61
 3b8:	9e b7       	in	r25, 0x3e	; 62
 3ba:	0e 96       	adiw	r24, 0x0e	; 14
 3bc:	0f b6       	in	r0, 0x3f	; 63
 3be:	f8 94       	cli
 3c0:	9e bf       	out	0x3e, r25	; 62
 3c2:	0f be       	out	0x3f, r0	; 63
 3c4:	8d bf       	out	0x3d, r24	; 61
 3c6:	cf 91       	pop	r28
 3c8:	08 95       	ret

000003ca <MCP_write_byte>:

void MCP_write_byte(uint8_t address, uint8_t data){
 3ca:	cf 93       	push	r28
 3cc:	df 93       	push	r29
 3ce:	d8 2f       	mov	r29, r24
 3d0:	c6 2f       	mov	r28, r22
	SPI_SS_LOW();
 3d2:	0e 94 2e 02 	call	0x45c	; 0x45c <SPI_SS_LOW>
	SPI_send(MCP_WRITE);
 3d6:	82 e0       	ldi	r24, 0x02	; 2
 3d8:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
	SPI_send(address);
 3dc:	8d 2f       	mov	r24, r29
 3de:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
	SPI_send(data);
 3e2:	8c 2f       	mov	r24, r28
 3e4:	0e 94 2a 02 	call	0x454	; 0x454 <SPI_send>
	SPI_SS_HIGH();
 3e8:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
	
	//uint8_t check = MCP_read_byte(address);																				// !!! 
	//printf("Written: %d Read: %d\n", data, check);
}
 3ec:	df 91       	pop	r29
 3ee:	cf 91       	pop	r28
 3f0:	08 95       	ret

000003f2 <MCP_init>:
 */ 
#include <mcp2515.h>

//								---									MCP config and operations

void MCP_init(mcp_mode md){
 3f2:	cf 93       	push	r28
 3f4:	c8 2f       	mov	r28, r24
	
	// Initialize SPI for MCU, just to be sure
	SPI_init();
 3f6:	0e 94 32 02 	call	0x464	; 0x464 <SPI_init>
	
	// Reset the MCP, just to be sure, and set the desired mode
	MCP_reset();
 3fa:	0e 94 8e 01 	call	0x31c	; 0x31c <MCP_reset>
 3fe:	2a e0       	ldi	r18, 0x0A	; 10
 400:	30 e0       	ldi	r19, 0x00	; 0
 402:	05 c0       	rjmp	.+10     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 404:	01 97       	sbiw	r24, 0x01	; 1
	for(int j=0; j<10; j++)
	{
		for(int k=0; k<30000; k++);
 406:	f1 f7       	brne	.-4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 408:	21 50       	subi	r18, 0x01	; 1
 40a:	31 09       	sbc	r19, r1
	// Initialize SPI for MCU, just to be sure
	SPI_init();
	
	// Reset the MCP, just to be sure, and set the desired mode
	MCP_reset();
	for(int j=0; j<10; j++)
 40c:	19 f0       	breq	.+6      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 */ 
#include <mcp2515.h>

//								---									MCP config and operations

void MCP_init(mcp_mode md){
 40e:	80 e3       	ldi	r24, 0x30	; 48
 410:	95 e7       	ldi	r25, 0x75	; 117
 412:	f8 cf       	rjmp	.-16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
	MCP_reset();
	for(int j=0; j<10; j++)
	{
		for(int k=0; k<30000; k++);
	}
	MCP_write_byte(MCP_CANINTE, MCP_RD_INT_MASK);					// Only enable interrupts on message reception
 414:	63 e0       	ldi	r22, 0x03	; 3
 416:	8b e2       	ldi	r24, 0x2B	; 43
 418:	0e 94 e5 01 	call	0x3ca	; 0x3ca <MCP_write_byte>
	MCP_bit_modify(MCP_CANCTRL, MCP_TXABRT_MASK, MCP_TXABRT_MASK);	// Request abort for all transmittions; necessary for setting mode
 41c:	40 e1       	ldi	r20, 0x10	; 16
 41e:	60 e1       	ldi	r22, 0x10	; 16
 420:	8f e0       	ldi	r24, 0x0F	; 15
 422:	0e 94 6e 01 	call	0x2dc	; 0x2dc <MCP_bit_modify>
	MCP_set_mode(md);
 426:	8c 2f       	mov	r24, r28
 428:	0e 94 88 01 	call	0x310	; 0x310 <MCP_set_mode>
	// Verify that the MCP is in the correct mode
	uint8_t can_status = MCP_read_byte(MCP_CANSTAT);
 42c:	8e e0       	ldi	r24, 0x0E	; 14
 42e:	0e 94 a4 01 	call	0x348	; 0x348 <MCP_read_byte>
	uint8_t can_mode = can_status &= MCP_MODE_MASK;					// First 3 bits of CANSTAT indicates the MCPs current mode
	if (can_mode != md) { 
 432:	80 7e       	andi	r24, 0xE0	; 224
 434:	c8 17       	cp	r28, r24
 436:	31 f0       	breq	.+12     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
		printf("MCP Error: Init failed!\n");
 438:	8d e1       	ldi	r24, 0x1D	; 29
 43a:	94 e0       	ldi	r25, 0x04	; 4
 43c:	0e 94 af 02 	call	0x55e	; 0x55e <puts>
		MCP_print_diagnostix();
 440:	0e 94 b6 01 	call	0x36c	; 0x36c <MCP_print_diagnostix>
	}
}
 444:	cf 91       	pop	r28
 446:	08 95       	ret

00000448 <SPI_read>:
	SPI_SS_HIGH();
}

// Reads the master's SPDR register, not the slave register! For that, send a dummy write first
uint8_t SPI_read(){	
	SPDR = 0xAA; 
 448:	8a ea       	ldi	r24, 0xAA	; 170
 44a:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
 44c:	77 9b       	sbis	0x0e, 7	; 14
 44e:	fe cf       	rjmp	.-4      	; 0x44c <SPI_read+0x4>
	return SPDR;}
 450:	8f b1       	in	r24, 0x0f	; 15
 452:	08 95       	ret

00000454 <SPI_send>:
//uint8_t SPI_read_master(){ return SPDR;}

void SPI_send(uint8_t ch){ 
	SPDR = ch;
 454:	8f b9       	out	0x0f, r24	; 15
	
	// SPSR: SPI Status Register	
	// SPIF: SPI End of Transmission Flag; flags when full byte is written to SPDR			(see example at p 160)
	while(!(SPSR & (1<<SPIF)));
 456:	77 9b       	sbis	0x0e, 7	; 14
 458:	fe cf       	rjmp	.-4      	; 0x456 <SPI_send+0x2>
}
 45a:	08 95       	ret

0000045c <SPI_SS_LOW>:
		printf("SPI: %d,%d\n",i, charray[i]);
	}
}
*/
	
void SPI_SS_LOW() { PORTB &= ~(1<<PB4); }
 45c:	c4 98       	cbi	0x18, 4	; 24
 45e:	08 95       	ret

00000460 <SPI_SS_HIGH>:
void SPI_SS_HIGH(){ PORTB |= (1<<PB4);}
 460:	c4 9a       	sbi	0x18, 4	; 24
 462:	08 95       	ret

00000464 <SPI_init>:
void SPI_init()
{
	//Set SS', MOSI and SCK output, all others input 
		// "DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)"
		// Since MOSI is on Pin PB5, the actuals are set accordingly (see page 159 of manual)
	DDRB = (1<<DDB4)|(1<<DDB5)|(1<<DDB7);
 464:	80 eb       	ldi	r24, 0xB0	; 176
 466:	87 bb       	out	0x17, r24	; 23
	
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 468:	81 e5       	ldi	r24, 0x51	; 81
 46a:	8d b9       	out	0x0d, r24	; 13
	SPI_SS_HIGH();
 46c:	0e 94 30 02 	call	0x460	; 0x460 <SPI_SS_HIGH>
 470:	08 95       	ret

00000472 <USART_Transmit>:
#include <USART_Driver.h>

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
 472:	5d 9b       	sbis	0x0b, 5	; 11
 474:	fe cf       	rjmp	.-4      	; 0x472 <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 476:	8c b9       	out	0x0c, r24	; 12
 478:	08 95       	ret

0000047a <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 47a:	5f 9b       	sbis	0x0b, 7	; 11
 47c:	fe cf       	rjmp	.-4      	; 0x47a <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 47e:	8c b1       	in	r24, 0x0c	; 12
}
 480:	08 95       	ret

00000482 <USART_init>:

void USART_init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char) (ubrr>>8);
 482:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);
 484:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter */
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 486:	88 e1       	ldi	r24, 0x18	; 24
 488:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
 48a:	8e e8       	ldi	r24, 0x8E	; 142
 48c:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
 48e:	6d e3       	ldi	r22, 0x3D	; 61
 490:	72 e0       	ldi	r23, 0x02	; 2
 492:	89 e3       	ldi	r24, 0x39	; 57
 494:	92 e0       	ldi	r25, 0x02	; 2
 496:	0e 94 4e 02 	call	0x49c	; 0x49c <fdevopen>
 49a:	08 95       	ret

0000049c <fdevopen>:
 49c:	0f 93       	push	r16
 49e:	1f 93       	push	r17
 4a0:	cf 93       	push	r28
 4a2:	df 93       	push	r29
 4a4:	00 97       	sbiw	r24, 0x00	; 0
 4a6:	31 f4       	brne	.+12     	; 0x4b4 <fdevopen+0x18>
 4a8:	61 15       	cp	r22, r1
 4aa:	71 05       	cpc	r23, r1
 4ac:	19 f4       	brne	.+6      	; 0x4b4 <fdevopen+0x18>
 4ae:	80 e0       	ldi	r24, 0x00	; 0
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	3a c0       	rjmp	.+116    	; 0x528 <__stack+0x29>
 4b4:	8b 01       	movw	r16, r22
 4b6:	ec 01       	movw	r28, r24
 4b8:	6e e0       	ldi	r22, 0x0E	; 14
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	0e 94 c0 04 	call	0x980	; 0x980 <calloc>
 4c4:	fc 01       	movw	r30, r24
 4c6:	89 2b       	or	r24, r25
 4c8:	91 f3       	breq	.-28     	; 0x4ae <fdevopen+0x12>
 4ca:	80 e8       	ldi	r24, 0x80	; 128
 4cc:	83 83       	std	Z+3, r24	; 0x03
 4ce:	01 15       	cp	r16, r1
 4d0:	11 05       	cpc	r17, r1
 4d2:	71 f0       	breq	.+28     	; 0x4f0 <fdevopen+0x54>
 4d4:	13 87       	std	Z+11, r17	; 0x0b
 4d6:	02 87       	std	Z+10, r16	; 0x0a
 4d8:	81 e8       	ldi	r24, 0x81	; 129
 4da:	83 83       	std	Z+3, r24	; 0x03
 4dc:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <__iob>
 4e0:	90 91 38 04 	lds	r25, 0x0438	; 0x800438 <__iob+0x1>
 4e4:	89 2b       	or	r24, r25
 4e6:	21 f4       	brne	.+8      	; 0x4f0 <fdevopen+0x54>
 4e8:	f0 93 38 04 	sts	0x0438, r31	; 0x800438 <__iob+0x1>
 4ec:	e0 93 37 04 	sts	0x0437, r30	; 0x800437 <__iob>
 4f0:	20 97       	sbiw	r28, 0x00	; 0
 4f2:	c9 f0       	breq	.+50     	; 0x526 <__stack+0x27>
 4f4:	d1 87       	std	Z+9, r29	; 0x09
 4f6:	c0 87       	std	Z+8, r28	; 0x08
 4f8:	83 81       	ldd	r24, Z+3	; 0x03
 4fa:	82 60       	ori	r24, 0x02	; 2
 4fc:	83 83       	std	Z+3, r24	; 0x03
 4fe:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <__iob+0x2>
 502:	90 91 3a 04 	lds	r25, 0x043A	; 0x80043a <__iob+0x3>
 506:	89 2b       	or	r24, r25
 508:	71 f4       	brne	.+28     	; 0x526 <__stack+0x27>
 50a:	f0 93 3a 04 	sts	0x043A, r31	; 0x80043a <__iob+0x3>
 50e:	e0 93 39 04 	sts	0x0439, r30	; 0x800439 <__iob+0x2>
 512:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <__iob+0x4>
 516:	90 91 3c 04 	lds	r25, 0x043C	; 0x80043c <__iob+0x5>
 51a:	89 2b       	or	r24, r25
 51c:	21 f4       	brne	.+8      	; 0x526 <__stack+0x27>
 51e:	f0 93 3c 04 	sts	0x043C, r31	; 0x80043c <__iob+0x5>
 522:	e0 93 3b 04 	sts	0x043B, r30	; 0x80043b <__iob+0x4>
 526:	cf 01       	movw	r24, r30
 528:	df 91       	pop	r29
 52a:	cf 91       	pop	r28
 52c:	1f 91       	pop	r17
 52e:	0f 91       	pop	r16
 530:	08 95       	ret

00000532 <printf>:
 532:	a0 e0       	ldi	r26, 0x00	; 0
 534:	b0 e0       	ldi	r27, 0x00	; 0
 536:	ef e9       	ldi	r30, 0x9F	; 159
 538:	f2 e0       	ldi	r31, 0x02	; 2
 53a:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__prologue_saves__+0x20>
 53e:	ae 01       	movw	r20, r28
 540:	4b 5f       	subi	r20, 0xFB	; 251
 542:	5f 4f       	sbci	r21, 0xFF	; 255
 544:	fa 01       	movw	r30, r20
 546:	61 91       	ld	r22, Z+
 548:	71 91       	ld	r23, Z+
 54a:	af 01       	movw	r20, r30
 54c:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <__iob+0x2>
 550:	90 91 3a 04 	lds	r25, 0x043A	; 0x80043a <__iob+0x3>
 554:	0e 94 df 02 	call	0x5be	; 0x5be <vfprintf>
 558:	e2 e0       	ldi	r30, 0x02	; 2
 55a:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__epilogue_restores__+0x20>

0000055e <puts>:
 55e:	0f 93       	push	r16
 560:	1f 93       	push	r17
 562:	cf 93       	push	r28
 564:	df 93       	push	r29
 566:	e0 91 39 04 	lds	r30, 0x0439	; 0x800439 <__iob+0x2>
 56a:	f0 91 3a 04 	lds	r31, 0x043A	; 0x80043a <__iob+0x3>
 56e:	23 81       	ldd	r18, Z+3	; 0x03
 570:	21 ff       	sbrs	r18, 1
 572:	1b c0       	rjmp	.+54     	; 0x5aa <puts+0x4c>
 574:	8c 01       	movw	r16, r24
 576:	d0 e0       	ldi	r29, 0x00	; 0
 578:	c0 e0       	ldi	r28, 0x00	; 0
 57a:	f8 01       	movw	r30, r16
 57c:	81 91       	ld	r24, Z+
 57e:	8f 01       	movw	r16, r30
 580:	60 91 39 04 	lds	r22, 0x0439	; 0x800439 <__iob+0x2>
 584:	70 91 3a 04 	lds	r23, 0x043A	; 0x80043a <__iob+0x3>
 588:	db 01       	movw	r26, r22
 58a:	18 96       	adiw	r26, 0x08	; 8
 58c:	ed 91       	ld	r30, X+
 58e:	fc 91       	ld	r31, X
 590:	19 97       	sbiw	r26, 0x09	; 9
 592:	88 23       	and	r24, r24
 594:	31 f0       	breq	.+12     	; 0x5a2 <puts+0x44>
 596:	09 95       	icall
 598:	89 2b       	or	r24, r25
 59a:	79 f3       	breq	.-34     	; 0x57a <puts+0x1c>
 59c:	df ef       	ldi	r29, 0xFF	; 255
 59e:	cf ef       	ldi	r28, 0xFF	; 255
 5a0:	ec cf       	rjmp	.-40     	; 0x57a <puts+0x1c>
 5a2:	8a e0       	ldi	r24, 0x0A	; 10
 5a4:	09 95       	icall
 5a6:	89 2b       	or	r24, r25
 5a8:	19 f0       	breq	.+6      	; 0x5b0 <puts+0x52>
 5aa:	8f ef       	ldi	r24, 0xFF	; 255
 5ac:	9f ef       	ldi	r25, 0xFF	; 255
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <puts+0x56>
 5b0:	8d 2f       	mov	r24, r29
 5b2:	9c 2f       	mov	r25, r28
 5b4:	df 91       	pop	r29
 5b6:	cf 91       	pop	r28
 5b8:	1f 91       	pop	r17
 5ba:	0f 91       	pop	r16
 5bc:	08 95       	ret

000005be <vfprintf>:
 5be:	ab e0       	ldi	r26, 0x0B	; 11
 5c0:	b0 e0       	ldi	r27, 0x00	; 0
 5c2:	e5 ee       	ldi	r30, 0xE5	; 229
 5c4:	f2 e0       	ldi	r31, 0x02	; 2
 5c6:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__prologue_saves__>
 5ca:	6c 01       	movw	r12, r24
 5cc:	7b 01       	movw	r14, r22
 5ce:	8a 01       	movw	r16, r20
 5d0:	fc 01       	movw	r30, r24
 5d2:	17 82       	std	Z+7, r1	; 0x07
 5d4:	16 82       	std	Z+6, r1	; 0x06
 5d6:	83 81       	ldd	r24, Z+3	; 0x03
 5d8:	81 ff       	sbrs	r24, 1
 5da:	cc c1       	rjmp	.+920    	; 0x974 <vfprintf+0x3b6>
 5dc:	ce 01       	movw	r24, r28
 5de:	01 96       	adiw	r24, 0x01	; 1
 5e0:	3c 01       	movw	r6, r24
 5e2:	f6 01       	movw	r30, r12
 5e4:	93 81       	ldd	r25, Z+3	; 0x03
 5e6:	f7 01       	movw	r30, r14
 5e8:	93 fd       	sbrc	r25, 3
 5ea:	85 91       	lpm	r24, Z+
 5ec:	93 ff       	sbrs	r25, 3
 5ee:	81 91       	ld	r24, Z+
 5f0:	7f 01       	movw	r14, r30
 5f2:	88 23       	and	r24, r24
 5f4:	09 f4       	brne	.+2      	; 0x5f8 <vfprintf+0x3a>
 5f6:	ba c1       	rjmp	.+884    	; 0x96c <vfprintf+0x3ae>
 5f8:	85 32       	cpi	r24, 0x25	; 37
 5fa:	39 f4       	brne	.+14     	; 0x60a <vfprintf+0x4c>
 5fc:	93 fd       	sbrc	r25, 3
 5fe:	85 91       	lpm	r24, Z+
 600:	93 ff       	sbrs	r25, 3
 602:	81 91       	ld	r24, Z+
 604:	7f 01       	movw	r14, r30
 606:	85 32       	cpi	r24, 0x25	; 37
 608:	29 f4       	brne	.+10     	; 0x614 <vfprintf+0x56>
 60a:	b6 01       	movw	r22, r12
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 612:	e7 cf       	rjmp	.-50     	; 0x5e2 <vfprintf+0x24>
 614:	91 2c       	mov	r9, r1
 616:	21 2c       	mov	r2, r1
 618:	31 2c       	mov	r3, r1
 61a:	ff e1       	ldi	r31, 0x1F	; 31
 61c:	f3 15       	cp	r31, r3
 61e:	d8 f0       	brcs	.+54     	; 0x656 <vfprintf+0x98>
 620:	8b 32       	cpi	r24, 0x2B	; 43
 622:	79 f0       	breq	.+30     	; 0x642 <vfprintf+0x84>
 624:	38 f4       	brcc	.+14     	; 0x634 <vfprintf+0x76>
 626:	80 32       	cpi	r24, 0x20	; 32
 628:	79 f0       	breq	.+30     	; 0x648 <vfprintf+0x8a>
 62a:	83 32       	cpi	r24, 0x23	; 35
 62c:	a1 f4       	brne	.+40     	; 0x656 <vfprintf+0x98>
 62e:	23 2d       	mov	r18, r3
 630:	20 61       	ori	r18, 0x10	; 16
 632:	1d c0       	rjmp	.+58     	; 0x66e <vfprintf+0xb0>
 634:	8d 32       	cpi	r24, 0x2D	; 45
 636:	61 f0       	breq	.+24     	; 0x650 <vfprintf+0x92>
 638:	80 33       	cpi	r24, 0x30	; 48
 63a:	69 f4       	brne	.+26     	; 0x656 <vfprintf+0x98>
 63c:	23 2d       	mov	r18, r3
 63e:	21 60       	ori	r18, 0x01	; 1
 640:	16 c0       	rjmp	.+44     	; 0x66e <vfprintf+0xb0>
 642:	83 2d       	mov	r24, r3
 644:	82 60       	ori	r24, 0x02	; 2
 646:	38 2e       	mov	r3, r24
 648:	e3 2d       	mov	r30, r3
 64a:	e4 60       	ori	r30, 0x04	; 4
 64c:	3e 2e       	mov	r3, r30
 64e:	2a c0       	rjmp	.+84     	; 0x6a4 <vfprintf+0xe6>
 650:	f3 2d       	mov	r31, r3
 652:	f8 60       	ori	r31, 0x08	; 8
 654:	1d c0       	rjmp	.+58     	; 0x690 <vfprintf+0xd2>
 656:	37 fc       	sbrc	r3, 7
 658:	2d c0       	rjmp	.+90     	; 0x6b4 <vfprintf+0xf6>
 65a:	20 ed       	ldi	r18, 0xD0	; 208
 65c:	28 0f       	add	r18, r24
 65e:	2a 30       	cpi	r18, 0x0A	; 10
 660:	40 f0       	brcs	.+16     	; 0x672 <vfprintf+0xb4>
 662:	8e 32       	cpi	r24, 0x2E	; 46
 664:	b9 f4       	brne	.+46     	; 0x694 <vfprintf+0xd6>
 666:	36 fc       	sbrc	r3, 6
 668:	81 c1       	rjmp	.+770    	; 0x96c <vfprintf+0x3ae>
 66a:	23 2d       	mov	r18, r3
 66c:	20 64       	ori	r18, 0x40	; 64
 66e:	32 2e       	mov	r3, r18
 670:	19 c0       	rjmp	.+50     	; 0x6a4 <vfprintf+0xe6>
 672:	36 fe       	sbrs	r3, 6
 674:	06 c0       	rjmp	.+12     	; 0x682 <vfprintf+0xc4>
 676:	8a e0       	ldi	r24, 0x0A	; 10
 678:	98 9e       	mul	r9, r24
 67a:	20 0d       	add	r18, r0
 67c:	11 24       	eor	r1, r1
 67e:	92 2e       	mov	r9, r18
 680:	11 c0       	rjmp	.+34     	; 0x6a4 <vfprintf+0xe6>
 682:	ea e0       	ldi	r30, 0x0A	; 10
 684:	2e 9e       	mul	r2, r30
 686:	20 0d       	add	r18, r0
 688:	11 24       	eor	r1, r1
 68a:	22 2e       	mov	r2, r18
 68c:	f3 2d       	mov	r31, r3
 68e:	f0 62       	ori	r31, 0x20	; 32
 690:	3f 2e       	mov	r3, r31
 692:	08 c0       	rjmp	.+16     	; 0x6a4 <vfprintf+0xe6>
 694:	8c 36       	cpi	r24, 0x6C	; 108
 696:	21 f4       	brne	.+8      	; 0x6a0 <vfprintf+0xe2>
 698:	83 2d       	mov	r24, r3
 69a:	80 68       	ori	r24, 0x80	; 128
 69c:	38 2e       	mov	r3, r24
 69e:	02 c0       	rjmp	.+4      	; 0x6a4 <vfprintf+0xe6>
 6a0:	88 36       	cpi	r24, 0x68	; 104
 6a2:	41 f4       	brne	.+16     	; 0x6b4 <vfprintf+0xf6>
 6a4:	f7 01       	movw	r30, r14
 6a6:	93 fd       	sbrc	r25, 3
 6a8:	85 91       	lpm	r24, Z+
 6aa:	93 ff       	sbrs	r25, 3
 6ac:	81 91       	ld	r24, Z+
 6ae:	7f 01       	movw	r14, r30
 6b0:	81 11       	cpse	r24, r1
 6b2:	b3 cf       	rjmp	.-154    	; 0x61a <vfprintf+0x5c>
 6b4:	98 2f       	mov	r25, r24
 6b6:	9f 7d       	andi	r25, 0xDF	; 223
 6b8:	95 54       	subi	r25, 0x45	; 69
 6ba:	93 30       	cpi	r25, 0x03	; 3
 6bc:	28 f4       	brcc	.+10     	; 0x6c8 <vfprintf+0x10a>
 6be:	0c 5f       	subi	r16, 0xFC	; 252
 6c0:	1f 4f       	sbci	r17, 0xFF	; 255
 6c2:	9f e3       	ldi	r25, 0x3F	; 63
 6c4:	99 83       	std	Y+1, r25	; 0x01
 6c6:	0d c0       	rjmp	.+26     	; 0x6e2 <vfprintf+0x124>
 6c8:	83 36       	cpi	r24, 0x63	; 99
 6ca:	31 f0       	breq	.+12     	; 0x6d8 <vfprintf+0x11a>
 6cc:	83 37       	cpi	r24, 0x73	; 115
 6ce:	71 f0       	breq	.+28     	; 0x6ec <vfprintf+0x12e>
 6d0:	83 35       	cpi	r24, 0x53	; 83
 6d2:	09 f0       	breq	.+2      	; 0x6d6 <vfprintf+0x118>
 6d4:	59 c0       	rjmp	.+178    	; 0x788 <vfprintf+0x1ca>
 6d6:	21 c0       	rjmp	.+66     	; 0x71a <vfprintf+0x15c>
 6d8:	f8 01       	movw	r30, r16
 6da:	80 81       	ld	r24, Z
 6dc:	89 83       	std	Y+1, r24	; 0x01
 6de:	0e 5f       	subi	r16, 0xFE	; 254
 6e0:	1f 4f       	sbci	r17, 0xFF	; 255
 6e2:	88 24       	eor	r8, r8
 6e4:	83 94       	inc	r8
 6e6:	91 2c       	mov	r9, r1
 6e8:	53 01       	movw	r10, r6
 6ea:	13 c0       	rjmp	.+38     	; 0x712 <vfprintf+0x154>
 6ec:	28 01       	movw	r4, r16
 6ee:	f2 e0       	ldi	r31, 0x02	; 2
 6f0:	4f 0e       	add	r4, r31
 6f2:	51 1c       	adc	r5, r1
 6f4:	f8 01       	movw	r30, r16
 6f6:	a0 80       	ld	r10, Z
 6f8:	b1 80       	ldd	r11, Z+1	; 0x01
 6fa:	36 fe       	sbrs	r3, 6
 6fc:	03 c0       	rjmp	.+6      	; 0x704 <vfprintf+0x146>
 6fe:	69 2d       	mov	r22, r9
 700:	70 e0       	ldi	r23, 0x00	; 0
 702:	02 c0       	rjmp	.+4      	; 0x708 <vfprintf+0x14a>
 704:	6f ef       	ldi	r22, 0xFF	; 255
 706:	7f ef       	ldi	r23, 0xFF	; 255
 708:	c5 01       	movw	r24, r10
 70a:	0e 94 0f 06 	call	0xc1e	; 0xc1e <strnlen>
 70e:	4c 01       	movw	r8, r24
 710:	82 01       	movw	r16, r4
 712:	f3 2d       	mov	r31, r3
 714:	ff 77       	andi	r31, 0x7F	; 127
 716:	3f 2e       	mov	r3, r31
 718:	16 c0       	rjmp	.+44     	; 0x746 <vfprintf+0x188>
 71a:	28 01       	movw	r4, r16
 71c:	22 e0       	ldi	r18, 0x02	; 2
 71e:	42 0e       	add	r4, r18
 720:	51 1c       	adc	r5, r1
 722:	f8 01       	movw	r30, r16
 724:	a0 80       	ld	r10, Z
 726:	b1 80       	ldd	r11, Z+1	; 0x01
 728:	36 fe       	sbrs	r3, 6
 72a:	03 c0       	rjmp	.+6      	; 0x732 <vfprintf+0x174>
 72c:	69 2d       	mov	r22, r9
 72e:	70 e0       	ldi	r23, 0x00	; 0
 730:	02 c0       	rjmp	.+4      	; 0x736 <vfprintf+0x178>
 732:	6f ef       	ldi	r22, 0xFF	; 255
 734:	7f ef       	ldi	r23, 0xFF	; 255
 736:	c5 01       	movw	r24, r10
 738:	0e 94 fd 05 	call	0xbfa	; 0xbfa <strnlen_P>
 73c:	4c 01       	movw	r8, r24
 73e:	f3 2d       	mov	r31, r3
 740:	f0 68       	ori	r31, 0x80	; 128
 742:	3f 2e       	mov	r3, r31
 744:	82 01       	movw	r16, r4
 746:	33 fc       	sbrc	r3, 3
 748:	1b c0       	rjmp	.+54     	; 0x780 <vfprintf+0x1c2>
 74a:	82 2d       	mov	r24, r2
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	88 16       	cp	r8, r24
 750:	99 06       	cpc	r9, r25
 752:	b0 f4       	brcc	.+44     	; 0x780 <vfprintf+0x1c2>
 754:	b6 01       	movw	r22, r12
 756:	80 e2       	ldi	r24, 0x20	; 32
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 75e:	2a 94       	dec	r2
 760:	f4 cf       	rjmp	.-24     	; 0x74a <vfprintf+0x18c>
 762:	f5 01       	movw	r30, r10
 764:	37 fc       	sbrc	r3, 7
 766:	85 91       	lpm	r24, Z+
 768:	37 fe       	sbrs	r3, 7
 76a:	81 91       	ld	r24, Z+
 76c:	5f 01       	movw	r10, r30
 76e:	b6 01       	movw	r22, r12
 770:	90 e0       	ldi	r25, 0x00	; 0
 772:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 776:	21 10       	cpse	r2, r1
 778:	2a 94       	dec	r2
 77a:	21 e0       	ldi	r18, 0x01	; 1
 77c:	82 1a       	sub	r8, r18
 77e:	91 08       	sbc	r9, r1
 780:	81 14       	cp	r8, r1
 782:	91 04       	cpc	r9, r1
 784:	71 f7       	brne	.-36     	; 0x762 <vfprintf+0x1a4>
 786:	e8 c0       	rjmp	.+464    	; 0x958 <vfprintf+0x39a>
 788:	84 36       	cpi	r24, 0x64	; 100
 78a:	11 f0       	breq	.+4      	; 0x790 <vfprintf+0x1d2>
 78c:	89 36       	cpi	r24, 0x69	; 105
 78e:	41 f5       	brne	.+80     	; 0x7e0 <vfprintf+0x222>
 790:	f8 01       	movw	r30, r16
 792:	37 fe       	sbrs	r3, 7
 794:	07 c0       	rjmp	.+14     	; 0x7a4 <vfprintf+0x1e6>
 796:	60 81       	ld	r22, Z
 798:	71 81       	ldd	r23, Z+1	; 0x01
 79a:	82 81       	ldd	r24, Z+2	; 0x02
 79c:	93 81       	ldd	r25, Z+3	; 0x03
 79e:	0c 5f       	subi	r16, 0xFC	; 252
 7a0:	1f 4f       	sbci	r17, 0xFF	; 255
 7a2:	08 c0       	rjmp	.+16     	; 0x7b4 <vfprintf+0x1f6>
 7a4:	60 81       	ld	r22, Z
 7a6:	71 81       	ldd	r23, Z+1	; 0x01
 7a8:	07 2e       	mov	r0, r23
 7aa:	00 0c       	add	r0, r0
 7ac:	88 0b       	sbc	r24, r24
 7ae:	99 0b       	sbc	r25, r25
 7b0:	0e 5f       	subi	r16, 0xFE	; 254
 7b2:	1f 4f       	sbci	r17, 0xFF	; 255
 7b4:	f3 2d       	mov	r31, r3
 7b6:	ff 76       	andi	r31, 0x6F	; 111
 7b8:	3f 2e       	mov	r3, r31
 7ba:	97 ff       	sbrs	r25, 7
 7bc:	09 c0       	rjmp	.+18     	; 0x7d0 <vfprintf+0x212>
 7be:	90 95       	com	r25
 7c0:	80 95       	com	r24
 7c2:	70 95       	com	r23
 7c4:	61 95       	neg	r22
 7c6:	7f 4f       	sbci	r23, 0xFF	; 255
 7c8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ca:	9f 4f       	sbci	r25, 0xFF	; 255
 7cc:	f0 68       	ori	r31, 0x80	; 128
 7ce:	3f 2e       	mov	r3, r31
 7d0:	2a e0       	ldi	r18, 0x0A	; 10
 7d2:	30 e0       	ldi	r19, 0x00	; 0
 7d4:	a3 01       	movw	r20, r6
 7d6:	0e 94 56 06 	call	0xcac	; 0xcac <__ultoa_invert>
 7da:	88 2e       	mov	r8, r24
 7dc:	86 18       	sub	r8, r6
 7de:	45 c0       	rjmp	.+138    	; 0x86a <vfprintf+0x2ac>
 7e0:	85 37       	cpi	r24, 0x75	; 117
 7e2:	31 f4       	brne	.+12     	; 0x7f0 <vfprintf+0x232>
 7e4:	23 2d       	mov	r18, r3
 7e6:	2f 7e       	andi	r18, 0xEF	; 239
 7e8:	b2 2e       	mov	r11, r18
 7ea:	2a e0       	ldi	r18, 0x0A	; 10
 7ec:	30 e0       	ldi	r19, 0x00	; 0
 7ee:	25 c0       	rjmp	.+74     	; 0x83a <vfprintf+0x27c>
 7f0:	93 2d       	mov	r25, r3
 7f2:	99 7f       	andi	r25, 0xF9	; 249
 7f4:	b9 2e       	mov	r11, r25
 7f6:	8f 36       	cpi	r24, 0x6F	; 111
 7f8:	c1 f0       	breq	.+48     	; 0x82a <vfprintf+0x26c>
 7fa:	18 f4       	brcc	.+6      	; 0x802 <vfprintf+0x244>
 7fc:	88 35       	cpi	r24, 0x58	; 88
 7fe:	79 f0       	breq	.+30     	; 0x81e <vfprintf+0x260>
 800:	b5 c0       	rjmp	.+362    	; 0x96c <vfprintf+0x3ae>
 802:	80 37       	cpi	r24, 0x70	; 112
 804:	19 f0       	breq	.+6      	; 0x80c <vfprintf+0x24e>
 806:	88 37       	cpi	r24, 0x78	; 120
 808:	21 f0       	breq	.+8      	; 0x812 <vfprintf+0x254>
 80a:	b0 c0       	rjmp	.+352    	; 0x96c <vfprintf+0x3ae>
 80c:	e9 2f       	mov	r30, r25
 80e:	e0 61       	ori	r30, 0x10	; 16
 810:	be 2e       	mov	r11, r30
 812:	b4 fe       	sbrs	r11, 4
 814:	0d c0       	rjmp	.+26     	; 0x830 <vfprintf+0x272>
 816:	fb 2d       	mov	r31, r11
 818:	f4 60       	ori	r31, 0x04	; 4
 81a:	bf 2e       	mov	r11, r31
 81c:	09 c0       	rjmp	.+18     	; 0x830 <vfprintf+0x272>
 81e:	34 fe       	sbrs	r3, 4
 820:	0a c0       	rjmp	.+20     	; 0x836 <vfprintf+0x278>
 822:	29 2f       	mov	r18, r25
 824:	26 60       	ori	r18, 0x06	; 6
 826:	b2 2e       	mov	r11, r18
 828:	06 c0       	rjmp	.+12     	; 0x836 <vfprintf+0x278>
 82a:	28 e0       	ldi	r18, 0x08	; 8
 82c:	30 e0       	ldi	r19, 0x00	; 0
 82e:	05 c0       	rjmp	.+10     	; 0x83a <vfprintf+0x27c>
 830:	20 e1       	ldi	r18, 0x10	; 16
 832:	30 e0       	ldi	r19, 0x00	; 0
 834:	02 c0       	rjmp	.+4      	; 0x83a <vfprintf+0x27c>
 836:	20 e1       	ldi	r18, 0x10	; 16
 838:	32 e0       	ldi	r19, 0x02	; 2
 83a:	f8 01       	movw	r30, r16
 83c:	b7 fe       	sbrs	r11, 7
 83e:	07 c0       	rjmp	.+14     	; 0x84e <vfprintf+0x290>
 840:	60 81       	ld	r22, Z
 842:	71 81       	ldd	r23, Z+1	; 0x01
 844:	82 81       	ldd	r24, Z+2	; 0x02
 846:	93 81       	ldd	r25, Z+3	; 0x03
 848:	0c 5f       	subi	r16, 0xFC	; 252
 84a:	1f 4f       	sbci	r17, 0xFF	; 255
 84c:	06 c0       	rjmp	.+12     	; 0x85a <vfprintf+0x29c>
 84e:	60 81       	ld	r22, Z
 850:	71 81       	ldd	r23, Z+1	; 0x01
 852:	80 e0       	ldi	r24, 0x00	; 0
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	0e 5f       	subi	r16, 0xFE	; 254
 858:	1f 4f       	sbci	r17, 0xFF	; 255
 85a:	a3 01       	movw	r20, r6
 85c:	0e 94 56 06 	call	0xcac	; 0xcac <__ultoa_invert>
 860:	88 2e       	mov	r8, r24
 862:	86 18       	sub	r8, r6
 864:	fb 2d       	mov	r31, r11
 866:	ff 77       	andi	r31, 0x7F	; 127
 868:	3f 2e       	mov	r3, r31
 86a:	36 fe       	sbrs	r3, 6
 86c:	0d c0       	rjmp	.+26     	; 0x888 <vfprintf+0x2ca>
 86e:	23 2d       	mov	r18, r3
 870:	2e 7f       	andi	r18, 0xFE	; 254
 872:	a2 2e       	mov	r10, r18
 874:	89 14       	cp	r8, r9
 876:	58 f4       	brcc	.+22     	; 0x88e <vfprintf+0x2d0>
 878:	34 fe       	sbrs	r3, 4
 87a:	0b c0       	rjmp	.+22     	; 0x892 <vfprintf+0x2d4>
 87c:	32 fc       	sbrc	r3, 2
 87e:	09 c0       	rjmp	.+18     	; 0x892 <vfprintf+0x2d4>
 880:	83 2d       	mov	r24, r3
 882:	8e 7e       	andi	r24, 0xEE	; 238
 884:	a8 2e       	mov	r10, r24
 886:	05 c0       	rjmp	.+10     	; 0x892 <vfprintf+0x2d4>
 888:	b8 2c       	mov	r11, r8
 88a:	a3 2c       	mov	r10, r3
 88c:	03 c0       	rjmp	.+6      	; 0x894 <vfprintf+0x2d6>
 88e:	b8 2c       	mov	r11, r8
 890:	01 c0       	rjmp	.+2      	; 0x894 <vfprintf+0x2d6>
 892:	b9 2c       	mov	r11, r9
 894:	a4 fe       	sbrs	r10, 4
 896:	0f c0       	rjmp	.+30     	; 0x8b6 <vfprintf+0x2f8>
 898:	fe 01       	movw	r30, r28
 89a:	e8 0d       	add	r30, r8
 89c:	f1 1d       	adc	r31, r1
 89e:	80 81       	ld	r24, Z
 8a0:	80 33       	cpi	r24, 0x30	; 48
 8a2:	21 f4       	brne	.+8      	; 0x8ac <vfprintf+0x2ee>
 8a4:	9a 2d       	mov	r25, r10
 8a6:	99 7e       	andi	r25, 0xE9	; 233
 8a8:	a9 2e       	mov	r10, r25
 8aa:	09 c0       	rjmp	.+18     	; 0x8be <vfprintf+0x300>
 8ac:	a2 fe       	sbrs	r10, 2
 8ae:	06 c0       	rjmp	.+12     	; 0x8bc <vfprintf+0x2fe>
 8b0:	b3 94       	inc	r11
 8b2:	b3 94       	inc	r11
 8b4:	04 c0       	rjmp	.+8      	; 0x8be <vfprintf+0x300>
 8b6:	8a 2d       	mov	r24, r10
 8b8:	86 78       	andi	r24, 0x86	; 134
 8ba:	09 f0       	breq	.+2      	; 0x8be <vfprintf+0x300>
 8bc:	b3 94       	inc	r11
 8be:	a3 fc       	sbrc	r10, 3
 8c0:	11 c0       	rjmp	.+34     	; 0x8e4 <vfprintf+0x326>
 8c2:	a0 fe       	sbrs	r10, 0
 8c4:	06 c0       	rjmp	.+12     	; 0x8d2 <vfprintf+0x314>
 8c6:	b2 14       	cp	r11, r2
 8c8:	88 f4       	brcc	.+34     	; 0x8ec <vfprintf+0x32e>
 8ca:	28 0c       	add	r2, r8
 8cc:	92 2c       	mov	r9, r2
 8ce:	9b 18       	sub	r9, r11
 8d0:	0e c0       	rjmp	.+28     	; 0x8ee <vfprintf+0x330>
 8d2:	b2 14       	cp	r11, r2
 8d4:	60 f4       	brcc	.+24     	; 0x8ee <vfprintf+0x330>
 8d6:	b6 01       	movw	r22, r12
 8d8:	80 e2       	ldi	r24, 0x20	; 32
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 8e0:	b3 94       	inc	r11
 8e2:	f7 cf       	rjmp	.-18     	; 0x8d2 <vfprintf+0x314>
 8e4:	b2 14       	cp	r11, r2
 8e6:	18 f4       	brcc	.+6      	; 0x8ee <vfprintf+0x330>
 8e8:	2b 18       	sub	r2, r11
 8ea:	02 c0       	rjmp	.+4      	; 0x8f0 <vfprintf+0x332>
 8ec:	98 2c       	mov	r9, r8
 8ee:	21 2c       	mov	r2, r1
 8f0:	a4 fe       	sbrs	r10, 4
 8f2:	10 c0       	rjmp	.+32     	; 0x914 <vfprintf+0x356>
 8f4:	b6 01       	movw	r22, r12
 8f6:	80 e3       	ldi	r24, 0x30	; 48
 8f8:	90 e0       	ldi	r25, 0x00	; 0
 8fa:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 8fe:	a2 fe       	sbrs	r10, 2
 900:	17 c0       	rjmp	.+46     	; 0x930 <vfprintf+0x372>
 902:	a1 fc       	sbrc	r10, 1
 904:	03 c0       	rjmp	.+6      	; 0x90c <vfprintf+0x34e>
 906:	88 e7       	ldi	r24, 0x78	; 120
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	02 c0       	rjmp	.+4      	; 0x910 <vfprintf+0x352>
 90c:	88 e5       	ldi	r24, 0x58	; 88
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	b6 01       	movw	r22, r12
 912:	0c c0       	rjmp	.+24     	; 0x92c <vfprintf+0x36e>
 914:	8a 2d       	mov	r24, r10
 916:	86 78       	andi	r24, 0x86	; 134
 918:	59 f0       	breq	.+22     	; 0x930 <vfprintf+0x372>
 91a:	a1 fe       	sbrs	r10, 1
 91c:	02 c0       	rjmp	.+4      	; 0x922 <vfprintf+0x364>
 91e:	8b e2       	ldi	r24, 0x2B	; 43
 920:	01 c0       	rjmp	.+2      	; 0x924 <vfprintf+0x366>
 922:	80 e2       	ldi	r24, 0x20	; 32
 924:	a7 fc       	sbrc	r10, 7
 926:	8d e2       	ldi	r24, 0x2D	; 45
 928:	b6 01       	movw	r22, r12
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 930:	89 14       	cp	r8, r9
 932:	38 f4       	brcc	.+14     	; 0x942 <vfprintf+0x384>
 934:	b6 01       	movw	r22, r12
 936:	80 e3       	ldi	r24, 0x30	; 48
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 93e:	9a 94       	dec	r9
 940:	f7 cf       	rjmp	.-18     	; 0x930 <vfprintf+0x372>
 942:	8a 94       	dec	r8
 944:	f3 01       	movw	r30, r6
 946:	e8 0d       	add	r30, r8
 948:	f1 1d       	adc	r31, r1
 94a:	80 81       	ld	r24, Z
 94c:	b6 01       	movw	r22, r12
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 954:	81 10       	cpse	r8, r1
 956:	f5 cf       	rjmp	.-22     	; 0x942 <vfprintf+0x384>
 958:	22 20       	and	r2, r2
 95a:	09 f4       	brne	.+2      	; 0x95e <vfprintf+0x3a0>
 95c:	42 ce       	rjmp	.-892    	; 0x5e2 <vfprintf+0x24>
 95e:	b6 01       	movw	r22, r12
 960:	80 e2       	ldi	r24, 0x20	; 32
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	0e 94 1a 06 	call	0xc34	; 0xc34 <fputc>
 968:	2a 94       	dec	r2
 96a:	f6 cf       	rjmp	.-20     	; 0x958 <vfprintf+0x39a>
 96c:	f6 01       	movw	r30, r12
 96e:	86 81       	ldd	r24, Z+6	; 0x06
 970:	97 81       	ldd	r25, Z+7	; 0x07
 972:	02 c0       	rjmp	.+4      	; 0x978 <vfprintf+0x3ba>
 974:	8f ef       	ldi	r24, 0xFF	; 255
 976:	9f ef       	ldi	r25, 0xFF	; 255
 978:	2b 96       	adiw	r28, 0x0b	; 11
 97a:	e2 e1       	ldi	r30, 0x12	; 18
 97c:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <__epilogue_restores__>

00000980 <calloc>:
 980:	0f 93       	push	r16
 982:	1f 93       	push	r17
 984:	cf 93       	push	r28
 986:	df 93       	push	r29
 988:	86 9f       	mul	r24, r22
 98a:	80 01       	movw	r16, r0
 98c:	87 9f       	mul	r24, r23
 98e:	10 0d       	add	r17, r0
 990:	96 9f       	mul	r25, r22
 992:	10 0d       	add	r17, r0
 994:	11 24       	eor	r1, r1
 996:	c8 01       	movw	r24, r16
 998:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <malloc>
 99c:	ec 01       	movw	r28, r24
 99e:	00 97       	sbiw	r24, 0x00	; 0
 9a0:	29 f0       	breq	.+10     	; 0x9ac <calloc+0x2c>
 9a2:	a8 01       	movw	r20, r16
 9a4:	60 e0       	ldi	r22, 0x00	; 0
 9a6:	70 e0       	ldi	r23, 0x00	; 0
 9a8:	0e 94 08 06 	call	0xc10	; 0xc10 <memset>
 9ac:	ce 01       	movw	r24, r28
 9ae:	df 91       	pop	r29
 9b0:	cf 91       	pop	r28
 9b2:	1f 91       	pop	r17
 9b4:	0f 91       	pop	r16
 9b6:	08 95       	ret

000009b8 <malloc>:
 9b8:	0f 93       	push	r16
 9ba:	1f 93       	push	r17
 9bc:	cf 93       	push	r28
 9be:	df 93       	push	r29
 9c0:	82 30       	cpi	r24, 0x02	; 2
 9c2:	91 05       	cpc	r25, r1
 9c4:	10 f4       	brcc	.+4      	; 0x9ca <malloc+0x12>
 9c6:	82 e0       	ldi	r24, 0x02	; 2
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	e0 91 3f 04 	lds	r30, 0x043F	; 0x80043f <__flp>
 9ce:	f0 91 40 04 	lds	r31, 0x0440	; 0x800440 <__flp+0x1>
 9d2:	20 e0       	ldi	r18, 0x00	; 0
 9d4:	30 e0       	ldi	r19, 0x00	; 0
 9d6:	a0 e0       	ldi	r26, 0x00	; 0
 9d8:	b0 e0       	ldi	r27, 0x00	; 0
 9da:	30 97       	sbiw	r30, 0x00	; 0
 9dc:	19 f1       	breq	.+70     	; 0xa24 <malloc+0x6c>
 9de:	40 81       	ld	r20, Z
 9e0:	51 81       	ldd	r21, Z+1	; 0x01
 9e2:	02 81       	ldd	r16, Z+2	; 0x02
 9e4:	13 81       	ldd	r17, Z+3	; 0x03
 9e6:	48 17       	cp	r20, r24
 9e8:	59 07       	cpc	r21, r25
 9ea:	c8 f0       	brcs	.+50     	; 0xa1e <malloc+0x66>
 9ec:	84 17       	cp	r24, r20
 9ee:	95 07       	cpc	r25, r21
 9f0:	69 f4       	brne	.+26     	; 0xa0c <malloc+0x54>
 9f2:	10 97       	sbiw	r26, 0x00	; 0
 9f4:	31 f0       	breq	.+12     	; 0xa02 <malloc+0x4a>
 9f6:	12 96       	adiw	r26, 0x02	; 2
 9f8:	0c 93       	st	X, r16
 9fa:	12 97       	sbiw	r26, 0x02	; 2
 9fc:	13 96       	adiw	r26, 0x03	; 3
 9fe:	1c 93       	st	X, r17
 a00:	27 c0       	rjmp	.+78     	; 0xa50 <malloc+0x98>
 a02:	00 93 3f 04 	sts	0x043F, r16	; 0x80043f <__flp>
 a06:	10 93 40 04 	sts	0x0440, r17	; 0x800440 <__flp+0x1>
 a0a:	22 c0       	rjmp	.+68     	; 0xa50 <malloc+0x98>
 a0c:	21 15       	cp	r18, r1
 a0e:	31 05       	cpc	r19, r1
 a10:	19 f0       	breq	.+6      	; 0xa18 <malloc+0x60>
 a12:	42 17       	cp	r20, r18
 a14:	53 07       	cpc	r21, r19
 a16:	18 f4       	brcc	.+6      	; 0xa1e <malloc+0x66>
 a18:	9a 01       	movw	r18, r20
 a1a:	bd 01       	movw	r22, r26
 a1c:	ef 01       	movw	r28, r30
 a1e:	df 01       	movw	r26, r30
 a20:	f8 01       	movw	r30, r16
 a22:	db cf       	rjmp	.-74     	; 0x9da <malloc+0x22>
 a24:	21 15       	cp	r18, r1
 a26:	31 05       	cpc	r19, r1
 a28:	f9 f0       	breq	.+62     	; 0xa68 <malloc+0xb0>
 a2a:	28 1b       	sub	r18, r24
 a2c:	39 0b       	sbc	r19, r25
 a2e:	24 30       	cpi	r18, 0x04	; 4
 a30:	31 05       	cpc	r19, r1
 a32:	80 f4       	brcc	.+32     	; 0xa54 <malloc+0x9c>
 a34:	8a 81       	ldd	r24, Y+2	; 0x02
 a36:	9b 81       	ldd	r25, Y+3	; 0x03
 a38:	61 15       	cp	r22, r1
 a3a:	71 05       	cpc	r23, r1
 a3c:	21 f0       	breq	.+8      	; 0xa46 <malloc+0x8e>
 a3e:	fb 01       	movw	r30, r22
 a40:	93 83       	std	Z+3, r25	; 0x03
 a42:	82 83       	std	Z+2, r24	; 0x02
 a44:	04 c0       	rjmp	.+8      	; 0xa4e <malloc+0x96>
 a46:	90 93 40 04 	sts	0x0440, r25	; 0x800440 <__flp+0x1>
 a4a:	80 93 3f 04 	sts	0x043F, r24	; 0x80043f <__flp>
 a4e:	fe 01       	movw	r30, r28
 a50:	32 96       	adiw	r30, 0x02	; 2
 a52:	44 c0       	rjmp	.+136    	; 0xadc <malloc+0x124>
 a54:	fe 01       	movw	r30, r28
 a56:	e2 0f       	add	r30, r18
 a58:	f3 1f       	adc	r31, r19
 a5a:	81 93       	st	Z+, r24
 a5c:	91 93       	st	Z+, r25
 a5e:	22 50       	subi	r18, 0x02	; 2
 a60:	31 09       	sbc	r19, r1
 a62:	39 83       	std	Y+1, r19	; 0x01
 a64:	28 83       	st	Y, r18
 a66:	3a c0       	rjmp	.+116    	; 0xadc <malloc+0x124>
 a68:	20 91 3d 04 	lds	r18, 0x043D	; 0x80043d <__brkval>
 a6c:	30 91 3e 04 	lds	r19, 0x043E	; 0x80043e <__brkval+0x1>
 a70:	23 2b       	or	r18, r19
 a72:	41 f4       	brne	.+16     	; 0xa84 <malloc+0xcc>
 a74:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 a78:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 a7c:	30 93 3e 04 	sts	0x043E, r19	; 0x80043e <__brkval+0x1>
 a80:	20 93 3d 04 	sts	0x043D, r18	; 0x80043d <__brkval>
 a84:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 a88:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 a8c:	21 15       	cp	r18, r1
 a8e:	31 05       	cpc	r19, r1
 a90:	41 f4       	brne	.+16     	; 0xaa2 <malloc+0xea>
 a92:	2d b7       	in	r18, 0x3d	; 61
 a94:	3e b7       	in	r19, 0x3e	; 62
 a96:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 a9a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 a9e:	24 1b       	sub	r18, r20
 aa0:	35 0b       	sbc	r19, r21
 aa2:	e0 91 3d 04 	lds	r30, 0x043D	; 0x80043d <__brkval>
 aa6:	f0 91 3e 04 	lds	r31, 0x043E	; 0x80043e <__brkval+0x1>
 aaa:	e2 17       	cp	r30, r18
 aac:	f3 07       	cpc	r31, r19
 aae:	a0 f4       	brcc	.+40     	; 0xad8 <malloc+0x120>
 ab0:	2e 1b       	sub	r18, r30
 ab2:	3f 0b       	sbc	r19, r31
 ab4:	28 17       	cp	r18, r24
 ab6:	39 07       	cpc	r19, r25
 ab8:	78 f0       	brcs	.+30     	; 0xad8 <malloc+0x120>
 aba:	ac 01       	movw	r20, r24
 abc:	4e 5f       	subi	r20, 0xFE	; 254
 abe:	5f 4f       	sbci	r21, 0xFF	; 255
 ac0:	24 17       	cp	r18, r20
 ac2:	35 07       	cpc	r19, r21
 ac4:	48 f0       	brcs	.+18     	; 0xad8 <malloc+0x120>
 ac6:	4e 0f       	add	r20, r30
 ac8:	5f 1f       	adc	r21, r31
 aca:	50 93 3e 04 	sts	0x043E, r21	; 0x80043e <__brkval+0x1>
 ace:	40 93 3d 04 	sts	0x043D, r20	; 0x80043d <__brkval>
 ad2:	81 93       	st	Z+, r24
 ad4:	91 93       	st	Z+, r25
 ad6:	02 c0       	rjmp	.+4      	; 0xadc <malloc+0x124>
 ad8:	e0 e0       	ldi	r30, 0x00	; 0
 ada:	f0 e0       	ldi	r31, 0x00	; 0
 adc:	cf 01       	movw	r24, r30
 ade:	df 91       	pop	r29
 ae0:	cf 91       	pop	r28
 ae2:	1f 91       	pop	r17
 ae4:	0f 91       	pop	r16
 ae6:	08 95       	ret

00000ae8 <free>:
 ae8:	cf 93       	push	r28
 aea:	df 93       	push	r29
 aec:	00 97       	sbiw	r24, 0x00	; 0
 aee:	09 f4       	brne	.+2      	; 0xaf2 <free+0xa>
 af0:	81 c0       	rjmp	.+258    	; 0xbf4 <free+0x10c>
 af2:	fc 01       	movw	r30, r24
 af4:	32 97       	sbiw	r30, 0x02	; 2
 af6:	13 82       	std	Z+3, r1	; 0x03
 af8:	12 82       	std	Z+2, r1	; 0x02
 afa:	a0 91 3f 04 	lds	r26, 0x043F	; 0x80043f <__flp>
 afe:	b0 91 40 04 	lds	r27, 0x0440	; 0x800440 <__flp+0x1>
 b02:	10 97       	sbiw	r26, 0x00	; 0
 b04:	81 f4       	brne	.+32     	; 0xb26 <free+0x3e>
 b06:	20 81       	ld	r18, Z
 b08:	31 81       	ldd	r19, Z+1	; 0x01
 b0a:	82 0f       	add	r24, r18
 b0c:	93 1f       	adc	r25, r19
 b0e:	20 91 3d 04 	lds	r18, 0x043D	; 0x80043d <__brkval>
 b12:	30 91 3e 04 	lds	r19, 0x043E	; 0x80043e <__brkval+0x1>
 b16:	28 17       	cp	r18, r24
 b18:	39 07       	cpc	r19, r25
 b1a:	51 f5       	brne	.+84     	; 0xb70 <free+0x88>
 b1c:	f0 93 3e 04 	sts	0x043E, r31	; 0x80043e <__brkval+0x1>
 b20:	e0 93 3d 04 	sts	0x043D, r30	; 0x80043d <__brkval>
 b24:	67 c0       	rjmp	.+206    	; 0xbf4 <free+0x10c>
 b26:	ed 01       	movw	r28, r26
 b28:	20 e0       	ldi	r18, 0x00	; 0
 b2a:	30 e0       	ldi	r19, 0x00	; 0
 b2c:	ce 17       	cp	r28, r30
 b2e:	df 07       	cpc	r29, r31
 b30:	40 f4       	brcc	.+16     	; 0xb42 <free+0x5a>
 b32:	4a 81       	ldd	r20, Y+2	; 0x02
 b34:	5b 81       	ldd	r21, Y+3	; 0x03
 b36:	9e 01       	movw	r18, r28
 b38:	41 15       	cp	r20, r1
 b3a:	51 05       	cpc	r21, r1
 b3c:	f1 f0       	breq	.+60     	; 0xb7a <free+0x92>
 b3e:	ea 01       	movw	r28, r20
 b40:	f5 cf       	rjmp	.-22     	; 0xb2c <free+0x44>
 b42:	d3 83       	std	Z+3, r29	; 0x03
 b44:	c2 83       	std	Z+2, r28	; 0x02
 b46:	40 81       	ld	r20, Z
 b48:	51 81       	ldd	r21, Z+1	; 0x01
 b4a:	84 0f       	add	r24, r20
 b4c:	95 1f       	adc	r25, r21
 b4e:	c8 17       	cp	r28, r24
 b50:	d9 07       	cpc	r29, r25
 b52:	59 f4       	brne	.+22     	; 0xb6a <free+0x82>
 b54:	88 81       	ld	r24, Y
 b56:	99 81       	ldd	r25, Y+1	; 0x01
 b58:	84 0f       	add	r24, r20
 b5a:	95 1f       	adc	r25, r21
 b5c:	02 96       	adiw	r24, 0x02	; 2
 b5e:	91 83       	std	Z+1, r25	; 0x01
 b60:	80 83       	st	Z, r24
 b62:	8a 81       	ldd	r24, Y+2	; 0x02
 b64:	9b 81       	ldd	r25, Y+3	; 0x03
 b66:	93 83       	std	Z+3, r25	; 0x03
 b68:	82 83       	std	Z+2, r24	; 0x02
 b6a:	21 15       	cp	r18, r1
 b6c:	31 05       	cpc	r19, r1
 b6e:	29 f4       	brne	.+10     	; 0xb7a <free+0x92>
 b70:	f0 93 40 04 	sts	0x0440, r31	; 0x800440 <__flp+0x1>
 b74:	e0 93 3f 04 	sts	0x043F, r30	; 0x80043f <__flp>
 b78:	3d c0       	rjmp	.+122    	; 0xbf4 <free+0x10c>
 b7a:	e9 01       	movw	r28, r18
 b7c:	fb 83       	std	Y+3, r31	; 0x03
 b7e:	ea 83       	std	Y+2, r30	; 0x02
 b80:	49 91       	ld	r20, Y+
 b82:	59 91       	ld	r21, Y+
 b84:	c4 0f       	add	r28, r20
 b86:	d5 1f       	adc	r29, r21
 b88:	ec 17       	cp	r30, r28
 b8a:	fd 07       	cpc	r31, r29
 b8c:	61 f4       	brne	.+24     	; 0xba6 <free+0xbe>
 b8e:	80 81       	ld	r24, Z
 b90:	91 81       	ldd	r25, Z+1	; 0x01
 b92:	84 0f       	add	r24, r20
 b94:	95 1f       	adc	r25, r21
 b96:	02 96       	adiw	r24, 0x02	; 2
 b98:	e9 01       	movw	r28, r18
 b9a:	99 83       	std	Y+1, r25	; 0x01
 b9c:	88 83       	st	Y, r24
 b9e:	82 81       	ldd	r24, Z+2	; 0x02
 ba0:	93 81       	ldd	r25, Z+3	; 0x03
 ba2:	9b 83       	std	Y+3, r25	; 0x03
 ba4:	8a 83       	std	Y+2, r24	; 0x02
 ba6:	e0 e0       	ldi	r30, 0x00	; 0
 ba8:	f0 e0       	ldi	r31, 0x00	; 0
 baa:	12 96       	adiw	r26, 0x02	; 2
 bac:	8d 91       	ld	r24, X+
 bae:	9c 91       	ld	r25, X
 bb0:	13 97       	sbiw	r26, 0x03	; 3
 bb2:	00 97       	sbiw	r24, 0x00	; 0
 bb4:	19 f0       	breq	.+6      	; 0xbbc <free+0xd4>
 bb6:	fd 01       	movw	r30, r26
 bb8:	dc 01       	movw	r26, r24
 bba:	f7 cf       	rjmp	.-18     	; 0xbaa <free+0xc2>
 bbc:	8d 91       	ld	r24, X+
 bbe:	9c 91       	ld	r25, X
 bc0:	11 97       	sbiw	r26, 0x01	; 1
 bc2:	9d 01       	movw	r18, r26
 bc4:	2e 5f       	subi	r18, 0xFE	; 254
 bc6:	3f 4f       	sbci	r19, 0xFF	; 255
 bc8:	82 0f       	add	r24, r18
 bca:	93 1f       	adc	r25, r19
 bcc:	20 91 3d 04 	lds	r18, 0x043D	; 0x80043d <__brkval>
 bd0:	30 91 3e 04 	lds	r19, 0x043E	; 0x80043e <__brkval+0x1>
 bd4:	28 17       	cp	r18, r24
 bd6:	39 07       	cpc	r19, r25
 bd8:	69 f4       	brne	.+26     	; 0xbf4 <free+0x10c>
 bda:	30 97       	sbiw	r30, 0x00	; 0
 bdc:	29 f4       	brne	.+10     	; 0xbe8 <free+0x100>
 bde:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <__flp+0x1>
 be2:	10 92 3f 04 	sts	0x043F, r1	; 0x80043f <__flp>
 be6:	02 c0       	rjmp	.+4      	; 0xbec <free+0x104>
 be8:	13 82       	std	Z+3, r1	; 0x03
 bea:	12 82       	std	Z+2, r1	; 0x02
 bec:	b0 93 3e 04 	sts	0x043E, r27	; 0x80043e <__brkval+0x1>
 bf0:	a0 93 3d 04 	sts	0x043D, r26	; 0x80043d <__brkval>
 bf4:	df 91       	pop	r29
 bf6:	cf 91       	pop	r28
 bf8:	08 95       	ret

00000bfa <strnlen_P>:
 bfa:	fc 01       	movw	r30, r24
 bfc:	05 90       	lpm	r0, Z+
 bfe:	61 50       	subi	r22, 0x01	; 1
 c00:	70 40       	sbci	r23, 0x00	; 0
 c02:	01 10       	cpse	r0, r1
 c04:	d8 f7       	brcc	.-10     	; 0xbfc <strnlen_P+0x2>
 c06:	80 95       	com	r24
 c08:	90 95       	com	r25
 c0a:	8e 0f       	add	r24, r30
 c0c:	9f 1f       	adc	r25, r31
 c0e:	08 95       	ret

00000c10 <memset>:
 c10:	dc 01       	movw	r26, r24
 c12:	01 c0       	rjmp	.+2      	; 0xc16 <memset+0x6>
 c14:	6d 93       	st	X+, r22
 c16:	41 50       	subi	r20, 0x01	; 1
 c18:	50 40       	sbci	r21, 0x00	; 0
 c1a:	e0 f7       	brcc	.-8      	; 0xc14 <memset+0x4>
 c1c:	08 95       	ret

00000c1e <strnlen>:
 c1e:	fc 01       	movw	r30, r24
 c20:	61 50       	subi	r22, 0x01	; 1
 c22:	70 40       	sbci	r23, 0x00	; 0
 c24:	01 90       	ld	r0, Z+
 c26:	01 10       	cpse	r0, r1
 c28:	d8 f7       	brcc	.-10     	; 0xc20 <strnlen+0x2>
 c2a:	80 95       	com	r24
 c2c:	90 95       	com	r25
 c2e:	8e 0f       	add	r24, r30
 c30:	9f 1f       	adc	r25, r31
 c32:	08 95       	ret

00000c34 <fputc>:
 c34:	0f 93       	push	r16
 c36:	1f 93       	push	r17
 c38:	cf 93       	push	r28
 c3a:	df 93       	push	r29
 c3c:	fb 01       	movw	r30, r22
 c3e:	23 81       	ldd	r18, Z+3	; 0x03
 c40:	21 fd       	sbrc	r18, 1
 c42:	03 c0       	rjmp	.+6      	; 0xc4a <fputc+0x16>
 c44:	8f ef       	ldi	r24, 0xFF	; 255
 c46:	9f ef       	ldi	r25, 0xFF	; 255
 c48:	2c c0       	rjmp	.+88     	; 0xca2 <fputc+0x6e>
 c4a:	22 ff       	sbrs	r18, 2
 c4c:	16 c0       	rjmp	.+44     	; 0xc7a <fputc+0x46>
 c4e:	46 81       	ldd	r20, Z+6	; 0x06
 c50:	57 81       	ldd	r21, Z+7	; 0x07
 c52:	24 81       	ldd	r18, Z+4	; 0x04
 c54:	35 81       	ldd	r19, Z+5	; 0x05
 c56:	42 17       	cp	r20, r18
 c58:	53 07       	cpc	r21, r19
 c5a:	44 f4       	brge	.+16     	; 0xc6c <fputc+0x38>
 c5c:	a0 81       	ld	r26, Z
 c5e:	b1 81       	ldd	r27, Z+1	; 0x01
 c60:	9d 01       	movw	r18, r26
 c62:	2f 5f       	subi	r18, 0xFF	; 255
 c64:	3f 4f       	sbci	r19, 0xFF	; 255
 c66:	31 83       	std	Z+1, r19	; 0x01
 c68:	20 83       	st	Z, r18
 c6a:	8c 93       	st	X, r24
 c6c:	26 81       	ldd	r18, Z+6	; 0x06
 c6e:	37 81       	ldd	r19, Z+7	; 0x07
 c70:	2f 5f       	subi	r18, 0xFF	; 255
 c72:	3f 4f       	sbci	r19, 0xFF	; 255
 c74:	37 83       	std	Z+7, r19	; 0x07
 c76:	26 83       	std	Z+6, r18	; 0x06
 c78:	14 c0       	rjmp	.+40     	; 0xca2 <fputc+0x6e>
 c7a:	8b 01       	movw	r16, r22
 c7c:	ec 01       	movw	r28, r24
 c7e:	fb 01       	movw	r30, r22
 c80:	00 84       	ldd	r0, Z+8	; 0x08
 c82:	f1 85       	ldd	r31, Z+9	; 0x09
 c84:	e0 2d       	mov	r30, r0
 c86:	09 95       	icall
 c88:	89 2b       	or	r24, r25
 c8a:	e1 f6       	brne	.-72     	; 0xc44 <fputc+0x10>
 c8c:	d8 01       	movw	r26, r16
 c8e:	16 96       	adiw	r26, 0x06	; 6
 c90:	8d 91       	ld	r24, X+
 c92:	9c 91       	ld	r25, X
 c94:	17 97       	sbiw	r26, 0x07	; 7
 c96:	01 96       	adiw	r24, 0x01	; 1
 c98:	17 96       	adiw	r26, 0x07	; 7
 c9a:	9c 93       	st	X, r25
 c9c:	8e 93       	st	-X, r24
 c9e:	16 97       	sbiw	r26, 0x06	; 6
 ca0:	ce 01       	movw	r24, r28
 ca2:	df 91       	pop	r29
 ca4:	cf 91       	pop	r28
 ca6:	1f 91       	pop	r17
 ca8:	0f 91       	pop	r16
 caa:	08 95       	ret

00000cac <__ultoa_invert>:
 cac:	fa 01       	movw	r30, r20
 cae:	aa 27       	eor	r26, r26
 cb0:	28 30       	cpi	r18, 0x08	; 8
 cb2:	51 f1       	breq	.+84     	; 0xd08 <__ultoa_invert+0x5c>
 cb4:	20 31       	cpi	r18, 0x10	; 16
 cb6:	81 f1       	breq	.+96     	; 0xd18 <__ultoa_invert+0x6c>
 cb8:	e8 94       	clt
 cba:	6f 93       	push	r22
 cbc:	6e 7f       	andi	r22, 0xFE	; 254
 cbe:	6e 5f       	subi	r22, 0xFE	; 254
 cc0:	7f 4f       	sbci	r23, 0xFF	; 255
 cc2:	8f 4f       	sbci	r24, 0xFF	; 255
 cc4:	9f 4f       	sbci	r25, 0xFF	; 255
 cc6:	af 4f       	sbci	r26, 0xFF	; 255
 cc8:	b1 e0       	ldi	r27, 0x01	; 1
 cca:	3e d0       	rcall	.+124    	; 0xd48 <__ultoa_invert+0x9c>
 ccc:	b4 e0       	ldi	r27, 0x04	; 4
 cce:	3c d0       	rcall	.+120    	; 0xd48 <__ultoa_invert+0x9c>
 cd0:	67 0f       	add	r22, r23
 cd2:	78 1f       	adc	r23, r24
 cd4:	89 1f       	adc	r24, r25
 cd6:	9a 1f       	adc	r25, r26
 cd8:	a1 1d       	adc	r26, r1
 cda:	68 0f       	add	r22, r24
 cdc:	79 1f       	adc	r23, r25
 cde:	8a 1f       	adc	r24, r26
 ce0:	91 1d       	adc	r25, r1
 ce2:	a1 1d       	adc	r26, r1
 ce4:	6a 0f       	add	r22, r26
 ce6:	71 1d       	adc	r23, r1
 ce8:	81 1d       	adc	r24, r1
 cea:	91 1d       	adc	r25, r1
 cec:	a1 1d       	adc	r26, r1
 cee:	20 d0       	rcall	.+64     	; 0xd30 <__ultoa_invert+0x84>
 cf0:	09 f4       	brne	.+2      	; 0xcf4 <__ultoa_invert+0x48>
 cf2:	68 94       	set
 cf4:	3f 91       	pop	r19
 cf6:	2a e0       	ldi	r18, 0x0A	; 10
 cf8:	26 9f       	mul	r18, r22
 cfa:	11 24       	eor	r1, r1
 cfc:	30 19       	sub	r19, r0
 cfe:	30 5d       	subi	r19, 0xD0	; 208
 d00:	31 93       	st	Z+, r19
 d02:	de f6       	brtc	.-74     	; 0xcba <__ultoa_invert+0xe>
 d04:	cf 01       	movw	r24, r30
 d06:	08 95       	ret
 d08:	46 2f       	mov	r20, r22
 d0a:	47 70       	andi	r20, 0x07	; 7
 d0c:	40 5d       	subi	r20, 0xD0	; 208
 d0e:	41 93       	st	Z+, r20
 d10:	b3 e0       	ldi	r27, 0x03	; 3
 d12:	0f d0       	rcall	.+30     	; 0xd32 <__ultoa_invert+0x86>
 d14:	c9 f7       	brne	.-14     	; 0xd08 <__ultoa_invert+0x5c>
 d16:	f6 cf       	rjmp	.-20     	; 0xd04 <__ultoa_invert+0x58>
 d18:	46 2f       	mov	r20, r22
 d1a:	4f 70       	andi	r20, 0x0F	; 15
 d1c:	40 5d       	subi	r20, 0xD0	; 208
 d1e:	4a 33       	cpi	r20, 0x3A	; 58
 d20:	18 f0       	brcs	.+6      	; 0xd28 <__ultoa_invert+0x7c>
 d22:	49 5d       	subi	r20, 0xD9	; 217
 d24:	31 fd       	sbrc	r19, 1
 d26:	40 52       	subi	r20, 0x20	; 32
 d28:	41 93       	st	Z+, r20
 d2a:	02 d0       	rcall	.+4      	; 0xd30 <__ultoa_invert+0x84>
 d2c:	a9 f7       	brne	.-22     	; 0xd18 <__ultoa_invert+0x6c>
 d2e:	ea cf       	rjmp	.-44     	; 0xd04 <__ultoa_invert+0x58>
 d30:	b4 e0       	ldi	r27, 0x04	; 4
 d32:	a6 95       	lsr	r26
 d34:	97 95       	ror	r25
 d36:	87 95       	ror	r24
 d38:	77 95       	ror	r23
 d3a:	67 95       	ror	r22
 d3c:	ba 95       	dec	r27
 d3e:	c9 f7       	brne	.-14     	; 0xd32 <__ultoa_invert+0x86>
 d40:	00 97       	sbiw	r24, 0x00	; 0
 d42:	61 05       	cpc	r22, r1
 d44:	71 05       	cpc	r23, r1
 d46:	08 95       	ret
 d48:	9b 01       	movw	r18, r22
 d4a:	ac 01       	movw	r20, r24
 d4c:	0a 2e       	mov	r0, r26
 d4e:	06 94       	lsr	r0
 d50:	57 95       	ror	r21
 d52:	47 95       	ror	r20
 d54:	37 95       	ror	r19
 d56:	27 95       	ror	r18
 d58:	ba 95       	dec	r27
 d5a:	c9 f7       	brne	.-14     	; 0xd4e <__ultoa_invert+0xa2>
 d5c:	62 0f       	add	r22, r18
 d5e:	73 1f       	adc	r23, r19
 d60:	84 1f       	adc	r24, r20
 d62:	95 1f       	adc	r25, r21
 d64:	a0 1d       	adc	r26, r0
 d66:	08 95       	ret

00000d68 <__prologue_saves__>:
 d68:	2f 92       	push	r2
 d6a:	3f 92       	push	r3
 d6c:	4f 92       	push	r4
 d6e:	5f 92       	push	r5
 d70:	6f 92       	push	r6
 d72:	7f 92       	push	r7
 d74:	8f 92       	push	r8
 d76:	9f 92       	push	r9
 d78:	af 92       	push	r10
 d7a:	bf 92       	push	r11
 d7c:	cf 92       	push	r12
 d7e:	df 92       	push	r13
 d80:	ef 92       	push	r14
 d82:	ff 92       	push	r15
 d84:	0f 93       	push	r16
 d86:	1f 93       	push	r17
 d88:	cf 93       	push	r28
 d8a:	df 93       	push	r29
 d8c:	cd b7       	in	r28, 0x3d	; 61
 d8e:	de b7       	in	r29, 0x3e	; 62
 d90:	ca 1b       	sub	r28, r26
 d92:	db 0b       	sbc	r29, r27
 d94:	0f b6       	in	r0, 0x3f	; 63
 d96:	f8 94       	cli
 d98:	de bf       	out	0x3e, r29	; 62
 d9a:	0f be       	out	0x3f, r0	; 63
 d9c:	cd bf       	out	0x3d, r28	; 61
 d9e:	09 94       	ijmp

00000da0 <__epilogue_restores__>:
 da0:	2a 88       	ldd	r2, Y+18	; 0x12
 da2:	39 88       	ldd	r3, Y+17	; 0x11
 da4:	48 88       	ldd	r4, Y+16	; 0x10
 da6:	5f 84       	ldd	r5, Y+15	; 0x0f
 da8:	6e 84       	ldd	r6, Y+14	; 0x0e
 daa:	7d 84       	ldd	r7, Y+13	; 0x0d
 dac:	8c 84       	ldd	r8, Y+12	; 0x0c
 dae:	9b 84       	ldd	r9, Y+11	; 0x0b
 db0:	aa 84       	ldd	r10, Y+10	; 0x0a
 db2:	b9 84       	ldd	r11, Y+9	; 0x09
 db4:	c8 84       	ldd	r12, Y+8	; 0x08
 db6:	df 80       	ldd	r13, Y+7	; 0x07
 db8:	ee 80       	ldd	r14, Y+6	; 0x06
 dba:	fd 80       	ldd	r15, Y+5	; 0x05
 dbc:	0c 81       	ldd	r16, Y+4	; 0x04
 dbe:	1b 81       	ldd	r17, Y+3	; 0x03
 dc0:	aa 81       	ldd	r26, Y+2	; 0x02
 dc2:	b9 81       	ldd	r27, Y+1	; 0x01
 dc4:	ce 0f       	add	r28, r30
 dc6:	d1 1d       	adc	r29, r1
 dc8:	0f b6       	in	r0, 0x3f	; 63
 dca:	f8 94       	cli
 dcc:	de bf       	out	0x3e, r29	; 62
 dce:	0f be       	out	0x3f, r0	; 63
 dd0:	cd bf       	out	0x3d, r28	; 61
 dd2:	ed 01       	movw	r28, r26
 dd4:	08 95       	ret

00000dd6 <_exit>:
 dd6:	f8 94       	cli

00000dd8 <__stop_program>:
 dd8:	ff cf       	rjmp	.-2      	; 0xdd8 <__stop_program>
