
OLED_EX4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000316  00800100  00000f3e  00000fd2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f3e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800416  00800416  000012e8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012e8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001344  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00001380  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002496  00000000  00000000  00001540  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000df7  00000000  00000000  000039d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000107a  00000000  00000000  000047cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005d4  00000000  00000000  00005848  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000092e  00000000  00000000  00005e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000152f  00000000  00000000  0000674a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  00007c79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_2>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	14 e0       	ldi	r17, 0x04	; 4
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee e3       	ldi	r30, 0x3E	; 62
  84:	ff e0       	ldi	r31, 0x0F	; 15
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 31       	cpi	r26, 0x16	; 22
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	24 e0       	ldi	r18, 0x04	; 4
  94:	a6 e1       	ldi	r26, 0x16	; 22
  96:	b4 e0       	ldi	r27, 0x04	; 4
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a1 32       	cpi	r26, 0x21	; 33
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 4f 01 	call	0x29e	; 0x29e <main>
  a6:	0c 94 9d 07 	jmp	0xf3a	; 0xf3a <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <__vector_2>:
	
	printf("\n");
}

volatile uint8_t EXT_INT_FLAG = 0;
ISR(INT1_vect){
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
	EXT_INT_FLAG = 1;
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <__data_end>
	printf("\nEXINT1!\n");
  d6:	8c ef       	ldi	r24, 0xFC	; 252
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	0e 94 3f 03 	call	0x67e	; 0x67e <puts>
}
  de:	ff 91       	pop	r31
  e0:	ef 91       	pop	r30
  e2:	bf 91       	pop	r27
  e4:	af 91       	pop	r26
  e6:	9f 91       	pop	r25
  e8:	8f 91       	pop	r24
  ea:	7f 91       	pop	r23
  ec:	6f 91       	pop	r22
  ee:	5f 91       	pop	r21
  f0:	4f 91       	pop	r20
  f2:	3f 91       	pop	r19
  f4:	2f 91       	pop	r18
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <uart_putchar>:
	
	//AG_sequencer_16(notes, 1, 1500, 0);
	AG_adv_sequencer_16(notes, legato, chord, 1500);
	AG_adv_sequencer_16(notes2, legato, chord, 1500);
	
}
 100:	cf 93       	push	r28
 102:	c8 2f       	mov	r28, r24
 104:	8a 30       	cpi	r24, 0x0A	; 10
 106:	19 f4       	brne	.+6      	; 0x10e <uart_putchar+0xe>
 108:	8d e0       	ldi	r24, 0x0D	; 13
 10a:	0e 94 80 00 	call	0x100	; 0x100 <uart_putchar>
 10e:	5d 9b       	sbis	0x0b, 5	; 11
 110:	fe cf       	rjmp	.-4      	; 0x10e <uart_putchar+0xe>
 112:	cc b9       	out	0x0c, r28	; 12
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <xmem_init>:
 11c:	85 b7       	in	r24, 0x35	; 53
 11e:	80 68       	ori	r24, 0x80	; 128
 120:	85 bf       	out	0x35, r24	; 53
 122:	80 b7       	in	r24, 0x30	; 48
 124:	80 62       	ori	r24, 0x20	; 32
 126:	80 bf       	out	0x30, r24	; 48
 128:	84 b3       	in	r24, 0x14	; 20
 12a:	8f ef       	ldi	r24, 0xFF	; 255
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	15 ba       	out	0x15, r1	; 21
 130:	08 95       	ret

00000132 <Init_ports>:
 132:	8e 9a       	sbi	0x11, 6	; 17
 134:	96 9a       	sbi	0x12, 6	; 18
 136:	b8 9a       	sbi	0x17, 0	; 23
 138:	b9 98       	cbi	0x17, 1	; 23
 13a:	87 b3       	in	r24, 0x17	; 23
 13c:	87 bb       	out	0x17, r24	; 23
 13e:	08 95       	ret

00000140 <Init_pwm>:
 140:	83 b7       	in	r24, 0x33	; 51
 142:	89 61       	ori	r24, 0x19	; 25
 144:	83 bf       	out	0x33, r24	; 51
 146:	08 95       	ret

00000148 <SPI_configs>:
 148:	0e 94 25 02 	call	0x44a	; 0x44a <SPI_init>
 14c:	85 b7       	in	r24, 0x35	; 53
 14e:	88 60       	ori	r24, 0x08	; 8
 150:	85 bf       	out	0x35, r24	; 53
 152:	85 b7       	in	r24, 0x35	; 53
 154:	8b 7f       	andi	r24, 0xFB	; 251
 156:	85 bf       	out	0x35, r24	; 53
 158:	78 94       	sei
 15a:	8b b7       	in	r24, 0x3b	; 59
 15c:	80 68       	ori	r24, 0x80	; 128
 15e:	8b bf       	out	0x3b, r24	; 59
 160:	08 95       	ret

00000162 <MAIN_INITS>:
 162:	cf 93       	push	r28
 164:	c8 2f       	mov	r28, r24
 166:	8f e1       	ldi	r24, 0x1F	; 31
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 34 02 	call	0x468	; 0x468 <USART_init>
 16e:	8a e0       	ldi	r24, 0x0A	; 10
 170:	91 e0       	ldi	r25, 0x01	; 1
 172:	90 93 1a 04 	sts	0x041A, r25	; 0x80041a <__iob+0x3>
 176:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <__iob+0x2>
 17a:	0e 94 8e 00 	call	0x11c	; 0x11c <xmem_init>
 17e:	0e 94 99 00 	call	0x132	; 0x132 <Init_ports>
 182:	0e 94 a4 00 	call	0x148	; 0x148 <SPI_configs>
 186:	0e 94 a0 00 	call	0x140	; 0x140 <Init_pwm>
 18a:	0e 94 25 02 	call	0x44a	; 0x44a <SPI_init>
 18e:	8c 2f       	mov	r24, r28
 190:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <MCP_init>
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <SRAM_test>:
 198:	cf 92       	push	r12
 19a:	df 92       	push	r13
 19c:	ef 92       	push	r14
 19e:	ff 92       	push	r15
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	8d e0       	ldi	r24, 0x0D	; 13
 1aa:	92 e0       	ldi	r25, 0x02	; 2
 1ac:	0e 94 3f 03 	call	0x67e	; 0x67e <puts>
 1b0:	0e 94 ce 02 	call	0x59c	; 0x59c <rand>
 1b4:	7c 01       	movw	r14, r24
 1b6:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <srand>
 1ba:	c1 2c       	mov	r12, r1
 1bc:	d1 2c       	mov	r13, r1
 1be:	00 e0       	ldi	r16, 0x00	; 0
 1c0:	10 e0       	ldi	r17, 0x00	; 0
 1c2:	c4 e2       	ldi	r28, 0x24	; 36
 1c4:	d2 e0       	ldi	r29, 0x02	; 2
 1c6:	0e 94 ce 02 	call	0x59c	; 0x59c <rand>
 1ca:	f6 01       	movw	r30, r12
 1cc:	f8 5e       	subi	r31, 0xE8	; 232
 1ce:	80 83       	st	Z, r24
 1d0:	20 81       	ld	r18, Z
 1d2:	28 17       	cp	r18, r24
 1d4:	a9 f0       	breq	.+42     	; 0x200 <SRAM_test+0x68>
 1d6:	99 27       	eor	r25, r25
 1d8:	9f 93       	push	r25
 1da:	8f 93       	push	r24
 1dc:	1f 92       	push	r1
 1de:	2f 93       	push	r18
 1e0:	df 92       	push	r13
 1e2:	cf 92       	push	r12
 1e4:	df 93       	push	r29
 1e6:	cf 93       	push	r28
 1e8:	0e 94 29 03 	call	0x652	; 0x652 <printf>
 1ec:	0f 5f       	subi	r16, 0xFF	; 255
 1ee:	1f 4f       	sbci	r17, 0xFF	; 255
 1f0:	8d b7       	in	r24, 0x3d	; 61
 1f2:	9e b7       	in	r25, 0x3e	; 62
 1f4:	08 96       	adiw	r24, 0x08	; 8
 1f6:	0f b6       	in	r0, 0x3f	; 63
 1f8:	f8 94       	cli
 1fa:	9e bf       	out	0x3e, r25	; 62
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	8d bf       	out	0x3d, r24	; 61
 200:	9f ef       	ldi	r25, 0xFF	; 255
 202:	c9 1a       	sub	r12, r25
 204:	d9 0a       	sbc	r13, r25
 206:	c1 14       	cp	r12, r1
 208:	88 e0       	ldi	r24, 0x08	; 8
 20a:	d8 06       	cpc	r13, r24
 20c:	e1 f6       	brne	.-72     	; 0x1c6 <SRAM_test+0x2e>
 20e:	c7 01       	movw	r24, r14
 210:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <srand>
 214:	c0 e0       	ldi	r28, 0x00	; 0
 216:	d0 e0       	ldi	r29, 0x00	; 0
 218:	e1 2c       	mov	r14, r1
 21a:	f1 2c       	mov	r15, r1
 21c:	0f 2e       	mov	r0, r31
 21e:	fe e5       	ldi	r31, 0x5E	; 94
 220:	cf 2e       	mov	r12, r31
 222:	f2 e0       	ldi	r31, 0x02	; 2
 224:	df 2e       	mov	r13, r31
 226:	f0 2d       	mov	r31, r0
 228:	0e 94 ce 02 	call	0x59c	; 0x59c <rand>
 22c:	fe 01       	movw	r30, r28
 22e:	f8 5e       	subi	r31, 0xE8	; 232
 230:	20 81       	ld	r18, Z
 232:	28 17       	cp	r18, r24
 234:	b1 f0       	breq	.+44     	; 0x262 <SRAM_test+0xca>
 236:	99 27       	eor	r25, r25
 238:	9f 93       	push	r25
 23a:	8f 93       	push	r24
 23c:	1f 92       	push	r1
 23e:	2f 93       	push	r18
 240:	df 93       	push	r29
 242:	cf 93       	push	r28
 244:	df 92       	push	r13
 246:	cf 92       	push	r12
 248:	0e 94 29 03 	call	0x652	; 0x652 <printf>
 24c:	9f ef       	ldi	r25, 0xFF	; 255
 24e:	e9 1a       	sub	r14, r25
 250:	f9 0a       	sbc	r15, r25
 252:	8d b7       	in	r24, 0x3d	; 61
 254:	9e b7       	in	r25, 0x3e	; 62
 256:	08 96       	adiw	r24, 0x08	; 8
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	f8 94       	cli
 25c:	9e bf       	out	0x3e, r25	; 62
 25e:	0f be       	out	0x3f, r0	; 63
 260:	8d bf       	out	0x3d, r24	; 61
 262:	21 96       	adiw	r28, 0x01	; 1
 264:	c1 15       	cp	r28, r1
 266:	98 e0       	ldi	r25, 0x08	; 8
 268:	d9 07       	cpc	r29, r25
 26a:	f1 f6       	brne	.-68     	; 0x228 <SRAM_test+0x90>
 26c:	ff 92       	push	r15
 26e:	ef 92       	push	r14
 270:	1f 93       	push	r17
 272:	0f 93       	push	r16
 274:	8c e9       	ldi	r24, 0x9C	; 156
 276:	92 e0       	ldi	r25, 0x02	; 2
 278:	9f 93       	push	r25
 27a:	8f 93       	push	r24
 27c:	0e 94 29 03 	call	0x652	; 0x652 <printf>
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	0f 90       	pop	r0
 286:	0f 90       	pop	r0
 288:	0f 90       	pop	r0
 28a:	0f 90       	pop	r0
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	1f 91       	pop	r17
 292:	0f 91       	pop	r16
 294:	ff 90       	pop	r15
 296:	ef 90       	pop	r14
 298:	df 90       	pop	r13
 29a:	cf 90       	pop	r12
 29c:	08 95       	ret

0000029e <main>:

// Warning: Reported data memory usage above 83% (~850 bytes) will cause runtime crash - check your printfs!
int main(void)
{

	MAIN_INITS(NORMAL);						// Initialize USART transmission drivers, MCU ports, external memory, interrupts and SPI
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	0e 94 b1 00 	call	0x162	; 0x162 <MAIN_INITS>
	while (1)
	{
			
		switch(programme){
			case 'r':
				SRAM_test();
 2a4:	0e 94 cc 00 	call	0x198	; 0x198 <SRAM_test>
 2a8:	fd cf       	rjmp	.-6      	; 0x2a4 <main+0x6>

000002aa <MCP_bit_modify>:
	
	SPI_SS_HIGH();
	
	return rec;
}

 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	18 2f       	mov	r17, r24
 2b2:	d6 2f       	mov	r29, r22
 2b4:	c4 2f       	mov	r28, r20
 2b6:	0e 94 21 02 	call	0x442	; 0x442 <SPI_SS_LOW>
 2ba:	85 e0       	ldi	r24, 0x05	; 5
 2bc:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 2c0:	81 2f       	mov	r24, r17
 2c2:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 2c6:	8d 2f       	mov	r24, r29
 2c8:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 2cc:	8c 2f       	mov	r24, r28
 2ce:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 2d2:	0e 94 23 02 	call	0x446	; 0x446 <SPI_SS_HIGH>
 2d6:	df 91       	pop	r29
 2d8:	cf 91       	pop	r28
 2da:	1f 91       	pop	r17
 2dc:	08 95       	ret

000002de <MCP_set_mode>:
 2de:	48 2f       	mov	r20, r24
 2e0:	60 ee       	ldi	r22, 0xE0	; 224
 2e2:	8f e0       	ldi	r24, 0x0F	; 15
 2e4:	0e 94 55 01 	call	0x2aa	; 0x2aa <MCP_bit_modify>
 2e8:	08 95       	ret

000002ea <MCP_reset>:
 2ea:	0e 94 21 02 	call	0x442	; 0x442 <SPI_SS_LOW>
 2ee:	80 ec       	ldi	r24, 0xC0	; 192
 2f0:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 2f4:	0e 94 23 02 	call	0x446	; 0x446 <SPI_SS_HIGH>
 2f8:	08 95       	ret

000002fa <MCP_read_status>:
 2fa:	cf 93       	push	r28
 2fc:	0e 94 21 02 	call	0x442	; 0x442 <SPI_SS_LOW>
 300:	80 ea       	ldi	r24, 0xA0	; 160
 302:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 306:	0e 94 17 02 	call	0x42e	; 0x42e <SPI_read>
 30a:	c8 2f       	mov	r28, r24
 30c:	0e 94 23 02 	call	0x446	; 0x446 <SPI_SS_HIGH>
 310:	8c 2f       	mov	r24, r28
 312:	cf 91       	pop	r28
 314:	08 95       	ret

00000316 <MCP_read_byte>:
 316:	cf 93       	push	r28
 318:	c8 2f       	mov	r28, r24
 31a:	0e 94 21 02 	call	0x442	; 0x442 <SPI_SS_LOW>
 31e:	83 e0       	ldi	r24, 0x03	; 3
 320:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 324:	8c 2f       	mov	r24, r28
 326:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
 32a:	0e 94 17 02 	call	0x42e	; 0x42e <SPI_read>
 32e:	c8 2f       	mov	r28, r24
 330:	0e 94 23 02 	call	0x446	; 0x446 <SPI_SS_HIGH>
 334:	8c 2f       	mov	r24, r28
 336:	cf 91       	pop	r28
 338:	08 95       	ret

0000033a <MCP_print_diagnostix>:
 33a:	cf 93       	push	r28
 33c:	83 ea       	ldi	r24, 0xA3	; 163
 33e:	93 e0       	ldi	r25, 0x03	; 3
 340:	0e 94 3f 03 	call	0x67e	; 0x67e <puts>
 344:	8e e0       	ldi	r24, 0x0E	; 14
 346:	0e 94 8b 01 	call	0x316	; 0x316 <MCP_read_byte>
 34a:	1f 92       	push	r1
 34c:	1f 92       	push	r1
 34e:	80 7e       	andi	r24, 0xE0	; 224
 350:	1f 92       	push	r1
 352:	8f 93       	push	r24
 354:	1f 92       	push	r1
 356:	1f 92       	push	r1
 358:	80 eb       	ldi	r24, 0xB0	; 176
 35a:	93 e0       	ldi	r25, 0x03	; 3
 35c:	9f 93       	push	r25
 35e:	8f 93       	push	r24
 360:	0e 94 29 03 	call	0x652	; 0x652 <printf>
 364:	0e 94 7d 01 	call	0x2fa	; 0x2fa <MCP_read_status>
 368:	c8 2f       	mov	r28, r24
 36a:	8f e0       	ldi	r24, 0x0F	; 15
 36c:	0e 94 8b 01 	call	0x316	; 0x316 <MCP_read_byte>
 370:	1f 92       	push	r1
 372:	8f 93       	push	r24
 374:	1f 92       	push	r1
 376:	cf 93       	push	r28
 378:	8c ed       	ldi	r24, 0xDC	; 220
 37a:	93 e0       	ldi	r25, 0x03	; 3
 37c:	9f 93       	push	r25
 37e:	8f 93       	push	r24
 380:	0e 94 29 03 	call	0x652	; 0x652 <printf>
 384:	8d b7       	in	r24, 0x3d	; 61
 386:	9e b7       	in	r25, 0x3e	; 62
 388:	0e 96       	adiw	r24, 0x0e	; 14
 38a:	0f b6       	in	r0, 0x3f	; 63
 38c:	f8 94       	cli
 38e:	9e bf       	out	0x3e, r25	; 62
 390:	0f be       	out	0x3f, r0	; 63
 392:	8d bf       	out	0x3d, r24	; 61
 394:	cf 91       	pop	r28
 396:	08 95       	ret

00000398 <MCP_write_byte>:
void MCP_write_byte(uint8_t address, uint8_t data){
	SPI_SS_LOW();
 398:	cf 93       	push	r28
 39a:	df 93       	push	r29
 39c:	d8 2f       	mov	r29, r24
 39e:	c6 2f       	mov	r28, r22
	SPI_send(MCP_WRITE);
 3a0:	0e 94 21 02 	call	0x442	; 0x442 <SPI_SS_LOW>
	SPI_send(address);
 3a4:	82 e0       	ldi	r24, 0x02	; 2
 3a6:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
	SPI_send(data);
 3aa:	8d 2f       	mov	r24, r29
 3ac:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
	SPI_SS_HIGH();
 3b0:	8c 2f       	mov	r24, r28
 3b2:	0e 94 1d 02 	call	0x43a	; 0x43a <SPI_send>
	
 3b6:	0e 94 23 02 	call	0x446	; 0x446 <SPI_SS_HIGH>
	//uint8_t check = MCP_read_byte(address);																				// !!! 
	//printf("Written: %d Read: %d\n", data, check);
}

 3ba:	df 91       	pop	r29
 3bc:	cf 91       	pop	r28
 3be:	08 95       	ret

000003c0 <MCP_init>:
 */ 
#include <mcp2515.h>

//								---									MCP config and operations

void MCP_init(mcp_mode md){
 3c0:	cf 93       	push	r28
 3c2:	c8 2f       	mov	r28, r24
	
	// Initialize SPI for MCU, just to be sure
	SPI_init();
 3c4:	0e 94 25 02 	call	0x44a	; 0x44a <SPI_init>
	
	// Reset the MCP, just to be sure, and set the desired mode
	MCP_reset();
 3c8:	0e 94 75 01 	call	0x2ea	; 0x2ea <MCP_reset>
 3cc:	2a e0       	ldi	r18, 0x0A	; 10
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	05 c0       	rjmp	.+10     	; 0x3dc <MCP_init+0x1c>
 3d2:	01 97       	sbiw	r24, 0x01	; 1
	for(int j=0; j<10; j++)
	{
		for(int k=0; k<30000; k++);
 3d4:	f1 f7       	brne	.-4      	; 0x3d2 <MCP_init+0x12>
 3d6:	21 50       	subi	r18, 0x01	; 1
 3d8:	31 09       	sbc	r19, r1
	// Initialize SPI for MCU, just to be sure
	SPI_init();
	
	// Reset the MCP, just to be sure, and set the desired mode
	MCP_reset();
	for(int j=0; j<10; j++)
 3da:	19 f0       	breq	.+6      	; 0x3e2 <MCP_init+0x22>
 */ 
#include <mcp2515.h>

//								---									MCP config and operations

void MCP_init(mcp_mode md){
 3dc:	80 e3       	ldi	r24, 0x30	; 48
 3de:	95 e7       	ldi	r25, 0x75	; 117
 3e0:	f8 cf       	rjmp	.-16     	; 0x3d2 <MCP_init+0x12>
	MCP_reset();
	for(int j=0; j<10; j++)
	{
		for(int k=0; k<30000; k++);
	}
	MCP_write_byte(MCP_CANINTE, MCP_RD_INT_MASK);					// Only enable interrupts on message reception
 3e2:	63 e0       	ldi	r22, 0x03	; 3
 3e4:	8b e2       	ldi	r24, 0x2B	; 43
 3e6:	0e 94 cc 01 	call	0x398	; 0x398 <MCP_write_byte>
	MCP_bit_modify(MCP_CANCTRL, MCP_TXABRT_MASK, MCP_TXABRT_MASK);	// Request abort for all transmittions; necessary for setting mode
 3ea:	40 e1       	ldi	r20, 0x10	; 16
 3ec:	60 e1       	ldi	r22, 0x10	; 16
 3ee:	8f e0       	ldi	r24, 0x0F	; 15
 3f0:	0e 94 55 01 	call	0x2aa	; 0x2aa <MCP_bit_modify>
	
	// Set CAN timing settings
	MCP_write_byte(MCP_CNF1, 0b11000010);	// SJW:4 BRP:3
	MCP_write_byte(MCP_CNF2, 0b11001001);	// BTLMODE:1 SAM:1 PS1:2 PROPSEG:2
 3f4:	62 ec       	ldi	r22, 0xC2	; 194
 3f6:	8a e2       	ldi	r24, 0x2A	; 42
 3f8:	0e 94 cc 01 	call	0x398	; 0x398 <MCP_write_byte>
	MCP_write_byte(MCP_CNF3, 0b00000010);	// SOF:x WAKFIL:x PS2:3
 3fc:	69 ec       	ldi	r22, 0xC9	; 201
 3fe:	89 e2       	ldi	r24, 0x29	; 41
 400:	0e 94 cc 01 	call	0x398	; 0x398 <MCP_write_byte>
	
 404:	62 e0       	ldi	r22, 0x02	; 2
 406:	88 e2       	ldi	r24, 0x28	; 40
 408:	0e 94 cc 01 	call	0x398	; 0x398 <MCP_write_byte>
	MCP_set_mode(md);
	// Verify that the MCP is in the correct mode
 40c:	8c 2f       	mov	r24, r28
 40e:	0e 94 6f 01 	call	0x2de	; 0x2de <MCP_set_mode>
	uint8_t can_status = MCP_read_byte(MCP_CANSTAT);
	uint8_t can_mode = can_status &= MCP_MODE_MASK;					// First 3 bits of CANSTAT indicates the MCPs current mode
 412:	8e e0       	ldi	r24, 0x0E	; 14
 414:	0e 94 8b 01 	call	0x316	; 0x316 <MCP_read_byte>
	if (can_mode != md) { 
		printf("MCP Error: Init failed!\n");
 418:	80 7e       	andi	r24, 0xE0	; 224
 41a:	c8 17       	cp	r28, r24
 41c:	31 f0       	breq	.+12     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
		MCP_print_diagnostix();
 41e:	8d ef       	ldi	r24, 0xFD	; 253
 420:	93 e0       	ldi	r25, 0x03	; 3
 422:	0e 94 3f 03 	call	0x67e	; 0x67e <puts>
	}
 426:	0e 94 9d 01 	call	0x33a	; 0x33a <MCP_print_diagnostix>
}

 42a:	cf 91       	pop	r28
 42c:	08 95       	ret

0000042e <SPI_read>:
	SPI_SS_HIGH();
}

// Reads the master's SPDR register, not the slave register! For that, send a dummy write first
uint8_t SPI_read(){	
	SPDR = 0xAA; 
 42e:	8a ea       	ldi	r24, 0xAA	; 170
 430:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
 432:	77 9b       	sbis	0x0e, 7	; 14
 434:	fe cf       	rjmp	.-4      	; 0x432 <SPI_read+0x4>
	return SPDR;}
 436:	8f b1       	in	r24, 0x0f	; 15
 438:	08 95       	ret

0000043a <SPI_send>:
//uint8_t SPI_read_master(){ return SPDR;}

void SPI_send(uint8_t ch){ 
	SPDR = ch;
 43a:	8f b9       	out	0x0f, r24	; 15
	
	// SPSR: SPI Status Register	
	// SPIF: SPI End of Transmission Flag; flags when full byte is written to SPDR			(see example at p 160)
	while(!(SPSR & (1<<SPIF)));
 43c:	77 9b       	sbis	0x0e, 7	; 14
 43e:	fe cf       	rjmp	.-4      	; 0x43c <SPI_send+0x2>
}
 440:	08 95       	ret

00000442 <SPI_SS_LOW>:
		printf("SPI: %d,%d\n",i, charray[i]);
	}
}
*/
	
void SPI_SS_LOW() { PORTB &= ~(1<<PB4); }
 442:	c4 98       	cbi	0x18, 4	; 24
 444:	08 95       	ret

00000446 <SPI_SS_HIGH>:
void SPI_SS_HIGH(){ PORTB |= (1<<PB4);}
 446:	c4 9a       	sbi	0x18, 4	; 24
 448:	08 95       	ret

0000044a <SPI_init>:
void SPI_init()
{
	//Set SS', MOSI and SCK output, all others input 
		// "DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK)"
		// Since MOSI is on Pin PB5, the actuals are set accordingly (see page 159 of manual)
	DDRB = (1<<DDB4)|(1<<DDB5)|(1<<DDB7);
 44a:	80 eb       	ldi	r24, 0xB0	; 176
 44c:	87 bb       	out	0x17, r24	; 23
	
	// Enable SPI, Master, set clock rate fck/16
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 44e:	81 e5       	ldi	r24, 0x51	; 81
 450:	8d b9       	out	0x0d, r24	; 13
	SPI_SS_HIGH();
 452:	0e 94 23 02 	call	0x446	; 0x446 <SPI_SS_HIGH>
 456:	08 95       	ret

00000458 <USART_Transmit>:
#include <USART_Driver.h>

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
 458:	5d 9b       	sbis	0x0b, 5	; 11
 45a:	fe cf       	rjmp	.-4      	; 0x458 <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
 45c:	8c b9       	out	0x0c, r24	; 12
 45e:	08 95       	ret

00000460 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 460:	5f 9b       	sbis	0x0b, 7	; 11
 462:	fe cf       	rjmp	.-4      	; 0x460 <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
 464:	8c b1       	in	r24, 0x0c	; 12
}
 466:	08 95       	ret

00000468 <USART_init>:

void USART_init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char) (ubrr>>8);
 468:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);
 46a:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter */
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
 46c:	88 e1       	ldi	r24, 0x18	; 24
 46e:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
 470:	8e e8       	ldi	r24, 0x8E	; 142
 472:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
 474:	60 e3       	ldi	r22, 0x30	; 48
 476:	72 e0       	ldi	r23, 0x02	; 2
 478:	8c e2       	ldi	r24, 0x2C	; 44
 47a:	92 e0       	ldi	r25, 0x02	; 2
 47c:	0e 94 de 02 	call	0x5bc	; 0x5bc <fdevopen>
 480:	08 95       	ret

00000482 <__divmodsi4>:
 482:	05 2e       	mov	r0, r21
 484:	97 fb       	bst	r25, 7
 486:	1e f4       	brtc	.+6      	; 0x48e <__divmodsi4+0xc>
 488:	00 94       	com	r0
 48a:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__negsi2>
 48e:	57 fd       	sbrc	r21, 7
 490:	07 d0       	rcall	.+14     	; 0x4a0 <__divmodsi4_neg2>
 492:	0e 94 60 02 	call	0x4c0	; 0x4c0 <__udivmodsi4>
 496:	07 fc       	sbrc	r0, 7
 498:	03 d0       	rcall	.+6      	; 0x4a0 <__divmodsi4_neg2>
 49a:	4e f4       	brtc	.+18     	; 0x4ae <__divmodsi4_exit>
 49c:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__negsi2>

000004a0 <__divmodsi4_neg2>:
 4a0:	50 95       	com	r21
 4a2:	40 95       	com	r20
 4a4:	30 95       	com	r19
 4a6:	21 95       	neg	r18
 4a8:	3f 4f       	sbci	r19, 0xFF	; 255
 4aa:	4f 4f       	sbci	r20, 0xFF	; 255
 4ac:	5f 4f       	sbci	r21, 0xFF	; 255

000004ae <__divmodsi4_exit>:
 4ae:	08 95       	ret

000004b0 <__negsi2>:
 4b0:	90 95       	com	r25
 4b2:	80 95       	com	r24
 4b4:	70 95       	com	r23
 4b6:	61 95       	neg	r22
 4b8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ba:	8f 4f       	sbci	r24, 0xFF	; 255
 4bc:	9f 4f       	sbci	r25, 0xFF	; 255
 4be:	08 95       	ret

000004c0 <__udivmodsi4>:
 4c0:	a1 e2       	ldi	r26, 0x21	; 33
 4c2:	1a 2e       	mov	r1, r26
 4c4:	aa 1b       	sub	r26, r26
 4c6:	bb 1b       	sub	r27, r27
 4c8:	fd 01       	movw	r30, r26
 4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <__udivmodsi4_ep>

000004cc <__udivmodsi4_loop>:
 4cc:	aa 1f       	adc	r26, r26
 4ce:	bb 1f       	adc	r27, r27
 4d0:	ee 1f       	adc	r30, r30
 4d2:	ff 1f       	adc	r31, r31
 4d4:	a2 17       	cp	r26, r18
 4d6:	b3 07       	cpc	r27, r19
 4d8:	e4 07       	cpc	r30, r20
 4da:	f5 07       	cpc	r31, r21
 4dc:	20 f0       	brcs	.+8      	; 0x4e6 <__udivmodsi4_ep>
 4de:	a2 1b       	sub	r26, r18
 4e0:	b3 0b       	sbc	r27, r19
 4e2:	e4 0b       	sbc	r30, r20
 4e4:	f5 0b       	sbc	r31, r21

000004e6 <__udivmodsi4_ep>:
 4e6:	66 1f       	adc	r22, r22
 4e8:	77 1f       	adc	r23, r23
 4ea:	88 1f       	adc	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	1a 94       	dec	r1
 4f0:	69 f7       	brne	.-38     	; 0x4cc <__udivmodsi4_loop>
 4f2:	60 95       	com	r22
 4f4:	70 95       	com	r23
 4f6:	80 95       	com	r24
 4f8:	90 95       	com	r25
 4fa:	9b 01       	movw	r18, r22
 4fc:	ac 01       	movw	r20, r24
 4fe:	bd 01       	movw	r22, r26
 500:	cf 01       	movw	r24, r30
 502:	08 95       	ret

00000504 <do_rand>:
 504:	8f 92       	push	r8
 506:	9f 92       	push	r9
 508:	af 92       	push	r10
 50a:	bf 92       	push	r11
 50c:	cf 92       	push	r12
 50e:	df 92       	push	r13
 510:	ef 92       	push	r14
 512:	ff 92       	push	r15
 514:	cf 93       	push	r28
 516:	df 93       	push	r29
 518:	ec 01       	movw	r28, r24
 51a:	68 81       	ld	r22, Y
 51c:	79 81       	ldd	r23, Y+1	; 0x01
 51e:	8a 81       	ldd	r24, Y+2	; 0x02
 520:	9b 81       	ldd	r25, Y+3	; 0x03
 522:	61 15       	cp	r22, r1
 524:	71 05       	cpc	r23, r1
 526:	81 05       	cpc	r24, r1
 528:	91 05       	cpc	r25, r1
 52a:	21 f4       	brne	.+8      	; 0x534 <do_rand+0x30>
 52c:	64 e2       	ldi	r22, 0x24	; 36
 52e:	79 ed       	ldi	r23, 0xD9	; 217
 530:	8b e5       	ldi	r24, 0x5B	; 91
 532:	97 e0       	ldi	r25, 0x07	; 7
 534:	2d e1       	ldi	r18, 0x1D	; 29
 536:	33 ef       	ldi	r19, 0xF3	; 243
 538:	41 e0       	ldi	r20, 0x01	; 1
 53a:	50 e0       	ldi	r21, 0x00	; 0
 53c:	0e 94 41 02 	call	0x482	; 0x482 <__divmodsi4>
 540:	49 01       	movw	r8, r18
 542:	5a 01       	movw	r10, r20
 544:	9b 01       	movw	r18, r22
 546:	ac 01       	movw	r20, r24
 548:	a7 ea       	ldi	r26, 0xA7	; 167
 54a:	b1 e4       	ldi	r27, 0x41	; 65
 54c:	0e 94 44 07 	call	0xe88	; 0xe88 <__muluhisi3>
 550:	6b 01       	movw	r12, r22
 552:	7c 01       	movw	r14, r24
 554:	ac ee       	ldi	r26, 0xEC	; 236
 556:	b4 ef       	ldi	r27, 0xF4	; 244
 558:	a5 01       	movw	r20, r10
 55a:	94 01       	movw	r18, r8
 55c:	0e 94 52 07 	call	0xea4	; 0xea4 <__mulohisi3>
 560:	dc 01       	movw	r26, r24
 562:	cb 01       	movw	r24, r22
 564:	8c 0d       	add	r24, r12
 566:	9d 1d       	adc	r25, r13
 568:	ae 1d       	adc	r26, r14
 56a:	bf 1d       	adc	r27, r15
 56c:	b7 ff       	sbrs	r27, 7
 56e:	03 c0       	rjmp	.+6      	; 0x576 <do_rand+0x72>
 570:	01 97       	sbiw	r24, 0x01	; 1
 572:	a1 09       	sbc	r26, r1
 574:	b0 48       	sbci	r27, 0x80	; 128
 576:	88 83       	st	Y, r24
 578:	99 83       	std	Y+1, r25	; 0x01
 57a:	aa 83       	std	Y+2, r26	; 0x02
 57c:	bb 83       	std	Y+3, r27	; 0x03
 57e:	9f 77       	andi	r25, 0x7F	; 127
 580:	df 91       	pop	r29
 582:	cf 91       	pop	r28
 584:	ff 90       	pop	r15
 586:	ef 90       	pop	r14
 588:	df 90       	pop	r13
 58a:	cf 90       	pop	r12
 58c:	bf 90       	pop	r11
 58e:	af 90       	pop	r10
 590:	9f 90       	pop	r9
 592:	8f 90       	pop	r8
 594:	08 95       	ret

00000596 <rand_r>:
 596:	0e 94 82 02 	call	0x504	; 0x504 <do_rand>
 59a:	08 95       	ret

0000059c <rand>:
 59c:	80 e0       	ldi	r24, 0x00	; 0
 59e:	91 e0       	ldi	r25, 0x01	; 1
 5a0:	0e 94 82 02 	call	0x504	; 0x504 <do_rand>
 5a4:	08 95       	ret

000005a6 <srand>:
 5a6:	a0 e0       	ldi	r26, 0x00	; 0
 5a8:	b0 e0       	ldi	r27, 0x00	; 0
 5aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 5ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 5b2:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 5b6:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 5ba:	08 95       	ret

000005bc <fdevopen>:
 5bc:	0f 93       	push	r16
 5be:	1f 93       	push	r17
 5c0:	cf 93       	push	r28
 5c2:	df 93       	push	r29
 5c4:	00 97       	sbiw	r24, 0x00	; 0
 5c6:	31 f4       	brne	.+12     	; 0x5d4 <fdevopen+0x18>
 5c8:	61 15       	cp	r22, r1
 5ca:	71 05       	cpc	r23, r1
 5cc:	19 f4       	brne	.+6      	; 0x5d4 <fdevopen+0x18>
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	3a c0       	rjmp	.+116    	; 0x648 <fdevopen+0x8c>
 5d4:	8b 01       	movw	r16, r22
 5d6:	ec 01       	movw	r28, r24
 5d8:	6e e0       	ldi	r22, 0x0E	; 14
 5da:	70 e0       	ldi	r23, 0x00	; 0
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 50 05 	call	0xaa0	; 0xaa0 <calloc>
 5e4:	fc 01       	movw	r30, r24
 5e6:	89 2b       	or	r24, r25
 5e8:	91 f3       	breq	.-28     	; 0x5ce <fdevopen+0x12>
 5ea:	80 e8       	ldi	r24, 0x80	; 128
 5ec:	83 83       	std	Z+3, r24	; 0x03
 5ee:	01 15       	cp	r16, r1
 5f0:	11 05       	cpc	r17, r1
 5f2:	71 f0       	breq	.+28     	; 0x610 <fdevopen+0x54>
 5f4:	13 87       	std	Z+11, r17	; 0x0b
 5f6:	02 87       	std	Z+10, r16	; 0x0a
 5f8:	81 e8       	ldi	r24, 0x81	; 129
 5fa:	83 83       	std	Z+3, r24	; 0x03
 5fc:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <__iob>
 600:	90 91 18 04 	lds	r25, 0x0418	; 0x800418 <__iob+0x1>
 604:	89 2b       	or	r24, r25
 606:	21 f4       	brne	.+8      	; 0x610 <fdevopen+0x54>
 608:	f0 93 18 04 	sts	0x0418, r31	; 0x800418 <__iob+0x1>
 60c:	e0 93 17 04 	sts	0x0417, r30	; 0x800417 <__iob>
 610:	20 97       	sbiw	r28, 0x00	; 0
 612:	c9 f0       	breq	.+50     	; 0x646 <fdevopen+0x8a>
 614:	d1 87       	std	Z+9, r29	; 0x09
 616:	c0 87       	std	Z+8, r28	; 0x08
 618:	83 81       	ldd	r24, Z+3	; 0x03
 61a:	82 60       	ori	r24, 0x02	; 2
 61c:	83 83       	std	Z+3, r24	; 0x03
 61e:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <__iob+0x2>
 622:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <__iob+0x3>
 626:	89 2b       	or	r24, r25
 628:	71 f4       	brne	.+28     	; 0x646 <fdevopen+0x8a>
 62a:	f0 93 1a 04 	sts	0x041A, r31	; 0x80041a <__iob+0x3>
 62e:	e0 93 19 04 	sts	0x0419, r30	; 0x800419 <__iob+0x2>
 632:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <__iob+0x4>
 636:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <__iob+0x5>
 63a:	89 2b       	or	r24, r25
 63c:	21 f4       	brne	.+8      	; 0x646 <fdevopen+0x8a>
 63e:	f0 93 1c 04 	sts	0x041C, r31	; 0x80041c <__iob+0x5>
 642:	e0 93 1b 04 	sts	0x041B, r30	; 0x80041b <__iob+0x4>
 646:	cf 01       	movw	r24, r30
 648:	df 91       	pop	r29
 64a:	cf 91       	pop	r28
 64c:	1f 91       	pop	r17
 64e:	0f 91       	pop	r16
 650:	08 95       	ret

00000652 <printf>:
 652:	a0 e0       	ldi	r26, 0x00	; 0
 654:	b0 e0       	ldi	r27, 0x00	; 0
 656:	ef e2       	ldi	r30, 0x2F	; 47
 658:	f3 e0       	ldi	r31, 0x03	; 3
 65a:	0c 94 67 07 	jmp	0xece	; 0xece <__prologue_saves__+0x20>
 65e:	ae 01       	movw	r20, r28
 660:	4b 5f       	subi	r20, 0xFB	; 251
 662:	5f 4f       	sbci	r21, 0xFF	; 255
 664:	fa 01       	movw	r30, r20
 666:	61 91       	ld	r22, Z+
 668:	71 91       	ld	r23, Z+
 66a:	af 01       	movw	r20, r30
 66c:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <__iob+0x2>
 670:	90 91 1a 04 	lds	r25, 0x041A	; 0x80041a <__iob+0x3>
 674:	0e 94 6f 03 	call	0x6de	; 0x6de <vfprintf>
 678:	e2 e0       	ldi	r30, 0x02	; 2
 67a:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__epilogue_restores__+0x20>

0000067e <puts>:
 67e:	0f 93       	push	r16
 680:	1f 93       	push	r17
 682:	cf 93       	push	r28
 684:	df 93       	push	r29
 686:	e0 91 19 04 	lds	r30, 0x0419	; 0x800419 <__iob+0x2>
 68a:	f0 91 1a 04 	lds	r31, 0x041A	; 0x80041a <__iob+0x3>
 68e:	23 81       	ldd	r18, Z+3	; 0x03
 690:	21 ff       	sbrs	r18, 1
 692:	1b c0       	rjmp	.+54     	; 0x6ca <puts+0x4c>
 694:	8c 01       	movw	r16, r24
 696:	d0 e0       	ldi	r29, 0x00	; 0
 698:	c0 e0       	ldi	r28, 0x00	; 0
 69a:	f8 01       	movw	r30, r16
 69c:	81 91       	ld	r24, Z+
 69e:	8f 01       	movw	r16, r30
 6a0:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <__iob+0x2>
 6a4:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <__iob+0x3>
 6a8:	db 01       	movw	r26, r22
 6aa:	18 96       	adiw	r26, 0x08	; 8
 6ac:	ed 91       	ld	r30, X+
 6ae:	fc 91       	ld	r31, X
 6b0:	19 97       	sbiw	r26, 0x09	; 9
 6b2:	88 23       	and	r24, r24
 6b4:	31 f0       	breq	.+12     	; 0x6c2 <puts+0x44>
 6b6:	09 95       	icall
 6b8:	89 2b       	or	r24, r25
 6ba:	79 f3       	breq	.-34     	; 0x69a <puts+0x1c>
 6bc:	df ef       	ldi	r29, 0xFF	; 255
 6be:	cf ef       	ldi	r28, 0xFF	; 255
 6c0:	ec cf       	rjmp	.-40     	; 0x69a <puts+0x1c>
 6c2:	8a e0       	ldi	r24, 0x0A	; 10
 6c4:	09 95       	icall
 6c6:	89 2b       	or	r24, r25
 6c8:	19 f0       	breq	.+6      	; 0x6d0 <puts+0x52>
 6ca:	8f ef       	ldi	r24, 0xFF	; 255
 6cc:	9f ef       	ldi	r25, 0xFF	; 255
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <puts+0x56>
 6d0:	8d 2f       	mov	r24, r29
 6d2:	9c 2f       	mov	r25, r28
 6d4:	df 91       	pop	r29
 6d6:	cf 91       	pop	r28
 6d8:	1f 91       	pop	r17
 6da:	0f 91       	pop	r16
 6dc:	08 95       	ret

000006de <vfprintf>:
 6de:	ab e0       	ldi	r26, 0x0B	; 11
 6e0:	b0 e0       	ldi	r27, 0x00	; 0
 6e2:	e5 e7       	ldi	r30, 0x75	; 117
 6e4:	f3 e0       	ldi	r31, 0x03	; 3
 6e6:	0c 94 57 07 	jmp	0xeae	; 0xeae <__prologue_saves__>
 6ea:	6c 01       	movw	r12, r24
 6ec:	7b 01       	movw	r14, r22
 6ee:	8a 01       	movw	r16, r20
 6f0:	fc 01       	movw	r30, r24
 6f2:	17 82       	std	Z+7, r1	; 0x07
 6f4:	16 82       	std	Z+6, r1	; 0x06
 6f6:	83 81       	ldd	r24, Z+3	; 0x03
 6f8:	81 ff       	sbrs	r24, 1
 6fa:	cc c1       	rjmp	.+920    	; 0xa94 <vfprintf+0x3b6>
 6fc:	ce 01       	movw	r24, r28
 6fe:	01 96       	adiw	r24, 0x01	; 1
 700:	3c 01       	movw	r6, r24
 702:	f6 01       	movw	r30, r12
 704:	93 81       	ldd	r25, Z+3	; 0x03
 706:	f7 01       	movw	r30, r14
 708:	93 fd       	sbrc	r25, 3
 70a:	85 91       	lpm	r24, Z+
 70c:	93 ff       	sbrs	r25, 3
 70e:	81 91       	ld	r24, Z+
 710:	7f 01       	movw	r14, r30
 712:	88 23       	and	r24, r24
 714:	09 f4       	brne	.+2      	; 0x718 <vfprintf+0x3a>
 716:	ba c1       	rjmp	.+884    	; 0xa8c <vfprintf+0x3ae>
 718:	85 32       	cpi	r24, 0x25	; 37
 71a:	39 f4       	brne	.+14     	; 0x72a <vfprintf+0x4c>
 71c:	93 fd       	sbrc	r25, 3
 71e:	85 91       	lpm	r24, Z+
 720:	93 ff       	sbrs	r25, 3
 722:	81 91       	ld	r24, Z+
 724:	7f 01       	movw	r14, r30
 726:	85 32       	cpi	r24, 0x25	; 37
 728:	29 f4       	brne	.+10     	; 0x734 <vfprintf+0x56>
 72a:	b6 01       	movw	r22, r12
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 732:	e7 cf       	rjmp	.-50     	; 0x702 <vfprintf+0x24>
 734:	91 2c       	mov	r9, r1
 736:	21 2c       	mov	r2, r1
 738:	31 2c       	mov	r3, r1
 73a:	ff e1       	ldi	r31, 0x1F	; 31
 73c:	f3 15       	cp	r31, r3
 73e:	d8 f0       	brcs	.+54     	; 0x776 <vfprintf+0x98>
 740:	8b 32       	cpi	r24, 0x2B	; 43
 742:	79 f0       	breq	.+30     	; 0x762 <vfprintf+0x84>
 744:	38 f4       	brcc	.+14     	; 0x754 <vfprintf+0x76>
 746:	80 32       	cpi	r24, 0x20	; 32
 748:	79 f0       	breq	.+30     	; 0x768 <vfprintf+0x8a>
 74a:	83 32       	cpi	r24, 0x23	; 35
 74c:	a1 f4       	brne	.+40     	; 0x776 <vfprintf+0x98>
 74e:	23 2d       	mov	r18, r3
 750:	20 61       	ori	r18, 0x10	; 16
 752:	1d c0       	rjmp	.+58     	; 0x78e <vfprintf+0xb0>
 754:	8d 32       	cpi	r24, 0x2D	; 45
 756:	61 f0       	breq	.+24     	; 0x770 <vfprintf+0x92>
 758:	80 33       	cpi	r24, 0x30	; 48
 75a:	69 f4       	brne	.+26     	; 0x776 <vfprintf+0x98>
 75c:	23 2d       	mov	r18, r3
 75e:	21 60       	ori	r18, 0x01	; 1
 760:	16 c0       	rjmp	.+44     	; 0x78e <vfprintf+0xb0>
 762:	83 2d       	mov	r24, r3
 764:	82 60       	ori	r24, 0x02	; 2
 766:	38 2e       	mov	r3, r24
 768:	e3 2d       	mov	r30, r3
 76a:	e4 60       	ori	r30, 0x04	; 4
 76c:	3e 2e       	mov	r3, r30
 76e:	2a c0       	rjmp	.+84     	; 0x7c4 <vfprintf+0xe6>
 770:	f3 2d       	mov	r31, r3
 772:	f8 60       	ori	r31, 0x08	; 8
 774:	1d c0       	rjmp	.+58     	; 0x7b0 <vfprintf+0xd2>
 776:	37 fc       	sbrc	r3, 7
 778:	2d c0       	rjmp	.+90     	; 0x7d4 <vfprintf+0xf6>
 77a:	20 ed       	ldi	r18, 0xD0	; 208
 77c:	28 0f       	add	r18, r24
 77e:	2a 30       	cpi	r18, 0x0A	; 10
 780:	40 f0       	brcs	.+16     	; 0x792 <vfprintf+0xb4>
 782:	8e 32       	cpi	r24, 0x2E	; 46
 784:	b9 f4       	brne	.+46     	; 0x7b4 <vfprintf+0xd6>
 786:	36 fc       	sbrc	r3, 6
 788:	81 c1       	rjmp	.+770    	; 0xa8c <vfprintf+0x3ae>
 78a:	23 2d       	mov	r18, r3
 78c:	20 64       	ori	r18, 0x40	; 64
 78e:	32 2e       	mov	r3, r18
 790:	19 c0       	rjmp	.+50     	; 0x7c4 <vfprintf+0xe6>
 792:	36 fe       	sbrs	r3, 6
 794:	06 c0       	rjmp	.+12     	; 0x7a2 <vfprintf+0xc4>
 796:	8a e0       	ldi	r24, 0x0A	; 10
 798:	98 9e       	mul	r9, r24
 79a:	20 0d       	add	r18, r0
 79c:	11 24       	eor	r1, r1
 79e:	92 2e       	mov	r9, r18
 7a0:	11 c0       	rjmp	.+34     	; 0x7c4 <vfprintf+0xe6>
 7a2:	ea e0       	ldi	r30, 0x0A	; 10
 7a4:	2e 9e       	mul	r2, r30
 7a6:	20 0d       	add	r18, r0
 7a8:	11 24       	eor	r1, r1
 7aa:	22 2e       	mov	r2, r18
 7ac:	f3 2d       	mov	r31, r3
 7ae:	f0 62       	ori	r31, 0x20	; 32
 7b0:	3f 2e       	mov	r3, r31
 7b2:	08 c0       	rjmp	.+16     	; 0x7c4 <vfprintf+0xe6>
 7b4:	8c 36       	cpi	r24, 0x6C	; 108
 7b6:	21 f4       	brne	.+8      	; 0x7c0 <vfprintf+0xe2>
 7b8:	83 2d       	mov	r24, r3
 7ba:	80 68       	ori	r24, 0x80	; 128
 7bc:	38 2e       	mov	r3, r24
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0xe6>
 7c0:	88 36       	cpi	r24, 0x68	; 104
 7c2:	41 f4       	brne	.+16     	; 0x7d4 <vfprintf+0xf6>
 7c4:	f7 01       	movw	r30, r14
 7c6:	93 fd       	sbrc	r25, 3
 7c8:	85 91       	lpm	r24, Z+
 7ca:	93 ff       	sbrs	r25, 3
 7cc:	81 91       	ld	r24, Z+
 7ce:	7f 01       	movw	r14, r30
 7d0:	81 11       	cpse	r24, r1
 7d2:	b3 cf       	rjmp	.-154    	; 0x73a <vfprintf+0x5c>
 7d4:	98 2f       	mov	r25, r24
 7d6:	9f 7d       	andi	r25, 0xDF	; 223
 7d8:	95 54       	subi	r25, 0x45	; 69
 7da:	93 30       	cpi	r25, 0x03	; 3
 7dc:	28 f4       	brcc	.+10     	; 0x7e8 <vfprintf+0x10a>
 7de:	0c 5f       	subi	r16, 0xFC	; 252
 7e0:	1f 4f       	sbci	r17, 0xFF	; 255
 7e2:	9f e3       	ldi	r25, 0x3F	; 63
 7e4:	99 83       	std	Y+1, r25	; 0x01
 7e6:	0d c0       	rjmp	.+26     	; 0x802 <vfprintf+0x124>
 7e8:	83 36       	cpi	r24, 0x63	; 99
 7ea:	31 f0       	breq	.+12     	; 0x7f8 <vfprintf+0x11a>
 7ec:	83 37       	cpi	r24, 0x73	; 115
 7ee:	71 f0       	breq	.+28     	; 0x80c <vfprintf+0x12e>
 7f0:	83 35       	cpi	r24, 0x53	; 83
 7f2:	09 f0       	breq	.+2      	; 0x7f6 <vfprintf+0x118>
 7f4:	59 c0       	rjmp	.+178    	; 0x8a8 <vfprintf+0x1ca>
 7f6:	21 c0       	rjmp	.+66     	; 0x83a <vfprintf+0x15c>
 7f8:	f8 01       	movw	r30, r16
 7fa:	80 81       	ld	r24, Z
 7fc:	89 83       	std	Y+1, r24	; 0x01
 7fe:	0e 5f       	subi	r16, 0xFE	; 254
 800:	1f 4f       	sbci	r17, 0xFF	; 255
 802:	88 24       	eor	r8, r8
 804:	83 94       	inc	r8
 806:	91 2c       	mov	r9, r1
 808:	53 01       	movw	r10, r6
 80a:	13 c0       	rjmp	.+38     	; 0x832 <vfprintf+0x154>
 80c:	28 01       	movw	r4, r16
 80e:	f2 e0       	ldi	r31, 0x02	; 2
 810:	4f 0e       	add	r4, r31
 812:	51 1c       	adc	r5, r1
 814:	f8 01       	movw	r30, r16
 816:	a0 80       	ld	r10, Z
 818:	b1 80       	ldd	r11, Z+1	; 0x01
 81a:	36 fe       	sbrs	r3, 6
 81c:	03 c0       	rjmp	.+6      	; 0x824 <vfprintf+0x146>
 81e:	69 2d       	mov	r22, r9
 820:	70 e0       	ldi	r23, 0x00	; 0
 822:	02 c0       	rjmp	.+4      	; 0x828 <vfprintf+0x14a>
 824:	6f ef       	ldi	r22, 0xFF	; 255
 826:	7f ef       	ldi	r23, 0xFF	; 255
 828:	c5 01       	movw	r24, r10
 82a:	0e 94 9f 06 	call	0xd3e	; 0xd3e <strnlen>
 82e:	4c 01       	movw	r8, r24
 830:	82 01       	movw	r16, r4
 832:	f3 2d       	mov	r31, r3
 834:	ff 77       	andi	r31, 0x7F	; 127
 836:	3f 2e       	mov	r3, r31
 838:	16 c0       	rjmp	.+44     	; 0x866 <vfprintf+0x188>
 83a:	28 01       	movw	r4, r16
 83c:	22 e0       	ldi	r18, 0x02	; 2
 83e:	42 0e       	add	r4, r18
 840:	51 1c       	adc	r5, r1
 842:	f8 01       	movw	r30, r16
 844:	a0 80       	ld	r10, Z
 846:	b1 80       	ldd	r11, Z+1	; 0x01
 848:	36 fe       	sbrs	r3, 6
 84a:	03 c0       	rjmp	.+6      	; 0x852 <vfprintf+0x174>
 84c:	69 2d       	mov	r22, r9
 84e:	70 e0       	ldi	r23, 0x00	; 0
 850:	02 c0       	rjmp	.+4      	; 0x856 <vfprintf+0x178>
 852:	6f ef       	ldi	r22, 0xFF	; 255
 854:	7f ef       	ldi	r23, 0xFF	; 255
 856:	c5 01       	movw	r24, r10
 858:	0e 94 8d 06 	call	0xd1a	; 0xd1a <strnlen_P>
 85c:	4c 01       	movw	r8, r24
 85e:	f3 2d       	mov	r31, r3
 860:	f0 68       	ori	r31, 0x80	; 128
 862:	3f 2e       	mov	r3, r31
 864:	82 01       	movw	r16, r4
 866:	33 fc       	sbrc	r3, 3
 868:	1b c0       	rjmp	.+54     	; 0x8a0 <vfprintf+0x1c2>
 86a:	82 2d       	mov	r24, r2
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	88 16       	cp	r8, r24
 870:	99 06       	cpc	r9, r25
 872:	b0 f4       	brcc	.+44     	; 0x8a0 <vfprintf+0x1c2>
 874:	b6 01       	movw	r22, r12
 876:	80 e2       	ldi	r24, 0x20	; 32
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 87e:	2a 94       	dec	r2
 880:	f4 cf       	rjmp	.-24     	; 0x86a <vfprintf+0x18c>
 882:	f5 01       	movw	r30, r10
 884:	37 fc       	sbrc	r3, 7
 886:	85 91       	lpm	r24, Z+
 888:	37 fe       	sbrs	r3, 7
 88a:	81 91       	ld	r24, Z+
 88c:	5f 01       	movw	r10, r30
 88e:	b6 01       	movw	r22, r12
 890:	90 e0       	ldi	r25, 0x00	; 0
 892:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 896:	21 10       	cpse	r2, r1
 898:	2a 94       	dec	r2
 89a:	21 e0       	ldi	r18, 0x01	; 1
 89c:	82 1a       	sub	r8, r18
 89e:	91 08       	sbc	r9, r1
 8a0:	81 14       	cp	r8, r1
 8a2:	91 04       	cpc	r9, r1
 8a4:	71 f7       	brne	.-36     	; 0x882 <vfprintf+0x1a4>
 8a6:	e8 c0       	rjmp	.+464    	; 0xa78 <vfprintf+0x39a>
 8a8:	84 36       	cpi	r24, 0x64	; 100
 8aa:	11 f0       	breq	.+4      	; 0x8b0 <vfprintf+0x1d2>
 8ac:	89 36       	cpi	r24, 0x69	; 105
 8ae:	41 f5       	brne	.+80     	; 0x900 <vfprintf+0x222>
 8b0:	f8 01       	movw	r30, r16
 8b2:	37 fe       	sbrs	r3, 7
 8b4:	07 c0       	rjmp	.+14     	; 0x8c4 <vfprintf+0x1e6>
 8b6:	60 81       	ld	r22, Z
 8b8:	71 81       	ldd	r23, Z+1	; 0x01
 8ba:	82 81       	ldd	r24, Z+2	; 0x02
 8bc:	93 81       	ldd	r25, Z+3	; 0x03
 8be:	0c 5f       	subi	r16, 0xFC	; 252
 8c0:	1f 4f       	sbci	r17, 0xFF	; 255
 8c2:	08 c0       	rjmp	.+16     	; 0x8d4 <vfprintf+0x1f6>
 8c4:	60 81       	ld	r22, Z
 8c6:	71 81       	ldd	r23, Z+1	; 0x01
 8c8:	07 2e       	mov	r0, r23
 8ca:	00 0c       	add	r0, r0
 8cc:	88 0b       	sbc	r24, r24
 8ce:	99 0b       	sbc	r25, r25
 8d0:	0e 5f       	subi	r16, 0xFE	; 254
 8d2:	1f 4f       	sbci	r17, 0xFF	; 255
 8d4:	f3 2d       	mov	r31, r3
 8d6:	ff 76       	andi	r31, 0x6F	; 111
 8d8:	3f 2e       	mov	r3, r31
 8da:	97 ff       	sbrs	r25, 7
 8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <vfprintf+0x212>
 8de:	90 95       	com	r25
 8e0:	80 95       	com	r24
 8e2:	70 95       	com	r23
 8e4:	61 95       	neg	r22
 8e6:	7f 4f       	sbci	r23, 0xFF	; 255
 8e8:	8f 4f       	sbci	r24, 0xFF	; 255
 8ea:	9f 4f       	sbci	r25, 0xFF	; 255
 8ec:	f0 68       	ori	r31, 0x80	; 128
 8ee:	3f 2e       	mov	r3, r31
 8f0:	2a e0       	ldi	r18, 0x0A	; 10
 8f2:	30 e0       	ldi	r19, 0x00	; 0
 8f4:	a3 01       	movw	r20, r6
 8f6:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__ultoa_invert>
 8fa:	88 2e       	mov	r8, r24
 8fc:	86 18       	sub	r8, r6
 8fe:	45 c0       	rjmp	.+138    	; 0x98a <vfprintf+0x2ac>
 900:	85 37       	cpi	r24, 0x75	; 117
 902:	31 f4       	brne	.+12     	; 0x910 <vfprintf+0x232>
 904:	23 2d       	mov	r18, r3
 906:	2f 7e       	andi	r18, 0xEF	; 239
 908:	b2 2e       	mov	r11, r18
 90a:	2a e0       	ldi	r18, 0x0A	; 10
 90c:	30 e0       	ldi	r19, 0x00	; 0
 90e:	25 c0       	rjmp	.+74     	; 0x95a <vfprintf+0x27c>
 910:	93 2d       	mov	r25, r3
 912:	99 7f       	andi	r25, 0xF9	; 249
 914:	b9 2e       	mov	r11, r25
 916:	8f 36       	cpi	r24, 0x6F	; 111
 918:	c1 f0       	breq	.+48     	; 0x94a <vfprintf+0x26c>
 91a:	18 f4       	brcc	.+6      	; 0x922 <vfprintf+0x244>
 91c:	88 35       	cpi	r24, 0x58	; 88
 91e:	79 f0       	breq	.+30     	; 0x93e <vfprintf+0x260>
 920:	b5 c0       	rjmp	.+362    	; 0xa8c <vfprintf+0x3ae>
 922:	80 37       	cpi	r24, 0x70	; 112
 924:	19 f0       	breq	.+6      	; 0x92c <vfprintf+0x24e>
 926:	88 37       	cpi	r24, 0x78	; 120
 928:	21 f0       	breq	.+8      	; 0x932 <vfprintf+0x254>
 92a:	b0 c0       	rjmp	.+352    	; 0xa8c <vfprintf+0x3ae>
 92c:	e9 2f       	mov	r30, r25
 92e:	e0 61       	ori	r30, 0x10	; 16
 930:	be 2e       	mov	r11, r30
 932:	b4 fe       	sbrs	r11, 4
 934:	0d c0       	rjmp	.+26     	; 0x950 <vfprintf+0x272>
 936:	fb 2d       	mov	r31, r11
 938:	f4 60       	ori	r31, 0x04	; 4
 93a:	bf 2e       	mov	r11, r31
 93c:	09 c0       	rjmp	.+18     	; 0x950 <vfprintf+0x272>
 93e:	34 fe       	sbrs	r3, 4
 940:	0a c0       	rjmp	.+20     	; 0x956 <vfprintf+0x278>
 942:	29 2f       	mov	r18, r25
 944:	26 60       	ori	r18, 0x06	; 6
 946:	b2 2e       	mov	r11, r18
 948:	06 c0       	rjmp	.+12     	; 0x956 <vfprintf+0x278>
 94a:	28 e0       	ldi	r18, 0x08	; 8
 94c:	30 e0       	ldi	r19, 0x00	; 0
 94e:	05 c0       	rjmp	.+10     	; 0x95a <vfprintf+0x27c>
 950:	20 e1       	ldi	r18, 0x10	; 16
 952:	30 e0       	ldi	r19, 0x00	; 0
 954:	02 c0       	rjmp	.+4      	; 0x95a <vfprintf+0x27c>
 956:	20 e1       	ldi	r18, 0x10	; 16
 958:	32 e0       	ldi	r19, 0x02	; 2
 95a:	f8 01       	movw	r30, r16
 95c:	b7 fe       	sbrs	r11, 7
 95e:	07 c0       	rjmp	.+14     	; 0x96e <vfprintf+0x290>
 960:	60 81       	ld	r22, Z
 962:	71 81       	ldd	r23, Z+1	; 0x01
 964:	82 81       	ldd	r24, Z+2	; 0x02
 966:	93 81       	ldd	r25, Z+3	; 0x03
 968:	0c 5f       	subi	r16, 0xFC	; 252
 96a:	1f 4f       	sbci	r17, 0xFF	; 255
 96c:	06 c0       	rjmp	.+12     	; 0x97a <vfprintf+0x29c>
 96e:	60 81       	ld	r22, Z
 970:	71 81       	ldd	r23, Z+1	; 0x01
 972:	80 e0       	ldi	r24, 0x00	; 0
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	0e 5f       	subi	r16, 0xFE	; 254
 978:	1f 4f       	sbci	r17, 0xFF	; 255
 97a:	a3 01       	movw	r20, r6
 97c:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__ultoa_invert>
 980:	88 2e       	mov	r8, r24
 982:	86 18       	sub	r8, r6
 984:	fb 2d       	mov	r31, r11
 986:	ff 77       	andi	r31, 0x7F	; 127
 988:	3f 2e       	mov	r3, r31
 98a:	36 fe       	sbrs	r3, 6
 98c:	0d c0       	rjmp	.+26     	; 0x9a8 <vfprintf+0x2ca>
 98e:	23 2d       	mov	r18, r3
 990:	2e 7f       	andi	r18, 0xFE	; 254
 992:	a2 2e       	mov	r10, r18
 994:	89 14       	cp	r8, r9
 996:	58 f4       	brcc	.+22     	; 0x9ae <vfprintf+0x2d0>
 998:	34 fe       	sbrs	r3, 4
 99a:	0b c0       	rjmp	.+22     	; 0x9b2 <vfprintf+0x2d4>
 99c:	32 fc       	sbrc	r3, 2
 99e:	09 c0       	rjmp	.+18     	; 0x9b2 <vfprintf+0x2d4>
 9a0:	83 2d       	mov	r24, r3
 9a2:	8e 7e       	andi	r24, 0xEE	; 238
 9a4:	a8 2e       	mov	r10, r24
 9a6:	05 c0       	rjmp	.+10     	; 0x9b2 <vfprintf+0x2d4>
 9a8:	b8 2c       	mov	r11, r8
 9aa:	a3 2c       	mov	r10, r3
 9ac:	03 c0       	rjmp	.+6      	; 0x9b4 <vfprintf+0x2d6>
 9ae:	b8 2c       	mov	r11, r8
 9b0:	01 c0       	rjmp	.+2      	; 0x9b4 <vfprintf+0x2d6>
 9b2:	b9 2c       	mov	r11, r9
 9b4:	a4 fe       	sbrs	r10, 4
 9b6:	0f c0       	rjmp	.+30     	; 0x9d6 <vfprintf+0x2f8>
 9b8:	fe 01       	movw	r30, r28
 9ba:	e8 0d       	add	r30, r8
 9bc:	f1 1d       	adc	r31, r1
 9be:	80 81       	ld	r24, Z
 9c0:	80 33       	cpi	r24, 0x30	; 48
 9c2:	21 f4       	brne	.+8      	; 0x9cc <vfprintf+0x2ee>
 9c4:	9a 2d       	mov	r25, r10
 9c6:	99 7e       	andi	r25, 0xE9	; 233
 9c8:	a9 2e       	mov	r10, r25
 9ca:	09 c0       	rjmp	.+18     	; 0x9de <vfprintf+0x300>
 9cc:	a2 fe       	sbrs	r10, 2
 9ce:	06 c0       	rjmp	.+12     	; 0x9dc <vfprintf+0x2fe>
 9d0:	b3 94       	inc	r11
 9d2:	b3 94       	inc	r11
 9d4:	04 c0       	rjmp	.+8      	; 0x9de <vfprintf+0x300>
 9d6:	8a 2d       	mov	r24, r10
 9d8:	86 78       	andi	r24, 0x86	; 134
 9da:	09 f0       	breq	.+2      	; 0x9de <vfprintf+0x300>
 9dc:	b3 94       	inc	r11
 9de:	a3 fc       	sbrc	r10, 3
 9e0:	11 c0       	rjmp	.+34     	; 0xa04 <vfprintf+0x326>
 9e2:	a0 fe       	sbrs	r10, 0
 9e4:	06 c0       	rjmp	.+12     	; 0x9f2 <vfprintf+0x314>
 9e6:	b2 14       	cp	r11, r2
 9e8:	88 f4       	brcc	.+34     	; 0xa0c <vfprintf+0x32e>
 9ea:	28 0c       	add	r2, r8
 9ec:	92 2c       	mov	r9, r2
 9ee:	9b 18       	sub	r9, r11
 9f0:	0e c0       	rjmp	.+28     	; 0xa0e <vfprintf+0x330>
 9f2:	b2 14       	cp	r11, r2
 9f4:	60 f4       	brcc	.+24     	; 0xa0e <vfprintf+0x330>
 9f6:	b6 01       	movw	r22, r12
 9f8:	80 e2       	ldi	r24, 0x20	; 32
 9fa:	90 e0       	ldi	r25, 0x00	; 0
 9fc:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 a00:	b3 94       	inc	r11
 a02:	f7 cf       	rjmp	.-18     	; 0x9f2 <vfprintf+0x314>
 a04:	b2 14       	cp	r11, r2
 a06:	18 f4       	brcc	.+6      	; 0xa0e <vfprintf+0x330>
 a08:	2b 18       	sub	r2, r11
 a0a:	02 c0       	rjmp	.+4      	; 0xa10 <vfprintf+0x332>
 a0c:	98 2c       	mov	r9, r8
 a0e:	21 2c       	mov	r2, r1
 a10:	a4 fe       	sbrs	r10, 4
 a12:	10 c0       	rjmp	.+32     	; 0xa34 <vfprintf+0x356>
 a14:	b6 01       	movw	r22, r12
 a16:	80 e3       	ldi	r24, 0x30	; 48
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 a1e:	a2 fe       	sbrs	r10, 2
 a20:	17 c0       	rjmp	.+46     	; 0xa50 <vfprintf+0x372>
 a22:	a1 fc       	sbrc	r10, 1
 a24:	03 c0       	rjmp	.+6      	; 0xa2c <vfprintf+0x34e>
 a26:	88 e7       	ldi	r24, 0x78	; 120
 a28:	90 e0       	ldi	r25, 0x00	; 0
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <vfprintf+0x352>
 a2c:	88 e5       	ldi	r24, 0x58	; 88
 a2e:	90 e0       	ldi	r25, 0x00	; 0
 a30:	b6 01       	movw	r22, r12
 a32:	0c c0       	rjmp	.+24     	; 0xa4c <vfprintf+0x36e>
 a34:	8a 2d       	mov	r24, r10
 a36:	86 78       	andi	r24, 0x86	; 134
 a38:	59 f0       	breq	.+22     	; 0xa50 <vfprintf+0x372>
 a3a:	a1 fe       	sbrs	r10, 1
 a3c:	02 c0       	rjmp	.+4      	; 0xa42 <vfprintf+0x364>
 a3e:	8b e2       	ldi	r24, 0x2B	; 43
 a40:	01 c0       	rjmp	.+2      	; 0xa44 <vfprintf+0x366>
 a42:	80 e2       	ldi	r24, 0x20	; 32
 a44:	a7 fc       	sbrc	r10, 7
 a46:	8d e2       	ldi	r24, 0x2D	; 45
 a48:	b6 01       	movw	r22, r12
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 a50:	89 14       	cp	r8, r9
 a52:	38 f4       	brcc	.+14     	; 0xa62 <vfprintf+0x384>
 a54:	b6 01       	movw	r22, r12
 a56:	80 e3       	ldi	r24, 0x30	; 48
 a58:	90 e0       	ldi	r25, 0x00	; 0
 a5a:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 a5e:	9a 94       	dec	r9
 a60:	f7 cf       	rjmp	.-18     	; 0xa50 <vfprintf+0x372>
 a62:	8a 94       	dec	r8
 a64:	f3 01       	movw	r30, r6
 a66:	e8 0d       	add	r30, r8
 a68:	f1 1d       	adc	r31, r1
 a6a:	80 81       	ld	r24, Z
 a6c:	b6 01       	movw	r22, r12
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 a74:	81 10       	cpse	r8, r1
 a76:	f5 cf       	rjmp	.-22     	; 0xa62 <vfprintf+0x384>
 a78:	22 20       	and	r2, r2
 a7a:	09 f4       	brne	.+2      	; 0xa7e <vfprintf+0x3a0>
 a7c:	42 ce       	rjmp	.-892    	; 0x702 <vfprintf+0x24>
 a7e:	b6 01       	movw	r22, r12
 a80:	80 e2       	ldi	r24, 0x20	; 32
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	0e 94 aa 06 	call	0xd54	; 0xd54 <fputc>
 a88:	2a 94       	dec	r2
 a8a:	f6 cf       	rjmp	.-20     	; 0xa78 <vfprintf+0x39a>
 a8c:	f6 01       	movw	r30, r12
 a8e:	86 81       	ldd	r24, Z+6	; 0x06
 a90:	97 81       	ldd	r25, Z+7	; 0x07
 a92:	02 c0       	rjmp	.+4      	; 0xa98 <vfprintf+0x3ba>
 a94:	8f ef       	ldi	r24, 0xFF	; 255
 a96:	9f ef       	ldi	r25, 0xFF	; 255
 a98:	2b 96       	adiw	r28, 0x0b	; 11
 a9a:	e2 e1       	ldi	r30, 0x12	; 18
 a9c:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__epilogue_restores__>

00000aa0 <calloc>:
 aa0:	0f 93       	push	r16
 aa2:	1f 93       	push	r17
 aa4:	cf 93       	push	r28
 aa6:	df 93       	push	r29
 aa8:	86 9f       	mul	r24, r22
 aaa:	80 01       	movw	r16, r0
 aac:	87 9f       	mul	r24, r23
 aae:	10 0d       	add	r17, r0
 ab0:	96 9f       	mul	r25, r22
 ab2:	10 0d       	add	r17, r0
 ab4:	11 24       	eor	r1, r1
 ab6:	c8 01       	movw	r24, r16
 ab8:	0e 94 6c 05 	call	0xad8	; 0xad8 <malloc>
 abc:	ec 01       	movw	r28, r24
 abe:	00 97       	sbiw	r24, 0x00	; 0
 ac0:	29 f0       	breq	.+10     	; 0xacc <calloc+0x2c>
 ac2:	a8 01       	movw	r20, r16
 ac4:	60 e0       	ldi	r22, 0x00	; 0
 ac6:	70 e0       	ldi	r23, 0x00	; 0
 ac8:	0e 94 98 06 	call	0xd30	; 0xd30 <memset>
 acc:	ce 01       	movw	r24, r28
 ace:	df 91       	pop	r29
 ad0:	cf 91       	pop	r28
 ad2:	1f 91       	pop	r17
 ad4:	0f 91       	pop	r16
 ad6:	08 95       	ret

00000ad8 <malloc>:
 ad8:	0f 93       	push	r16
 ada:	1f 93       	push	r17
 adc:	cf 93       	push	r28
 ade:	df 93       	push	r29
 ae0:	82 30       	cpi	r24, 0x02	; 2
 ae2:	91 05       	cpc	r25, r1
 ae4:	10 f4       	brcc	.+4      	; 0xaea <malloc+0x12>
 ae6:	82 e0       	ldi	r24, 0x02	; 2
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	e0 91 1f 04 	lds	r30, 0x041F	; 0x80041f <__flp>
 aee:	f0 91 20 04 	lds	r31, 0x0420	; 0x800420 <__flp+0x1>
 af2:	20 e0       	ldi	r18, 0x00	; 0
 af4:	30 e0       	ldi	r19, 0x00	; 0
 af6:	a0 e0       	ldi	r26, 0x00	; 0
 af8:	b0 e0       	ldi	r27, 0x00	; 0
 afa:	30 97       	sbiw	r30, 0x00	; 0
 afc:	19 f1       	breq	.+70     	; 0xb44 <malloc+0x6c>
 afe:	40 81       	ld	r20, Z
 b00:	51 81       	ldd	r21, Z+1	; 0x01
 b02:	02 81       	ldd	r16, Z+2	; 0x02
 b04:	13 81       	ldd	r17, Z+3	; 0x03
 b06:	48 17       	cp	r20, r24
 b08:	59 07       	cpc	r21, r25
 b0a:	c8 f0       	brcs	.+50     	; 0xb3e <malloc+0x66>
 b0c:	84 17       	cp	r24, r20
 b0e:	95 07       	cpc	r25, r21
 b10:	69 f4       	brne	.+26     	; 0xb2c <malloc+0x54>
 b12:	10 97       	sbiw	r26, 0x00	; 0
 b14:	31 f0       	breq	.+12     	; 0xb22 <malloc+0x4a>
 b16:	12 96       	adiw	r26, 0x02	; 2
 b18:	0c 93       	st	X, r16
 b1a:	12 97       	sbiw	r26, 0x02	; 2
 b1c:	13 96       	adiw	r26, 0x03	; 3
 b1e:	1c 93       	st	X, r17
 b20:	27 c0       	rjmp	.+78     	; 0xb70 <malloc+0x98>
 b22:	00 93 1f 04 	sts	0x041F, r16	; 0x80041f <__flp>
 b26:	10 93 20 04 	sts	0x0420, r17	; 0x800420 <__flp+0x1>
 b2a:	22 c0       	rjmp	.+68     	; 0xb70 <malloc+0x98>
 b2c:	21 15       	cp	r18, r1
 b2e:	31 05       	cpc	r19, r1
 b30:	19 f0       	breq	.+6      	; 0xb38 <malloc+0x60>
 b32:	42 17       	cp	r20, r18
 b34:	53 07       	cpc	r21, r19
 b36:	18 f4       	brcc	.+6      	; 0xb3e <malloc+0x66>
 b38:	9a 01       	movw	r18, r20
 b3a:	bd 01       	movw	r22, r26
 b3c:	ef 01       	movw	r28, r30
 b3e:	df 01       	movw	r26, r30
 b40:	f8 01       	movw	r30, r16
 b42:	db cf       	rjmp	.-74     	; 0xafa <malloc+0x22>
 b44:	21 15       	cp	r18, r1
 b46:	31 05       	cpc	r19, r1
 b48:	f9 f0       	breq	.+62     	; 0xb88 <malloc+0xb0>
 b4a:	28 1b       	sub	r18, r24
 b4c:	39 0b       	sbc	r19, r25
 b4e:	24 30       	cpi	r18, 0x04	; 4
 b50:	31 05       	cpc	r19, r1
 b52:	80 f4       	brcc	.+32     	; 0xb74 <malloc+0x9c>
 b54:	8a 81       	ldd	r24, Y+2	; 0x02
 b56:	9b 81       	ldd	r25, Y+3	; 0x03
 b58:	61 15       	cp	r22, r1
 b5a:	71 05       	cpc	r23, r1
 b5c:	21 f0       	breq	.+8      	; 0xb66 <malloc+0x8e>
 b5e:	fb 01       	movw	r30, r22
 b60:	93 83       	std	Z+3, r25	; 0x03
 b62:	82 83       	std	Z+2, r24	; 0x02
 b64:	04 c0       	rjmp	.+8      	; 0xb6e <malloc+0x96>
 b66:	90 93 20 04 	sts	0x0420, r25	; 0x800420 <__flp+0x1>
 b6a:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <__flp>
 b6e:	fe 01       	movw	r30, r28
 b70:	32 96       	adiw	r30, 0x02	; 2
 b72:	44 c0       	rjmp	.+136    	; 0xbfc <malloc+0x124>
 b74:	fe 01       	movw	r30, r28
 b76:	e2 0f       	add	r30, r18
 b78:	f3 1f       	adc	r31, r19
 b7a:	81 93       	st	Z+, r24
 b7c:	91 93       	st	Z+, r25
 b7e:	22 50       	subi	r18, 0x02	; 2
 b80:	31 09       	sbc	r19, r1
 b82:	39 83       	std	Y+1, r19	; 0x01
 b84:	28 83       	st	Y, r18
 b86:	3a c0       	rjmp	.+116    	; 0xbfc <malloc+0x124>
 b88:	20 91 1d 04 	lds	r18, 0x041D	; 0x80041d <__brkval>
 b8c:	30 91 1e 04 	lds	r19, 0x041E	; 0x80041e <__brkval+0x1>
 b90:	23 2b       	or	r18, r19
 b92:	41 f4       	brne	.+16     	; 0xba4 <malloc+0xcc>
 b94:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
 b98:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
 b9c:	30 93 1e 04 	sts	0x041E, r19	; 0x80041e <__brkval+0x1>
 ba0:	20 93 1d 04 	sts	0x041D, r18	; 0x80041d <__brkval>
 ba4:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
 ba8:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
 bac:	21 15       	cp	r18, r1
 bae:	31 05       	cpc	r19, r1
 bb0:	41 f4       	brne	.+16     	; 0xbc2 <malloc+0xea>
 bb2:	2d b7       	in	r18, 0x3d	; 61
 bb4:	3e b7       	in	r19, 0x3e	; 62
 bb6:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
 bba:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
 bbe:	24 1b       	sub	r18, r20
 bc0:	35 0b       	sbc	r19, r21
 bc2:	e0 91 1d 04 	lds	r30, 0x041D	; 0x80041d <__brkval>
 bc6:	f0 91 1e 04 	lds	r31, 0x041E	; 0x80041e <__brkval+0x1>
 bca:	e2 17       	cp	r30, r18
 bcc:	f3 07       	cpc	r31, r19
 bce:	a0 f4       	brcc	.+40     	; 0xbf8 <malloc+0x120>
 bd0:	2e 1b       	sub	r18, r30
 bd2:	3f 0b       	sbc	r19, r31
 bd4:	28 17       	cp	r18, r24
 bd6:	39 07       	cpc	r19, r25
 bd8:	78 f0       	brcs	.+30     	; 0xbf8 <malloc+0x120>
 bda:	ac 01       	movw	r20, r24
 bdc:	4e 5f       	subi	r20, 0xFE	; 254
 bde:	5f 4f       	sbci	r21, 0xFF	; 255
 be0:	24 17       	cp	r18, r20
 be2:	35 07       	cpc	r19, r21
 be4:	48 f0       	brcs	.+18     	; 0xbf8 <malloc+0x120>
 be6:	4e 0f       	add	r20, r30
 be8:	5f 1f       	adc	r21, r31
 bea:	50 93 1e 04 	sts	0x041E, r21	; 0x80041e <__brkval+0x1>
 bee:	40 93 1d 04 	sts	0x041D, r20	; 0x80041d <__brkval>
 bf2:	81 93       	st	Z+, r24
 bf4:	91 93       	st	Z+, r25
 bf6:	02 c0       	rjmp	.+4      	; 0xbfc <malloc+0x124>
 bf8:	e0 e0       	ldi	r30, 0x00	; 0
 bfa:	f0 e0       	ldi	r31, 0x00	; 0
 bfc:	cf 01       	movw	r24, r30
 bfe:	df 91       	pop	r29
 c00:	cf 91       	pop	r28
 c02:	1f 91       	pop	r17
 c04:	0f 91       	pop	r16
 c06:	08 95       	ret

00000c08 <free>:
 c08:	cf 93       	push	r28
 c0a:	df 93       	push	r29
 c0c:	00 97       	sbiw	r24, 0x00	; 0
 c0e:	09 f4       	brne	.+2      	; 0xc12 <free+0xa>
 c10:	81 c0       	rjmp	.+258    	; 0xd14 <free+0x10c>
 c12:	fc 01       	movw	r30, r24
 c14:	32 97       	sbiw	r30, 0x02	; 2
 c16:	13 82       	std	Z+3, r1	; 0x03
 c18:	12 82       	std	Z+2, r1	; 0x02
 c1a:	a0 91 1f 04 	lds	r26, 0x041F	; 0x80041f <__flp>
 c1e:	b0 91 20 04 	lds	r27, 0x0420	; 0x800420 <__flp+0x1>
 c22:	10 97       	sbiw	r26, 0x00	; 0
 c24:	81 f4       	brne	.+32     	; 0xc46 <free+0x3e>
 c26:	20 81       	ld	r18, Z
 c28:	31 81       	ldd	r19, Z+1	; 0x01
 c2a:	82 0f       	add	r24, r18
 c2c:	93 1f       	adc	r25, r19
 c2e:	20 91 1d 04 	lds	r18, 0x041D	; 0x80041d <__brkval>
 c32:	30 91 1e 04 	lds	r19, 0x041E	; 0x80041e <__brkval+0x1>
 c36:	28 17       	cp	r18, r24
 c38:	39 07       	cpc	r19, r25
 c3a:	51 f5       	brne	.+84     	; 0xc90 <free+0x88>
 c3c:	f0 93 1e 04 	sts	0x041E, r31	; 0x80041e <__brkval+0x1>
 c40:	e0 93 1d 04 	sts	0x041D, r30	; 0x80041d <__brkval>
 c44:	67 c0       	rjmp	.+206    	; 0xd14 <free+0x10c>
 c46:	ed 01       	movw	r28, r26
 c48:	20 e0       	ldi	r18, 0x00	; 0
 c4a:	30 e0       	ldi	r19, 0x00	; 0
 c4c:	ce 17       	cp	r28, r30
 c4e:	df 07       	cpc	r29, r31
 c50:	40 f4       	brcc	.+16     	; 0xc62 <free+0x5a>
 c52:	4a 81       	ldd	r20, Y+2	; 0x02
 c54:	5b 81       	ldd	r21, Y+3	; 0x03
 c56:	9e 01       	movw	r18, r28
 c58:	41 15       	cp	r20, r1
 c5a:	51 05       	cpc	r21, r1
 c5c:	f1 f0       	breq	.+60     	; 0xc9a <free+0x92>
 c5e:	ea 01       	movw	r28, r20
 c60:	f5 cf       	rjmp	.-22     	; 0xc4c <free+0x44>
 c62:	d3 83       	std	Z+3, r29	; 0x03
 c64:	c2 83       	std	Z+2, r28	; 0x02
 c66:	40 81       	ld	r20, Z
 c68:	51 81       	ldd	r21, Z+1	; 0x01
 c6a:	84 0f       	add	r24, r20
 c6c:	95 1f       	adc	r25, r21
 c6e:	c8 17       	cp	r28, r24
 c70:	d9 07       	cpc	r29, r25
 c72:	59 f4       	brne	.+22     	; 0xc8a <free+0x82>
 c74:	88 81       	ld	r24, Y
 c76:	99 81       	ldd	r25, Y+1	; 0x01
 c78:	84 0f       	add	r24, r20
 c7a:	95 1f       	adc	r25, r21
 c7c:	02 96       	adiw	r24, 0x02	; 2
 c7e:	91 83       	std	Z+1, r25	; 0x01
 c80:	80 83       	st	Z, r24
 c82:	8a 81       	ldd	r24, Y+2	; 0x02
 c84:	9b 81       	ldd	r25, Y+3	; 0x03
 c86:	93 83       	std	Z+3, r25	; 0x03
 c88:	82 83       	std	Z+2, r24	; 0x02
 c8a:	21 15       	cp	r18, r1
 c8c:	31 05       	cpc	r19, r1
 c8e:	29 f4       	brne	.+10     	; 0xc9a <free+0x92>
 c90:	f0 93 20 04 	sts	0x0420, r31	; 0x800420 <__flp+0x1>
 c94:	e0 93 1f 04 	sts	0x041F, r30	; 0x80041f <__flp>
 c98:	3d c0       	rjmp	.+122    	; 0xd14 <free+0x10c>
 c9a:	e9 01       	movw	r28, r18
 c9c:	fb 83       	std	Y+3, r31	; 0x03
 c9e:	ea 83       	std	Y+2, r30	; 0x02
 ca0:	49 91       	ld	r20, Y+
 ca2:	59 91       	ld	r21, Y+
 ca4:	c4 0f       	add	r28, r20
 ca6:	d5 1f       	adc	r29, r21
 ca8:	ec 17       	cp	r30, r28
 caa:	fd 07       	cpc	r31, r29
 cac:	61 f4       	brne	.+24     	; 0xcc6 <free+0xbe>
 cae:	80 81       	ld	r24, Z
 cb0:	91 81       	ldd	r25, Z+1	; 0x01
 cb2:	84 0f       	add	r24, r20
 cb4:	95 1f       	adc	r25, r21
 cb6:	02 96       	adiw	r24, 0x02	; 2
 cb8:	e9 01       	movw	r28, r18
 cba:	99 83       	std	Y+1, r25	; 0x01
 cbc:	88 83       	st	Y, r24
 cbe:	82 81       	ldd	r24, Z+2	; 0x02
 cc0:	93 81       	ldd	r25, Z+3	; 0x03
 cc2:	9b 83       	std	Y+3, r25	; 0x03
 cc4:	8a 83       	std	Y+2, r24	; 0x02
 cc6:	e0 e0       	ldi	r30, 0x00	; 0
 cc8:	f0 e0       	ldi	r31, 0x00	; 0
 cca:	12 96       	adiw	r26, 0x02	; 2
 ccc:	8d 91       	ld	r24, X+
 cce:	9c 91       	ld	r25, X
 cd0:	13 97       	sbiw	r26, 0x03	; 3
 cd2:	00 97       	sbiw	r24, 0x00	; 0
 cd4:	19 f0       	breq	.+6      	; 0xcdc <free+0xd4>
 cd6:	fd 01       	movw	r30, r26
 cd8:	dc 01       	movw	r26, r24
 cda:	f7 cf       	rjmp	.-18     	; 0xcca <free+0xc2>
 cdc:	8d 91       	ld	r24, X+
 cde:	9c 91       	ld	r25, X
 ce0:	11 97       	sbiw	r26, 0x01	; 1
 ce2:	9d 01       	movw	r18, r26
 ce4:	2e 5f       	subi	r18, 0xFE	; 254
 ce6:	3f 4f       	sbci	r19, 0xFF	; 255
 ce8:	82 0f       	add	r24, r18
 cea:	93 1f       	adc	r25, r19
 cec:	20 91 1d 04 	lds	r18, 0x041D	; 0x80041d <__brkval>
 cf0:	30 91 1e 04 	lds	r19, 0x041E	; 0x80041e <__brkval+0x1>
 cf4:	28 17       	cp	r18, r24
 cf6:	39 07       	cpc	r19, r25
 cf8:	69 f4       	brne	.+26     	; 0xd14 <free+0x10c>
 cfa:	30 97       	sbiw	r30, 0x00	; 0
 cfc:	29 f4       	brne	.+10     	; 0xd08 <free+0x100>
 cfe:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <__flp+0x1>
 d02:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <__flp>
 d06:	02 c0       	rjmp	.+4      	; 0xd0c <free+0x104>
 d08:	13 82       	std	Z+3, r1	; 0x03
 d0a:	12 82       	std	Z+2, r1	; 0x02
 d0c:	b0 93 1e 04 	sts	0x041E, r27	; 0x80041e <__brkval+0x1>
 d10:	a0 93 1d 04 	sts	0x041D, r26	; 0x80041d <__brkval>
 d14:	df 91       	pop	r29
 d16:	cf 91       	pop	r28
 d18:	08 95       	ret

00000d1a <strnlen_P>:
 d1a:	fc 01       	movw	r30, r24
 d1c:	05 90       	lpm	r0, Z+
 d1e:	61 50       	subi	r22, 0x01	; 1
 d20:	70 40       	sbci	r23, 0x00	; 0
 d22:	01 10       	cpse	r0, r1
 d24:	d8 f7       	brcc	.-10     	; 0xd1c <strnlen_P+0x2>
 d26:	80 95       	com	r24
 d28:	90 95       	com	r25
 d2a:	8e 0f       	add	r24, r30
 d2c:	9f 1f       	adc	r25, r31
 d2e:	08 95       	ret

00000d30 <memset>:
 d30:	dc 01       	movw	r26, r24
 d32:	01 c0       	rjmp	.+2      	; 0xd36 <memset+0x6>
 d34:	6d 93       	st	X+, r22
 d36:	41 50       	subi	r20, 0x01	; 1
 d38:	50 40       	sbci	r21, 0x00	; 0
 d3a:	e0 f7       	brcc	.-8      	; 0xd34 <memset+0x4>
 d3c:	08 95       	ret

00000d3e <strnlen>:
 d3e:	fc 01       	movw	r30, r24
 d40:	61 50       	subi	r22, 0x01	; 1
 d42:	70 40       	sbci	r23, 0x00	; 0
 d44:	01 90       	ld	r0, Z+
 d46:	01 10       	cpse	r0, r1
 d48:	d8 f7       	brcc	.-10     	; 0xd40 <strnlen+0x2>
 d4a:	80 95       	com	r24
 d4c:	90 95       	com	r25
 d4e:	8e 0f       	add	r24, r30
 d50:	9f 1f       	adc	r25, r31
 d52:	08 95       	ret

00000d54 <fputc>:
 d54:	0f 93       	push	r16
 d56:	1f 93       	push	r17
 d58:	cf 93       	push	r28
 d5a:	df 93       	push	r29
 d5c:	fb 01       	movw	r30, r22
 d5e:	23 81       	ldd	r18, Z+3	; 0x03
 d60:	21 fd       	sbrc	r18, 1
 d62:	03 c0       	rjmp	.+6      	; 0xd6a <fputc+0x16>
 d64:	8f ef       	ldi	r24, 0xFF	; 255
 d66:	9f ef       	ldi	r25, 0xFF	; 255
 d68:	2c c0       	rjmp	.+88     	; 0xdc2 <fputc+0x6e>
 d6a:	22 ff       	sbrs	r18, 2
 d6c:	16 c0       	rjmp	.+44     	; 0xd9a <fputc+0x46>
 d6e:	46 81       	ldd	r20, Z+6	; 0x06
 d70:	57 81       	ldd	r21, Z+7	; 0x07
 d72:	24 81       	ldd	r18, Z+4	; 0x04
 d74:	35 81       	ldd	r19, Z+5	; 0x05
 d76:	42 17       	cp	r20, r18
 d78:	53 07       	cpc	r21, r19
 d7a:	44 f4       	brge	.+16     	; 0xd8c <fputc+0x38>
 d7c:	a0 81       	ld	r26, Z
 d7e:	b1 81       	ldd	r27, Z+1	; 0x01
 d80:	9d 01       	movw	r18, r26
 d82:	2f 5f       	subi	r18, 0xFF	; 255
 d84:	3f 4f       	sbci	r19, 0xFF	; 255
 d86:	31 83       	std	Z+1, r19	; 0x01
 d88:	20 83       	st	Z, r18
 d8a:	8c 93       	st	X, r24
 d8c:	26 81       	ldd	r18, Z+6	; 0x06
 d8e:	37 81       	ldd	r19, Z+7	; 0x07
 d90:	2f 5f       	subi	r18, 0xFF	; 255
 d92:	3f 4f       	sbci	r19, 0xFF	; 255
 d94:	37 83       	std	Z+7, r19	; 0x07
 d96:	26 83       	std	Z+6, r18	; 0x06
 d98:	14 c0       	rjmp	.+40     	; 0xdc2 <fputc+0x6e>
 d9a:	8b 01       	movw	r16, r22
 d9c:	ec 01       	movw	r28, r24
 d9e:	fb 01       	movw	r30, r22
 da0:	00 84       	ldd	r0, Z+8	; 0x08
 da2:	f1 85       	ldd	r31, Z+9	; 0x09
 da4:	e0 2d       	mov	r30, r0
 da6:	09 95       	icall
 da8:	89 2b       	or	r24, r25
 daa:	e1 f6       	brne	.-72     	; 0xd64 <fputc+0x10>
 dac:	d8 01       	movw	r26, r16
 dae:	16 96       	adiw	r26, 0x06	; 6
 db0:	8d 91       	ld	r24, X+
 db2:	9c 91       	ld	r25, X
 db4:	17 97       	sbiw	r26, 0x07	; 7
 db6:	01 96       	adiw	r24, 0x01	; 1
 db8:	17 96       	adiw	r26, 0x07	; 7
 dba:	9c 93       	st	X, r25
 dbc:	8e 93       	st	-X, r24
 dbe:	16 97       	sbiw	r26, 0x06	; 6
 dc0:	ce 01       	movw	r24, r28
 dc2:	df 91       	pop	r29
 dc4:	cf 91       	pop	r28
 dc6:	1f 91       	pop	r17
 dc8:	0f 91       	pop	r16
 dca:	08 95       	ret

00000dcc <__ultoa_invert>:
 dcc:	fa 01       	movw	r30, r20
 dce:	aa 27       	eor	r26, r26
 dd0:	28 30       	cpi	r18, 0x08	; 8
 dd2:	51 f1       	breq	.+84     	; 0xe28 <__ultoa_invert+0x5c>
 dd4:	20 31       	cpi	r18, 0x10	; 16
 dd6:	81 f1       	breq	.+96     	; 0xe38 <__ultoa_invert+0x6c>
 dd8:	e8 94       	clt
 dda:	6f 93       	push	r22
 ddc:	6e 7f       	andi	r22, 0xFE	; 254
 dde:	6e 5f       	subi	r22, 0xFE	; 254
 de0:	7f 4f       	sbci	r23, 0xFF	; 255
 de2:	8f 4f       	sbci	r24, 0xFF	; 255
 de4:	9f 4f       	sbci	r25, 0xFF	; 255
 de6:	af 4f       	sbci	r26, 0xFF	; 255
 de8:	b1 e0       	ldi	r27, 0x01	; 1
 dea:	3e d0       	rcall	.+124    	; 0xe68 <__ultoa_invert+0x9c>
 dec:	b4 e0       	ldi	r27, 0x04	; 4
 dee:	3c d0       	rcall	.+120    	; 0xe68 <__ultoa_invert+0x9c>
 df0:	67 0f       	add	r22, r23
 df2:	78 1f       	adc	r23, r24
 df4:	89 1f       	adc	r24, r25
 df6:	9a 1f       	adc	r25, r26
 df8:	a1 1d       	adc	r26, r1
 dfa:	68 0f       	add	r22, r24
 dfc:	79 1f       	adc	r23, r25
 dfe:	8a 1f       	adc	r24, r26
 e00:	91 1d       	adc	r25, r1
 e02:	a1 1d       	adc	r26, r1
 e04:	6a 0f       	add	r22, r26
 e06:	71 1d       	adc	r23, r1
 e08:	81 1d       	adc	r24, r1
 e0a:	91 1d       	adc	r25, r1
 e0c:	a1 1d       	adc	r26, r1
 e0e:	20 d0       	rcall	.+64     	; 0xe50 <__ultoa_invert+0x84>
 e10:	09 f4       	brne	.+2      	; 0xe14 <__ultoa_invert+0x48>
 e12:	68 94       	set
 e14:	3f 91       	pop	r19
 e16:	2a e0       	ldi	r18, 0x0A	; 10
 e18:	26 9f       	mul	r18, r22
 e1a:	11 24       	eor	r1, r1
 e1c:	30 19       	sub	r19, r0
 e1e:	30 5d       	subi	r19, 0xD0	; 208
 e20:	31 93       	st	Z+, r19
 e22:	de f6       	brtc	.-74     	; 0xdda <__ultoa_invert+0xe>
 e24:	cf 01       	movw	r24, r30
 e26:	08 95       	ret
 e28:	46 2f       	mov	r20, r22
 e2a:	47 70       	andi	r20, 0x07	; 7
 e2c:	40 5d       	subi	r20, 0xD0	; 208
 e2e:	41 93       	st	Z+, r20
 e30:	b3 e0       	ldi	r27, 0x03	; 3
 e32:	0f d0       	rcall	.+30     	; 0xe52 <__ultoa_invert+0x86>
 e34:	c9 f7       	brne	.-14     	; 0xe28 <__ultoa_invert+0x5c>
 e36:	f6 cf       	rjmp	.-20     	; 0xe24 <__ultoa_invert+0x58>
 e38:	46 2f       	mov	r20, r22
 e3a:	4f 70       	andi	r20, 0x0F	; 15
 e3c:	40 5d       	subi	r20, 0xD0	; 208
 e3e:	4a 33       	cpi	r20, 0x3A	; 58
 e40:	18 f0       	brcs	.+6      	; 0xe48 <__ultoa_invert+0x7c>
 e42:	49 5d       	subi	r20, 0xD9	; 217
 e44:	31 fd       	sbrc	r19, 1
 e46:	40 52       	subi	r20, 0x20	; 32
 e48:	41 93       	st	Z+, r20
 e4a:	02 d0       	rcall	.+4      	; 0xe50 <__ultoa_invert+0x84>
 e4c:	a9 f7       	brne	.-22     	; 0xe38 <__ultoa_invert+0x6c>
 e4e:	ea cf       	rjmp	.-44     	; 0xe24 <__ultoa_invert+0x58>
 e50:	b4 e0       	ldi	r27, 0x04	; 4
 e52:	a6 95       	lsr	r26
 e54:	97 95       	ror	r25
 e56:	87 95       	ror	r24
 e58:	77 95       	ror	r23
 e5a:	67 95       	ror	r22
 e5c:	ba 95       	dec	r27
 e5e:	c9 f7       	brne	.-14     	; 0xe52 <__ultoa_invert+0x86>
 e60:	00 97       	sbiw	r24, 0x00	; 0
 e62:	61 05       	cpc	r22, r1
 e64:	71 05       	cpc	r23, r1
 e66:	08 95       	ret
 e68:	9b 01       	movw	r18, r22
 e6a:	ac 01       	movw	r20, r24
 e6c:	0a 2e       	mov	r0, r26
 e6e:	06 94       	lsr	r0
 e70:	57 95       	ror	r21
 e72:	47 95       	ror	r20
 e74:	37 95       	ror	r19
 e76:	27 95       	ror	r18
 e78:	ba 95       	dec	r27
 e7a:	c9 f7       	brne	.-14     	; 0xe6e <__ultoa_invert+0xa2>
 e7c:	62 0f       	add	r22, r18
 e7e:	73 1f       	adc	r23, r19
 e80:	84 1f       	adc	r24, r20
 e82:	95 1f       	adc	r25, r21
 e84:	a0 1d       	adc	r26, r0
 e86:	08 95       	ret

00000e88 <__muluhisi3>:
 e88:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__umulhisi3>
 e8c:	a5 9f       	mul	r26, r21
 e8e:	90 0d       	add	r25, r0
 e90:	b4 9f       	mul	r27, r20
 e92:	90 0d       	add	r25, r0
 e94:	a4 9f       	mul	r26, r20
 e96:	80 0d       	add	r24, r0
 e98:	91 1d       	adc	r25, r1
 e9a:	11 24       	eor	r1, r1
 e9c:	08 95       	ret

00000e9e <__mulshisi3>:
 e9e:	b7 ff       	sbrs	r27, 7
 ea0:	0c 94 44 07 	jmp	0xe88	; 0xe88 <__muluhisi3>

00000ea4 <__mulohisi3>:
 ea4:	0e 94 44 07 	call	0xe88	; 0xe88 <__muluhisi3>
 ea8:	82 1b       	sub	r24, r18
 eaa:	93 0b       	sbc	r25, r19
 eac:	08 95       	ret

00000eae <__prologue_saves__>:
 eae:	2f 92       	push	r2
 eb0:	3f 92       	push	r3
 eb2:	4f 92       	push	r4
 eb4:	5f 92       	push	r5
 eb6:	6f 92       	push	r6
 eb8:	7f 92       	push	r7
 eba:	8f 92       	push	r8
 ebc:	9f 92       	push	r9
 ebe:	af 92       	push	r10
 ec0:	bf 92       	push	r11
 ec2:	cf 92       	push	r12
 ec4:	df 92       	push	r13
 ec6:	ef 92       	push	r14
 ec8:	ff 92       	push	r15
 eca:	0f 93       	push	r16
 ecc:	1f 93       	push	r17
 ece:	cf 93       	push	r28
 ed0:	df 93       	push	r29
 ed2:	cd b7       	in	r28, 0x3d	; 61
 ed4:	de b7       	in	r29, 0x3e	; 62
 ed6:	ca 1b       	sub	r28, r26
 ed8:	db 0b       	sbc	r29, r27
 eda:	0f b6       	in	r0, 0x3f	; 63
 edc:	f8 94       	cli
 ede:	de bf       	out	0x3e, r29	; 62
 ee0:	0f be       	out	0x3f, r0	; 63
 ee2:	cd bf       	out	0x3d, r28	; 61
 ee4:	09 94       	ijmp

00000ee6 <__epilogue_restores__>:
 ee6:	2a 88       	ldd	r2, Y+18	; 0x12
 ee8:	39 88       	ldd	r3, Y+17	; 0x11
 eea:	48 88       	ldd	r4, Y+16	; 0x10
 eec:	5f 84       	ldd	r5, Y+15	; 0x0f
 eee:	6e 84       	ldd	r6, Y+14	; 0x0e
 ef0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ef2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ef4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ef6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ef8:	b9 84       	ldd	r11, Y+9	; 0x09
 efa:	c8 84       	ldd	r12, Y+8	; 0x08
 efc:	df 80       	ldd	r13, Y+7	; 0x07
 efe:	ee 80       	ldd	r14, Y+6	; 0x06
 f00:	fd 80       	ldd	r15, Y+5	; 0x05
 f02:	0c 81       	ldd	r16, Y+4	; 0x04
 f04:	1b 81       	ldd	r17, Y+3	; 0x03
 f06:	aa 81       	ldd	r26, Y+2	; 0x02
 f08:	b9 81       	ldd	r27, Y+1	; 0x01
 f0a:	ce 0f       	add	r28, r30
 f0c:	d1 1d       	adc	r29, r1
 f0e:	0f b6       	in	r0, 0x3f	; 63
 f10:	f8 94       	cli
 f12:	de bf       	out	0x3e, r29	; 62
 f14:	0f be       	out	0x3f, r0	; 63
 f16:	cd bf       	out	0x3d, r28	; 61
 f18:	ed 01       	movw	r28, r26
 f1a:	08 95       	ret

00000f1c <__umulhisi3>:
 f1c:	a2 9f       	mul	r26, r18
 f1e:	b0 01       	movw	r22, r0
 f20:	b3 9f       	mul	r27, r19
 f22:	c0 01       	movw	r24, r0
 f24:	a3 9f       	mul	r26, r19
 f26:	70 0d       	add	r23, r0
 f28:	81 1d       	adc	r24, r1
 f2a:	11 24       	eor	r1, r1
 f2c:	91 1d       	adc	r25, r1
 f2e:	b2 9f       	mul	r27, r18
 f30:	70 0d       	add	r23, r0
 f32:	81 1d       	adc	r24, r1
 f34:	11 24       	eor	r1, r1
 f36:	91 1d       	adc	r25, r1
 f38:	08 95       	ret

00000f3a <_exit>:
 f3a:	f8 94       	cli

00000f3c <__stop_program>:
 f3c:	ff cf       	rjmp	.-2      	; 0xf3c <__stop_program>
