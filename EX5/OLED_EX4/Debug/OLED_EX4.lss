
OLED_EX4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000033a  00800100  0000125a  000012ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000125a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  0080043a  0080043a  00001628  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001628  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001684  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  000016c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e2b  00000000  00000000  00001858  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d41  00000000  00000000  00003683  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e9c  00000000  00000000  000043c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000524  00000000  00000000  00005260  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000815  00000000  00000000  00005784  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012f8  00000000  00000000  00005f99  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00007291  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       8:	0c 94 3f 02 	jmp	0x47e	; 0x47e <__vector_2>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	14 e0       	ldi	r17, 0x04	; 4
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ea e5       	ldi	r30, 0x5A	; 90
      84:	f2 e1       	ldi	r31, 0x12	; 18
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	aa 33       	cpi	r26, 0x3A	; 58
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	aa e3       	ldi	r26, 0x3A	; 58
      96:	b4 e0       	ldi	r27, 0x04	; 4
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a6 34       	cpi	r26, 0x46	; 70
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 60 03 	call	0x6c0	; 0x6c0 <main>
      a6:	0c 94 2b 09 	jmp	0x1256	; 0x1256 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <CAN_check_tx_buffer_pending>:
      ae:	83 30       	cpi	r24, 0x03	; 3
      b0:	38 f0       	brcs	.+14     	; 0xc0 <CAN_check_tx_buffer_pending+0x12>
      b2:	84 e1       	ldi	r24, 0x14	; 20
      b4:	91 e0       	ldi	r25, 0x01	; 1
      b6:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
      ba:	81 e0       	ldi	r24, 0x01	; 1
      bc:	90 e0       	ldi	r25, 0x00	; 0
      be:	08 95       	ret
      c0:	82 95       	swap	r24
      c2:	80 7f       	andi	r24, 0xF0	; 240
      c4:	80 5d       	subi	r24, 0xD0	; 208
      c6:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
      ca:	21 e0       	ldi	r18, 0x01	; 1
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	83 ff       	sbrs	r24, 3
      d0:	20 e0       	ldi	r18, 0x00	; 0
      d2:	82 2f       	mov	r24, r18
      d4:	08 95       	ret

000000d6 <CAN_transmit_message>:
      d6:	cf 92       	push	r12
      d8:	df 92       	push	r13
      da:	ef 92       	push	r14
      dc:	ff 92       	push	r15
      de:	1f 93       	push	r17
      e0:	cf 93       	push	r28
      e2:	df 93       	push	r29
      e4:	cd b7       	in	r28, 0x3d	; 61
      e6:	de b7       	in	r29, 0x3e	; 62
      e8:	2b 97       	sbiw	r28, 0x0b	; 11
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	f8 94       	cli
      ee:	de bf       	out	0x3e, r29	; 62
      f0:	0f be       	out	0x3f, r0	; 63
      f2:	cd bf       	out	0x3d, r28	; 61
      f4:	6c 01       	movw	r12, r24
      f6:	10 e0       	ldi	r17, 0x00	; 0
      f8:	81 2f       	mov	r24, r17
      fa:	0e 94 57 00 	call	0xae	; 0xae <CAN_check_tx_buffer_pending>
      fe:	89 2b       	or	r24, r25
     100:	19 f4       	brne	.+6      	; 0x108 <CAN_transmit_message+0x32>
     102:	10 93 3a 04 	sts	0x043A, r17	; 0x80043a <__data_end>
     106:	0b c0       	rjmp	.+22     	; 0x11e <CAN_transmit_message+0x48>
     108:	81 2f       	mov	r24, r17
     10a:	0e 94 57 00 	call	0xae	; 0xae <CAN_check_tx_buffer_pending>
     10e:	89 2b       	or	r24, r25
     110:	19 f0       	breq	.+6      	; 0x118 <CAN_transmit_message+0x42>
     112:	12 30       	cpi	r17, 0x02	; 2
     114:	08 f0       	brcs	.+2      	; 0x118 <CAN_transmit_message+0x42>
     116:	a1 c0       	rjmp	.+322    	; 0x25a <CAN_transmit_message+0x184>
     118:	1f 5f       	subi	r17, 0xFF	; 255
     11a:	13 30       	cpi	r17, 0x03	; 3
     11c:	69 f7       	brne	.-38     	; 0xf8 <CAN_transmit_message+0x22>
     11e:	f6 01       	movw	r30, r12
     120:	60 81       	ld	r22, Z
     122:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     126:	82 95       	swap	r24
     128:	80 7f       	andi	r24, 0xF0	; 240
     12a:	8f 5c       	subi	r24, 0xCF	; 207
     12c:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <MCP_write_byte>
     130:	f6 01       	movw	r30, r12
     132:	61 81       	ldd	r22, Z+1	; 0x01
     134:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     138:	82 95       	swap	r24
     13a:	80 7f       	andi	r24, 0xF0	; 240
     13c:	8e 5c       	subi	r24, 0xCE	; 206
     13e:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <MCP_write_byte>
     142:	f6 01       	movw	r30, r12
     144:	62 81       	ldd	r22, Z+2	; 0x02
     146:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     14a:	82 95       	swap	r24
     14c:	80 7f       	andi	r24, 0xF0	; 240
     14e:	8b 5c       	subi	r24, 0xCB	; 203
     150:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <MCP_write_byte>
     154:	f6 01       	movw	r30, r12
     156:	42 81       	ldd	r20, Z+2	; 0x02
     158:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     15c:	82 95       	swap	r24
     15e:	80 7f       	andi	r24, 0xF0	; 240
     160:	b6 01       	movw	r22, r12
     162:	6d 5f       	subi	r22, 0xFD	; 253
     164:	7f 4f       	sbci	r23, 0xFF	; 255
     166:	8a 5c       	subi	r24, 0xCA	; 202
     168:	0e 94 33 04 	call	0x866	; 0x866 <MCP_write>
     16c:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     170:	82 95       	swap	r24
     172:	80 7f       	andi	r24, 0xF0	; 240
     174:	8f 5c       	subi	r24, 0xCF	; 207
     176:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     17a:	89 83       	std	Y+1, r24	; 0x01
     17c:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     180:	82 95       	swap	r24
     182:	80 7f       	andi	r24, 0xF0	; 240
     184:	8e 5c       	subi	r24, 0xCE	; 206
     186:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     18a:	8a 83       	std	Y+2, r24	; 0x02
     18c:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     190:	82 95       	swap	r24
     192:	80 7f       	andi	r24, 0xF0	; 240
     194:	8b 5c       	subi	r24, 0xCB	; 203
     196:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     19a:	8b 83       	std	Y+3, r24	; 0x03
     19c:	8b 81       	ldd	r24, Y+3	; 0x03
     19e:	88 23       	and	r24, r24
     1a0:	c9 f0       	breq	.+50     	; 0x1d4 <CAN_transmit_message+0xfe>
     1a2:	10 e0       	ldi	r17, 0x00	; 0
     1a4:	e1 2e       	mov	r14, r17
     1a6:	f1 2c       	mov	r15, r1
     1a8:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     1ac:	21 2f       	mov	r18, r17
     1ae:	f0 e1       	ldi	r31, 0x10	; 16
     1b0:	8f 9f       	mul	r24, r31
     1b2:	20 0d       	add	r18, r0
     1b4:	11 24       	eor	r1, r1
     1b6:	82 2f       	mov	r24, r18
     1b8:	8a 5c       	subi	r24, 0xCA	; 202
     1ba:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     1be:	e4 e0       	ldi	r30, 0x04	; 4
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	ec 0f       	add	r30, r28
     1c4:	fd 1f       	adc	r31, r29
     1c6:	ee 0d       	add	r30, r14
     1c8:	ff 1d       	adc	r31, r15
     1ca:	80 83       	st	Z, r24
     1cc:	1f 5f       	subi	r17, 0xFF	; 255
     1ce:	8b 81       	ldd	r24, Y+3	; 0x03
     1d0:	18 17       	cp	r17, r24
     1d2:	40 f3       	brcs	.-48     	; 0x1a4 <CAN_transmit_message+0xce>
     1d4:	99 81       	ldd	r25, Y+1	; 0x01
     1d6:	f6 01       	movw	r30, r12
     1d8:	80 81       	ld	r24, Z
     1da:	98 13       	cpse	r25, r24
     1dc:	08 c0       	rjmp	.+16     	; 0x1ee <CAN_transmit_message+0x118>
     1de:	9a 81       	ldd	r25, Y+2	; 0x02
     1e0:	81 81       	ldd	r24, Z+1	; 0x01
     1e2:	98 13       	cpse	r25, r24
     1e4:	04 c0       	rjmp	.+8      	; 0x1ee <CAN_transmit_message+0x118>
     1e6:	9b 81       	ldd	r25, Y+3	; 0x03
     1e8:	82 81       	ldd	r24, Z+2	; 0x02
     1ea:	98 17       	cp	r25, r24
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <CAN_transmit_message+0x120>
     1ee:	89 e4       	ldi	r24, 0x49	; 73
     1f0:	91 e0       	ldi	r25, 0x01	; 1
     1f2:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
     1f6:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <__data_end>
     1fa:	81 30       	cpi	r24, 0x01	; 1
     1fc:	61 f0       	breq	.+24     	; 0x216 <CAN_transmit_message+0x140>
     1fe:	18 f0       	brcs	.+6      	; 0x206 <CAN_transmit_message+0x130>
     200:	82 30       	cpi	r24, 0x02	; 2
     202:	89 f0       	breq	.+34     	; 0x226 <CAN_transmit_message+0x150>
     204:	18 c0       	rjmp	.+48     	; 0x236 <CAN_transmit_message+0x160>
     206:	48 e0       	ldi	r20, 0x08	; 8
     208:	68 e0       	ldi	r22, 0x08	; 8
     20a:	80 e3       	ldi	r24, 0x30	; 48
     20c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
     210:	81 e0       	ldi	r24, 0x01	; 1
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	24 c0       	rjmp	.+72     	; 0x25e <CAN_transmit_message+0x188>
     216:	48 e0       	ldi	r20, 0x08	; 8
     218:	68 e0       	ldi	r22, 0x08	; 8
     21a:	80 e4       	ldi	r24, 0x40	; 64
     21c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	1c c0       	rjmp	.+56     	; 0x25e <CAN_transmit_message+0x188>
     226:	48 e0       	ldi	r20, 0x08	; 8
     228:	68 e0       	ldi	r22, 0x08	; 8
     22a:	80 e5       	ldi	r24, 0x50	; 80
     22c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	14 c0       	rjmp	.+40     	; 0x25e <CAN_transmit_message+0x188>
     236:	48 e0       	ldi	r20, 0x08	; 8
     238:	68 e0       	ldi	r22, 0x08	; 8
     23a:	80 e3       	ldi	r24, 0x30	; 48
     23c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
     240:	48 e0       	ldi	r20, 0x08	; 8
     242:	68 e0       	ldi	r22, 0x08	; 8
     244:	80 e4       	ldi	r24, 0x40	; 64
     246:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
     24a:	48 e0       	ldi	r20, 0x08	; 8
     24c:	68 e0       	ldi	r22, 0x08	; 8
     24e:	80 e5       	ldi	r24, 0x50	; 80
     250:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
     254:	81 e0       	ldi	r24, 0x01	; 1
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	02 c0       	rjmp	.+4      	; 0x25e <CAN_transmit_message+0x188>
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	2b 96       	adiw	r28, 0x0b	; 11
     260:	0f b6       	in	r0, 0x3f	; 63
     262:	f8 94       	cli
     264:	de bf       	out	0x3e, r29	; 62
     266:	0f be       	out	0x3f, r0	; 63
     268:	cd bf       	out	0x3d, r28	; 61
     26a:	df 91       	pop	r29
     26c:	cf 91       	pop	r28
     26e:	1f 91       	pop	r17
     270:	ff 90       	pop	r15
     272:	ef 90       	pop	r14
     274:	df 90       	pop	r13
     276:	cf 90       	pop	r12
     278:	08 95       	ret

0000027a <CAN_read_rx_buffer>:
     27a:	cf 92       	push	r12
     27c:	df 92       	push	r13
     27e:	ef 92       	push	r14
     280:	ff 92       	push	r15
     282:	0f 93       	push	r16
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	cd b7       	in	r28, 0x3d	; 61
     28c:	de b7       	in	r29, 0x3e	; 62
     28e:	2b 97       	sbiw	r28, 0x0b	; 11
     290:	0f b6       	in	r0, 0x3f	; 63
     292:	f8 94       	cli
     294:	de bf       	out	0x3e, r29	; 62
     296:	0f be       	out	0x3f, r0	; 63
     298:	cd bf       	out	0x3d, r28	; 61
     29a:	6c 01       	movw	r12, r24
     29c:	89 e0       	ldi	r24, 0x09	; 9
     29e:	8b 83       	std	Y+3, r24	; 0x03
     2a0:	62 30       	cpi	r22, 0x02	; 2
     2a2:	a8 f0       	brcs	.+42     	; 0x2ce <CAN_read_rx_buffer+0x54>
     2a4:	1f 92       	push	r1
     2a6:	6f 93       	push	r22
     2a8:	85 e5       	ldi	r24, 0x55	; 85
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	9f 93       	push	r25
     2ae:	8f 93       	push	r24
     2b0:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     2b4:	8b e0       	ldi	r24, 0x0B	; 11
     2b6:	fe 01       	movw	r30, r28
     2b8:	31 96       	adiw	r30, 0x01	; 1
     2ba:	d6 01       	movw	r26, r12
     2bc:	01 90       	ld	r0, Z+
     2be:	0d 92       	st	X+, r0
     2c0:	8a 95       	dec	r24
     2c2:	e1 f7       	brne	.-8      	; 0x2bc <CAN_read_rx_buffer+0x42>
     2c4:	0f 90       	pop	r0
     2c6:	0f 90       	pop	r0
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	30 c0       	rjmp	.+96     	; 0x32e <CAN_read_rx_buffer+0xb4>
     2ce:	06 2f       	mov	r16, r22
     2d0:	02 95       	swap	r16
     2d2:	00 7f       	andi	r16, 0xF0	; 240
     2d4:	81 e6       	ldi	r24, 0x61	; 97
     2d6:	80 0f       	add	r24, r16
     2d8:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     2dc:	89 83       	std	Y+1, r24	; 0x01
     2de:	82 e6       	ldi	r24, 0x62	; 98
     2e0:	80 0f       	add	r24, r16
     2e2:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     2e6:	8a 83       	std	Y+2, r24	; 0x02
     2e8:	85 e6       	ldi	r24, 0x65	; 101
     2ea:	80 0f       	add	r24, r16
     2ec:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     2f0:	8b 83       	std	Y+3, r24	; 0x03
     2f2:	8b 81       	ldd	r24, Y+3	; 0x03
     2f4:	88 23       	and	r24, r24
     2f6:	99 f0       	breq	.+38     	; 0x31e <CAN_read_rx_buffer+0xa4>
     2f8:	10 e0       	ldi	r17, 0x00	; 0
     2fa:	0a 59       	subi	r16, 0x9A	; 154
     2fc:	e1 2e       	mov	r14, r17
     2fe:	f1 2c       	mov	r15, r1
     300:	80 2f       	mov	r24, r16
     302:	81 0f       	add	r24, r17
     304:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     308:	e4 e0       	ldi	r30, 0x04	; 4
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	ec 0f       	add	r30, r28
     30e:	fd 1f       	adc	r31, r29
     310:	ee 0d       	add	r30, r14
     312:	ff 1d       	adc	r31, r15
     314:	80 83       	st	Z, r24
     316:	1f 5f       	subi	r17, 0xFF	; 255
     318:	8b 81       	ldd	r24, Y+3	; 0x03
     31a:	18 17       	cp	r17, r24
     31c:	78 f3       	brcs	.-34     	; 0x2fc <CAN_read_rx_buffer+0x82>
     31e:	8b e0       	ldi	r24, 0x0B	; 11
     320:	fe 01       	movw	r30, r28
     322:	31 96       	adiw	r30, 0x01	; 1
     324:	d6 01       	movw	r26, r12
     326:	01 90       	ld	r0, Z+
     328:	0d 92       	st	X+, r0
     32a:	8a 95       	dec	r24
     32c:	e1 f7       	brne	.-8      	; 0x326 <CAN_read_rx_buffer+0xac>
     32e:	c6 01       	movw	r24, r12
     330:	2b 96       	adiw	r28, 0x0b	; 11
     332:	0f b6       	in	r0, 0x3f	; 63
     334:	f8 94       	cli
     336:	de bf       	out	0x3e, r29	; 62
     338:	0f be       	out	0x3f, r0	; 63
     33a:	cd bf       	out	0x3d, r28	; 61
     33c:	df 91       	pop	r29
     33e:	cf 91       	pop	r28
     340:	1f 91       	pop	r17
     342:	0f 91       	pop	r16
     344:	ff 90       	pop	r15
     346:	ef 90       	pop	r14
     348:	df 90       	pop	r13
     34a:	cf 90       	pop	r12
     34c:	08 95       	ret

0000034e <CAN_print_message>:
     34e:	df 92       	push	r13
     350:	ef 92       	push	r14
     352:	ff 92       	push	r15
     354:	0f 93       	push	r16
     356:	1f 93       	push	r17
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	7c 01       	movw	r14, r24
     35e:	fc 01       	movw	r30, r24
     360:	90 81       	ld	r25, Z
     362:	81 81       	ldd	r24, Z+1	; 0x01
     364:	f0 e1       	ldi	r31, 0x10	; 16
     366:	9f 9f       	mul	r25, r31
     368:	80 0d       	add	r24, r0
     36a:	11 24       	eor	r1, r1
     36c:	1f 92       	push	r1
     36e:	8f 93       	push	r24
     370:	84 e9       	ldi	r24, 0x94	; 148
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	9f 93       	push	r25
     376:	8f 93       	push	r24
     378:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     37c:	f7 01       	movw	r30, r14
     37e:	d2 80       	ldd	r13, Z+2	; 0x02
     380:	1f 92       	push	r1
     382:	df 92       	push	r13
     384:	84 ea       	ldi	r24, 0xA4	; 164
     386:	91 e0       	ldi	r25, 0x01	; 1
     388:	9f 93       	push	r25
     38a:	8f 93       	push	r24
     38c:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     390:	8d b7       	in	r24, 0x3d	; 61
     392:	9e b7       	in	r25, 0x3e	; 62
     394:	08 96       	adiw	r24, 0x08	; 8
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	9e bf       	out	0x3e, r25	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	8d bf       	out	0x3d, r24	; 61
     3a0:	dd 20       	and	r13, r13
     3a2:	a9 f0       	breq	.+42     	; 0x3ce <CAN_print_message+0x80>
     3a4:	c0 e0       	ldi	r28, 0x00	; 0
     3a6:	d0 e0       	ldi	r29, 0x00	; 0
     3a8:	0d eb       	ldi	r16, 0xBD	; 189
     3aa:	11 e0       	ldi	r17, 0x01	; 1
     3ac:	f7 01       	movw	r30, r14
     3ae:	ec 0f       	add	r30, r28
     3b0:	fd 1f       	adc	r31, r29
     3b2:	83 81       	ldd	r24, Z+3	; 0x03
     3b4:	1f 92       	push	r1
     3b6:	8f 93       	push	r24
     3b8:	1f 93       	push	r17
     3ba:	0f 93       	push	r16
     3bc:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     3c0:	21 96       	adiw	r28, 0x01	; 1
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
     3c6:	0f 90       	pop	r0
     3c8:	0f 90       	pop	r0
     3ca:	cd 15       	cp	r28, r13
     3cc:	78 f3       	brcs	.-34     	; 0x3ac <CAN_print_message+0x5e>
     3ce:	8a e0       	ldi	r24, 0x0A	; 10
     3d0:	90 e0       	ldi	r25, 0x00	; 0
     3d2:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <putchar>
     3d6:	df 91       	pop	r29
     3d8:	cf 91       	pop	r28
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	ff 90       	pop	r15
     3e0:	ef 90       	pop	r14
     3e2:	df 90       	pop	r13
     3e4:	08 95       	ret

000003e6 <uart_putchar>:
}

void current_muckery(){
	char stmnt[] = "This is a proof of concept, %d\n";
	printf(stmnt, 12);
}
     3e6:	cf 93       	push	r28
     3e8:	c8 2f       	mov	r28, r24
     3ea:	8a 30       	cpi	r24, 0x0A	; 10
     3ec:	19 f4       	brne	.+6      	; 0x3f4 <uart_putchar+0xe>
     3ee:	8d e0       	ldi	r24, 0x0D	; 13
     3f0:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <uart_putchar>
     3f4:	5d 9b       	sbis	0x0b, 5	; 11
     3f6:	fe cf       	rjmp	.-4      	; 0x3f4 <uart_putchar+0xe>
     3f8:	cc b9       	out	0x0c, r28	; 12
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <xmem_init>:
     402:	85 b7       	in	r24, 0x35	; 53
     404:	80 68       	ori	r24, 0x80	; 128
     406:	85 bf       	out	0x35, r24	; 53
     408:	80 b7       	in	r24, 0x30	; 48
     40a:	80 62       	ori	r24, 0x20	; 32
     40c:	80 bf       	out	0x30, r24	; 48
     40e:	84 b3       	in	r24, 0x14	; 20
     410:	8f ef       	ldi	r24, 0xFF	; 255
     412:	84 bb       	out	0x14, r24	; 20
     414:	15 ba       	out	0x15, r1	; 21
     416:	08 95       	ret

00000418 <Init_ports>:
     418:	8e 9a       	sbi	0x11, 6	; 17
     41a:	96 9a       	sbi	0x12, 6	; 18
     41c:	b8 9a       	sbi	0x17, 0	; 23
     41e:	b9 98       	cbi	0x17, 1	; 23
     420:	87 b3       	in	r24, 0x17	; 23
     422:	87 bb       	out	0x17, r24	; 23
     424:	08 95       	ret

00000426 <Init_pwm>:
     426:	83 b7       	in	r24, 0x33	; 51
     428:	89 61       	ori	r24, 0x19	; 25
     42a:	83 bf       	out	0x33, r24	; 51
     42c:	08 95       	ret

0000042e <SPI_configs>:
     42e:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <SPI_init>
     432:	85 b7       	in	r24, 0x35	; 53
     434:	88 60       	ori	r24, 0x08	; 8
     436:	85 bf       	out	0x35, r24	; 53
     438:	85 b7       	in	r24, 0x35	; 53
     43a:	8b 7f       	andi	r24, 0xFB	; 251
     43c:	85 bf       	out	0x35, r24	; 53
     43e:	78 94       	sei
     440:	8b b7       	in	r24, 0x3b	; 59
     442:	80 68       	ori	r24, 0x80	; 128
     444:	8b bf       	out	0x3b, r24	; 59
     446:	08 95       	ret

00000448 <MAIN_INITS>:
     448:	cf 93       	push	r28
     44a:	c8 2f       	mov	r28, r24
     44c:	8f e1       	ldi	r24, 0x1F	; 31
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <USART_init>
     454:	86 e0       	ldi	r24, 0x06	; 6
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	90 93 3f 04 	sts	0x043F, r25	; 0x80043f <__iob+0x3>
     45c:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <__iob+0x2>
     460:	0e 94 01 02 	call	0x402	; 0x402 <xmem_init>
     464:	0e 94 0c 02 	call	0x418	; 0x418 <Init_ports>
     468:	0e 94 17 02 	call	0x42e	; 0x42e <SPI_configs>
     46c:	0e 94 13 02 	call	0x426	; 0x426 <Init_pwm>
     470:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <SPI_init>
     474:	8c 2f       	mov	r24, r28
     476:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <MCP_init>
     47a:	cf 91       	pop	r28
     47c:	08 95       	ret

0000047e <__vector_2>:
     47e:	1f 92       	push	r1
     480:	0f 92       	push	r0
     482:	0f b6       	in	r0, 0x3f	; 63
     484:	0f 92       	push	r0
     486:	11 24       	eor	r1, r1
     488:	2f 93       	push	r18
     48a:	3f 93       	push	r19
     48c:	4f 93       	push	r20
     48e:	5f 93       	push	r21
     490:	6f 93       	push	r22
     492:	7f 93       	push	r23
     494:	8f 93       	push	r24
     496:	9f 93       	push	r25
     498:	af 93       	push	r26
     49a:	bf 93       	push	r27
     49c:	ef 93       	push	r30
     49e:	ff 93       	push	r31
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	80 93 3b 04 	sts	0x043B, r24	; 0x80043b <EXT_INT_FLAG>
     4a6:	81 ec       	ldi	r24, 0xC1	; 193
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
     4ae:	ff 91       	pop	r31
     4b0:	ef 91       	pop	r30
     4b2:	bf 91       	pop	r27
     4b4:	af 91       	pop	r26
     4b6:	9f 91       	pop	r25
     4b8:	8f 91       	pop	r24
     4ba:	7f 91       	pop	r23
     4bc:	6f 91       	pop	r22
     4be:	5f 91       	pop	r21
     4c0:	4f 91       	pop	r20
     4c2:	3f 91       	pop	r19
     4c4:	2f 91       	pop	r18
     4c6:	0f 90       	pop	r0
     4c8:	0f be       	out	0x3f, r0	; 63
     4ca:	0f 90       	pop	r0
     4cc:	1f 90       	pop	r1
     4ce:	18 95       	reti

000004d0 <Exercise_5_Demo>:
     4d0:	1f 93       	push	r17
     4d2:	cf 93       	push	r28
     4d4:	df 93       	push	r29
     4d6:	cd b7       	in	r28, 0x3d	; 61
     4d8:	de b7       	in	r29, 0x3e	; 62
     4da:	cd 56       	subi	r28, 0x6D	; 109
     4dc:	d1 09       	sbc	r29, r1
     4de:	0f b6       	in	r0, 0x3f	; 63
     4e0:	f8 94       	cli
     4e2:	de bf       	out	0x3e, r29	; 62
     4e4:	0f be       	out	0x3f, r0	; 63
     4e6:	cd bf       	out	0x3d, r28	; 61
     4e8:	80 e4       	ldi	r24, 0x40	; 64
     4ea:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <MCP_init>
     4ee:	8d e0       	ldi	r24, 0x0D	; 13
     4f0:	89 83       	std	Y+1, r24	; 0x01
     4f2:	89 e0       	ldi	r24, 0x09	; 9
     4f4:	8a 83       	std	Y+2, r24	; 0x02
     4f6:	84 e0       	ldi	r24, 0x04	; 4
     4f8:	8b 83       	std	Y+3, r24	; 0x03
     4fa:	8b 81       	ldd	r24, Y+3	; 0x03
     4fc:	88 23       	and	r24, r24
     4fe:	71 f0       	breq	.+28     	; 0x51c <__stack+0x1d>
     500:	80 e0       	ldi	r24, 0x00	; 0
     502:	94 e0       	ldi	r25, 0x04	; 4
     504:	98 0f       	add	r25, r24
     506:	e4 e0       	ldi	r30, 0x04	; 4
     508:	f0 e0       	ldi	r31, 0x00	; 0
     50a:	ec 0f       	add	r30, r28
     50c:	fd 1f       	adc	r31, r29
     50e:	e8 0f       	add	r30, r24
     510:	f1 1d       	adc	r31, r1
     512:	90 83       	st	Z, r25
     514:	8f 5f       	subi	r24, 0xFF	; 255
     516:	9b 81       	ldd	r25, Y+3	; 0x03
     518:	89 17       	cp	r24, r25
     51a:	98 f3       	brcs	.-26     	; 0x502 <__stack+0x3>
     51c:	8f e0       	ldi	r24, 0x0F	; 15
     51e:	93 e0       	ldi	r25, 0x03	; 3
     520:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
     524:	ce 01       	movw	r24, r28
     526:	01 96       	adiw	r24, 0x01	; 1
     528:	0e 94 a7 01 	call	0x34e	; 0x34e <CAN_print_message>
     52c:	0f c0       	rjmp	.+30     	; 0x54c <__stack+0x4d>
     52e:	8a e2       	ldi	r24, 0x2A	; 42
     530:	93 e0       	ldi	r25, 0x03	; 3
     532:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
     536:	2a e0       	ldi	r18, 0x0A	; 10
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	05 c0       	rjmp	.+10     	; 0x546 <__stack+0x47>
     53c:	01 97       	sbiw	r24, 0x01	; 1
     53e:	f1 f7       	brne	.-4      	; 0x53c <__stack+0x3d>
     540:	21 50       	subi	r18, 0x01	; 1
     542:	31 09       	sbc	r19, r1
     544:	19 f0       	breq	.+6      	; 0x54c <__stack+0x4d>
     546:	80 e3       	ldi	r24, 0x30	; 48
     548:	95 e7       	ldi	r25, 0x75	; 117
     54a:	f8 cf       	rjmp	.-16     	; 0x53c <__stack+0x3d>
     54c:	ce 01       	movw	r24, r28
     54e:	01 96       	adiw	r24, 0x01	; 1
     550:	0e 94 6b 00 	call	0xd6	; 0xd6 <CAN_transmit_message>
     554:	89 2b       	or	r24, r25
     556:	59 f3       	breq	.-42     	; 0x52e <__stack+0x2f>
     558:	82 e3       	ldi	r24, 0x32	; 50
     55a:	93 e0       	ldi	r25, 0x03	; 3
     55c:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
     560:	2a e0       	ldi	r18, 0x0A	; 10
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	05 c0       	rjmp	.+10     	; 0x570 <__stack+0x71>
     566:	01 97       	sbiw	r24, 0x01	; 1
     568:	f1 f7       	brne	.-4      	; 0x566 <__stack+0x67>
     56a:	21 50       	subi	r18, 0x01	; 1
     56c:	31 09       	sbc	r19, r1
     56e:	19 f0       	breq	.+6      	; 0x576 <__stack+0x77>
     570:	80 e3       	ldi	r24, 0x30	; 48
     572:	95 e7       	ldi	r25, 0x75	; 117
     574:	f8 cf       	rjmp	.-16     	; 0x566 <__stack+0x67>
     576:	80 91 3b 04 	lds	r24, 0x043B	; 0x80043b <EXT_INT_FLAG>
     57a:	81 30       	cpi	r24, 0x01	; 1
     57c:	11 f4       	brne	.+4      	; 0x582 <__stack+0x83>
     57e:	10 92 3b 04 	sts	0x043B, r1	; 0x80043b <EXT_INT_FLAG>
     582:	8c e2       	ldi	r24, 0x2C	; 44
     584:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     588:	18 2f       	mov	r17, r24
     58a:	1f 92       	push	r1
     58c:	8f 93       	push	r24
     58e:	87 e3       	ldi	r24, 0x37	; 55
     590:	93 e0       	ldi	r25, 0x03	; 3
     592:	9f 93       	push	r25
     594:	8f 93       	push	r24
     596:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     59a:	81 e2       	ldi	r24, 0x21	; 33
     59c:	eb e5       	ldi	r30, 0x5B	; 91
     59e:	f3 e0       	ldi	r31, 0x03	; 3
     5a0:	de 01       	movw	r26, r28
     5a2:	57 96       	adiw	r26, 0x17	; 23
     5a4:	01 90       	ld	r0, Z+
     5a6:	0d 92       	st	X+, r0
     5a8:	8a 95       	dec	r24
     5aa:	e1 f7       	brne	.-8      	; 0x5a4 <__stack+0xa5>
     5ac:	8b e2       	ldi	r24, 0x2B	; 43
     5ae:	ec e7       	ldi	r30, 0x7C	; 124
     5b0:	f3 e0       	ldi	r31, 0x03	; 3
     5b2:	de 01       	movw	r26, r28
     5b4:	d8 96       	adiw	r26, 0x38	; 56
     5b6:	01 90       	ld	r0, Z+
     5b8:	0d 92       	st	X+, r0
     5ba:	8a 95       	dec	r24
     5bc:	e1 f7       	brne	.-8      	; 0x5b6 <__stack+0xb7>
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	0f 90       	pop	r0
     5c6:	13 70       	andi	r17, 0x03	; 3
     5c8:	11 30       	cpi	r17, 0x01	; 1
     5ca:	19 f0       	breq	.+6      	; 0x5d2 <__stack+0xd3>
     5cc:	12 30       	cpi	r17, 0x02	; 2
     5ce:	91 f1       	breq	.+100    	; 0x634 <__stack+0x135>
     5d0:	64 c0       	rjmp	.+200    	; 0x69a <__stack+0x19b>
     5d2:	1f 92       	push	r1
     5d4:	1f 92       	push	r1
     5d6:	ce 01       	movw	r24, r28
     5d8:	47 96       	adiw	r24, 0x17	; 23
     5da:	9f 93       	push	r25
     5dc:	8f 93       	push	r24
     5de:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     5e2:	60 e0       	ldi	r22, 0x00	; 0
     5e4:	ce 01       	movw	r24, r28
     5e6:	8d 59       	subi	r24, 0x9D	; 157
     5e8:	9f 4f       	sbci	r25, 0xFF	; 255
     5ea:	0e 94 3d 01 	call	0x27a	; 0x27a <CAN_read_rx_buffer>
     5ee:	8b e0       	ldi	r24, 0x0B	; 11
     5f0:	fe 01       	movw	r30, r28
     5f2:	ed 59       	subi	r30, 0x9D	; 157
     5f4:	ff 4f       	sbci	r31, 0xFF	; 255
     5f6:	de 01       	movw	r26, r28
     5f8:	1c 96       	adiw	r26, 0x0c	; 12
     5fa:	01 90       	ld	r0, Z+
     5fc:	0d 92       	st	X+, r0
     5fe:	8a 95       	dec	r24
     600:	e1 f7       	brne	.-8      	; 0x5fa <__stack+0xfb>
     602:	8e 85       	ldd	r24, Y+14	; 0x0e
     604:	0f 90       	pop	r0
     606:	0f 90       	pop	r0
     608:	0f 90       	pop	r0
     60a:	0f 90       	pop	r0
     60c:	89 30       	cpi	r24, 0x09	; 9
     60e:	69 f4       	brne	.+26     	; 0x62a <__stack+0x12b>
     610:	1f 92       	push	r1
     612:	1f 92       	push	r1
     614:	ce 01       	movw	r24, r28
     616:	c8 96       	adiw	r24, 0x38	; 56
     618:	9f 93       	push	r25
     61a:	8f 93       	push	r24
     61c:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     620:	0f 90       	pop	r0
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	0f 90       	pop	r0
     628:	3c c0       	rjmp	.+120    	; 0x6a2 <__stack+0x1a3>
     62a:	ce 01       	movw	r24, r28
     62c:	0c 96       	adiw	r24, 0x0c	; 12
     62e:	0e 94 a7 01 	call	0x34e	; 0x34e <CAN_print_message>
     632:	37 c0       	rjmp	.+110    	; 0x6a2 <__stack+0x1a3>
     634:	1f 92       	push	r1
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	8f 93       	push	r24
     63a:	ce 01       	movw	r24, r28
     63c:	47 96       	adiw	r24, 0x17	; 23
     63e:	9f 93       	push	r25
     640:	8f 93       	push	r24
     642:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     646:	61 e0       	ldi	r22, 0x01	; 1
     648:	ce 01       	movw	r24, r28
     64a:	8d 59       	subi	r24, 0x9D	; 157
     64c:	9f 4f       	sbci	r25, 0xFF	; 255
     64e:	0e 94 3d 01 	call	0x27a	; 0x27a <CAN_read_rx_buffer>
     652:	8b e0       	ldi	r24, 0x0B	; 11
     654:	fe 01       	movw	r30, r28
     656:	ed 59       	subi	r30, 0x9D	; 157
     658:	ff 4f       	sbci	r31, 0xFF	; 255
     65a:	de 01       	movw	r26, r28
     65c:	1c 96       	adiw	r26, 0x0c	; 12
     65e:	01 90       	ld	r0, Z+
     660:	0d 92       	st	X+, r0
     662:	8a 95       	dec	r24
     664:	e1 f7       	brne	.-8      	; 0x65e <__stack+0x15f>
     666:	8e 85       	ldd	r24, Y+14	; 0x0e
     668:	0f 90       	pop	r0
     66a:	0f 90       	pop	r0
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	89 30       	cpi	r24, 0x09	; 9
     672:	71 f4       	brne	.+28     	; 0x690 <__stack+0x191>
     674:	1f 92       	push	r1
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	8f 93       	push	r24
     67a:	ce 01       	movw	r24, r28
     67c:	c8 96       	adiw	r24, 0x38	; 56
     67e:	9f 93       	push	r25
     680:	8f 93       	push	r24
     682:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	0f 90       	pop	r0
     68e:	09 c0       	rjmp	.+18     	; 0x6a2 <__stack+0x1a3>
     690:	ce 01       	movw	r24, r28
     692:	0c 96       	adiw	r24, 0x0c	; 12
     694:	0e 94 a7 01 	call	0x34e	; 0x34e <CAN_print_message>
     698:	04 c0       	rjmp	.+8      	; 0x6a2 <__stack+0x1a3>
     69a:	88 e4       	ldi	r24, 0x48	; 72
     69c:	93 e0       	ldi	r25, 0x03	; 3
     69e:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
     6a2:	8a e0       	ldi	r24, 0x0A	; 10
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <putchar>
     6aa:	c3 59       	subi	r28, 0x93	; 147
     6ac:	df 4f       	sbci	r29, 0xFF	; 255
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	f8 94       	cli
     6b2:	de bf       	out	0x3e, r29	; 62
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	cd bf       	out	0x3d, r28	; 61
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	08 95       	ret

000006c0 <main>:

// Warning: Reported data memory usage above 83% (~850 bytes) will cause runtime crash - check your printfs!
int main(void)
{

	MAIN_INITS(LOOPBACK);						// Initialize USART transmission drivers, MCU ports, external memory, interrupts and SPI
     6c0:	80 e4       	ldi	r24, 0x40	; 64
     6c2:	0e 94 24 02 	call	0x448	; 0x448 <MAIN_INITS>

//		--		PROGRAM CODE					--		//

// Warning: Reported data memory usage above 83% (~850 bytes) will cause runtime crash - check your printfs!
int main(void)
{
     6c6:	24 e6       	ldi	r18, 0x64	; 100
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <main+0x16>
     6cc:	01 97       	sbiw	r24, 0x01	; 1
	MAIN_INITS(LOOPBACK);						// Initialize USART transmission drivers, MCU ports, external memory, interrupts and SPI
		
	char programme = '5';						// What code would you like to run today, Sir?
	while (1)
	{
		for (int i = 0; i < 100; i++){	for (int j = 0; j<30000; j++){}	}
     6ce:	f1 f7       	brne	.-4      	; 0x6cc <main+0xc>
     6d0:	21 50       	subi	r18, 0x01	; 1
     6d2:	31 09       	sbc	r19, r1
     6d4:	19 f0       	breq	.+6      	; 0x6dc <main+0x1c>

//		--		PROGRAM CODE					--		//

// Warning: Reported data memory usage above 83% (~850 bytes) will cause runtime crash - check your printfs!
int main(void)
{
     6d6:	80 e3       	ldi	r24, 0x30	; 48
     6d8:	95 e7       	ldi	r25, 0x75	; 117
     6da:	f8 cf       	rjmp	.-16     	; 0x6cc <main+0xc>
				break;
			case '4':
				Exercise_4_Demo();
				break;
			case '5':
				Exercise_5_Demo();
     6dc:	0e 94 68 02 	call	0x4d0	; 0x4d0 <Exercise_5_Demo>
				break;
     6e0:	f2 cf       	rjmp	.-28     	; 0x6c6 <main+0x6>

000006e2 <MCP_bit_modify>:
	}
	
	SPI_SS_HIGH();
	
	return rec;
}
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	18 2f       	mov	r17, r24
     6ea:	d6 2f       	mov	r29, r22
     6ec:	c4 2f       	mov	r28, r20
     6ee:	0e 94 67 04 	call	0x8ce	; 0x8ce <SPI_SS_LOW>
     6f2:	85 e0       	ldi	r24, 0x05	; 5
     6f4:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     6f8:	81 2f       	mov	r24, r17
     6fa:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     6fe:	8d 2f       	mov	r24, r29
     700:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     704:	8c 2f       	mov	r24, r28
     706:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     70a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <SPI_SS_HIGH>
     70e:	df 91       	pop	r29
     710:	cf 91       	pop	r28
     712:	1f 91       	pop	r17
     714:	08 95       	ret

00000716 <MCP_set_mode>:
     716:	48 2f       	mov	r20, r24
     718:	60 ee       	ldi	r22, 0xE0	; 224
     71a:	8f e0       	ldi	r24, 0x0F	; 15
     71c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
     720:	08 95       	ret

00000722 <MCP_reset>:
     722:	0e 94 67 04 	call	0x8ce	; 0x8ce <SPI_SS_LOW>
     726:	80 ec       	ldi	r24, 0xC0	; 192
     728:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     72c:	0e 94 69 04 	call	0x8d2	; 0x8d2 <SPI_SS_HIGH>
     730:	08 95       	ret

00000732 <MCP_read_status>:
     732:	cf 93       	push	r28
     734:	0e 94 67 04 	call	0x8ce	; 0x8ce <SPI_SS_LOW>
     738:	80 ea       	ldi	r24, 0xA0	; 160
     73a:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     73e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <SPI_read>
     742:	c8 2f       	mov	r28, r24
     744:	0e 94 69 04 	call	0x8d2	; 0x8d2 <SPI_SS_HIGH>
     748:	8c 2f       	mov	r24, r28
     74a:	cf 91       	pop	r28
     74c:	08 95       	ret

0000074e <MCP_read_byte>:
     74e:	cf 93       	push	r28
     750:	c8 2f       	mov	r28, r24
     752:	0e 94 67 04 	call	0x8ce	; 0x8ce <SPI_SS_LOW>
     756:	83 e0       	ldi	r24, 0x03	; 3
     758:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     75c:	8c 2f       	mov	r24, r28
     75e:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
     762:	0e 94 5d 04 	call	0x8ba	; 0x8ba <SPI_read>
     766:	c8 2f       	mov	r28, r24
     768:	0e 94 69 04 	call	0x8d2	; 0x8d2 <SPI_SS_HIGH>
     76c:	8c 2f       	mov	r24, r28
     76e:	cf 91       	pop	r28
     770:	08 95       	ret

00000772 <MCP_print_diagnostix>:
     772:	cf 93       	push	r28
     774:	87 ec       	ldi	r24, 0xC7	; 199
     776:	93 e0       	ldi	r25, 0x03	; 3
     778:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
     77c:	8e e0       	ldi	r24, 0x0E	; 14
     77e:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     782:	1f 92       	push	r1
     784:	1f 92       	push	r1
     786:	80 7e       	andi	r24, 0xE0	; 224
     788:	1f 92       	push	r1
     78a:	8f 93       	push	r24
     78c:	1f 92       	push	r1
     78e:	1f 92       	push	r1
     790:	84 ed       	ldi	r24, 0xD4	; 212
     792:	93 e0       	ldi	r25, 0x03	; 3
     794:	9f 93       	push	r25
     796:	8f 93       	push	r24
     798:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     79c:	0e 94 99 03 	call	0x732	; 0x732 <MCP_read_status>
     7a0:	c8 2f       	mov	r28, r24
     7a2:	8f e0       	ldi	r24, 0x0F	; 15
     7a4:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
     7a8:	1f 92       	push	r1
     7aa:	8f 93       	push	r24
     7ac:	1f 92       	push	r1
     7ae:	cf 93       	push	r28
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	94 e0       	ldi	r25, 0x04	; 4
     7b4:	9f 93       	push	r25
     7b6:	8f 93       	push	r24
     7b8:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <printf>
     7bc:	8d b7       	in	r24, 0x3d	; 61
     7be:	9e b7       	in	r25, 0x3e	; 62
     7c0:	0e 96       	adiw	r24, 0x0e	; 14
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	f8 94       	cli
     7c6:	9e bf       	out	0x3e, r25	; 62
     7c8:	0f be       	out	0x3f, r0	; 63
     7ca:	8d bf       	out	0x3d, r24	; 61
     7cc:	cf 91       	pop	r28
     7ce:	08 95       	ret

000007d0 <MCP_write_byte>:

void MCP_write_byte(uint8_t address, uint8_t data){
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	d8 2f       	mov	r29, r24
     7d6:	c6 2f       	mov	r28, r22
	SPI_SS_LOW();
     7d8:	0e 94 67 04 	call	0x8ce	; 0x8ce <SPI_SS_LOW>
	SPI_send(MCP_WRITE);
     7dc:	82 e0       	ldi	r24, 0x02	; 2
     7de:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
	SPI_send(address);
     7e2:	8d 2f       	mov	r24, r29
     7e4:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
	SPI_send(data);
     7e8:	8c 2f       	mov	r24, r28
     7ea:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
	SPI_SS_HIGH();
     7ee:	0e 94 69 04 	call	0x8d2	; 0x8d2 <SPI_SS_HIGH>
	
	//uint8_t check = MCP_read_byte(address);																				// !!! 
	//printf("Written: %d Read: %d\n", data, check);
}
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	08 95       	ret

000007f8 <MCP_init>:
 */ 
#include <mcp2515.h>

//								---									MCP config and operations

void MCP_init(mcp_mode md){
     7f8:	cf 93       	push	r28
     7fa:	c8 2f       	mov	r28, r24
	
	// Initialize SPI for MCU, just to be sure
	SPI_init();
     7fc:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <SPI_init>
	
	// Reset the MCP, just to be sure, and set the desired mode
	MCP_reset();
     800:	0e 94 91 03 	call	0x722	; 0x722 <MCP_reset>
     804:	2a e0       	ldi	r18, 0x0A	; 10
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	05 c0       	rjmp	.+10     	; 0x814 <MCP_init+0x1c>
     80a:	01 97       	sbiw	r24, 0x01	; 1
	for(int j=0; j<10; j++)
	{
		for(int k=0; k<30000; k++);
     80c:	f1 f7       	brne	.-4      	; 0x80a <MCP_init+0x12>
     80e:	21 50       	subi	r18, 0x01	; 1
     810:	31 09       	sbc	r19, r1
	// Initialize SPI for MCU, just to be sure
	SPI_init();
	
	// Reset the MCP, just to be sure, and set the desired mode
	MCP_reset();
	for(int j=0; j<10; j++)
     812:	19 f0       	breq	.+6      	; 0x81a <MCP_init+0x22>
 */ 
#include <mcp2515.h>

//								---									MCP config and operations

void MCP_init(mcp_mode md){
     814:	80 e3       	ldi	r24, 0x30	; 48
     816:	95 e7       	ldi	r25, 0x75	; 117
     818:	f8 cf       	rjmp	.-16     	; 0x80a <MCP_init+0x12>
	MCP_reset();
	for(int j=0; j<10; j++)
	{
		for(int k=0; k<30000; k++);
	}
	MCP_write_byte(MCP_CANINTE, MCP_RD_INT_MASK);					// Only enable interrupts on message reception
     81a:	63 e0       	ldi	r22, 0x03	; 3
     81c:	8b e2       	ldi	r24, 0x2B	; 43
     81e:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <MCP_write_byte>
	MCP_bit_modify(MCP_CANCTRL, MCP_TXABRT_MASK, MCP_TXABRT_MASK);	// Request abort for all transmittions; necessary for setting mode
     822:	40 e1       	ldi	r20, 0x10	; 16
     824:	60 e1       	ldi	r22, 0x10	; 16
     826:	8f e0       	ldi	r24, 0x0F	; 15
     828:	0e 94 71 03 	call	0x6e2	; 0x6e2 <MCP_bit_modify>
	
	///*	// Randomly received and doesn't receive messages; if it does, it's empty
	// Set CAN timing settings
	MCP_write_byte(MCP_CNF1, 0b11000010);	// SJW:4 BRP:3
     82c:	62 ec       	ldi	r22, 0xC2	; 194
     82e:	8a e2       	ldi	r24, 0x2A	; 42
     830:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <MCP_write_byte>
	MCP_write_byte(MCP_CNF2, 0b11001001);	// BTLMODE:1 SAM:1 PS1:2 PROPSEG:2
     834:	69 ec       	ldi	r22, 0xC9	; 201
     836:	89 e2       	ldi	r24, 0x29	; 41
     838:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <MCP_write_byte>
	MCP_write_byte(MCP_CNF3, 0b00000010);	// SOF:x WAKFIL:x PS2:3
     83c:	62 e0       	ldi	r22, 0x02	; 2
     83e:	88 e2       	ldi	r24, 0x28	; 40
     840:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <MCP_write_byte>
	
	MCP_set_mode(md);
     844:	8c 2f       	mov	r24, r28
     846:	0e 94 8b 03 	call	0x716	; 0x716 <MCP_set_mode>
	// Verify that the MCP is in the correct mode
	uint8_t can_status = MCP_read_byte(MCP_CANSTAT);
     84a:	8e e0       	ldi	r24, 0x0E	; 14
     84c:	0e 94 a7 03 	call	0x74e	; 0x74e <MCP_read_byte>
	uint8_t can_mode = can_status &= MCP_MODE_MASK;					// First 3 bits of CANSTAT indicates the MCPs current mode
	if (can_mode != md) { 
     850:	80 7e       	andi	r24, 0xE0	; 224
     852:	c8 17       	cp	r28, r24
     854:	31 f0       	breq	.+12     	; 0x862 <MCP_init+0x6a>
		printf("MCP Error: Init failed!\n");
     856:	81 e2       	ldi	r24, 0x21	; 33
     858:	94 e0       	ldi	r25, 0x04	; 4
     85a:	0e 94 ef 04 	call	0x9de	; 0x9de <puts>
		MCP_print_diagnostix();
     85e:	0e 94 b9 03 	call	0x772	; 0x772 <MCP_print_diagnostix>
	}
}
     862:	cf 91       	pop	r28
     864:	08 95       	ret

00000866 <MCP_write>:
	
	//uint8_t check = MCP_read_byte(address);																				// !!! 
	//printf("Written: %d Read: %d\n", data, check);
}

void MCP_write(uint8_t start_address, uint8_t *data, uint8_t data_length){
     866:	ef 92       	push	r14
     868:	ff 92       	push	r15
     86a:	0f 93       	push	r16
     86c:	1f 93       	push	r17
     86e:	cf 93       	push	r28
     870:	df 93       	push	r29
     872:	c8 2f       	mov	r28, r24
     874:	7b 01       	movw	r14, r22
     876:	14 2f       	mov	r17, r20
	SPI_SS_LOW();
     878:	0e 94 67 04 	call	0x8ce	; 0x8ce <SPI_SS_LOW>
	SPI_send(MCP_WRITE);
     87c:	82 e0       	ldi	r24, 0x02	; 2
     87e:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
	SPI_send(start_address);
     882:	8c 2f       	mov	r24, r28
     884:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>
	for (uint8_t i = 0; i<data_length; i++){
     888:	11 23       	and	r17, r17
     88a:	71 f0       	breq	.+28     	; 0x8a8 <MCP_write+0x42>
     88c:	e7 01       	movw	r28, r14
     88e:	11 50       	subi	r17, 0x01	; 1
     890:	01 2f       	mov	r16, r17
     892:	10 e0       	ldi	r17, 0x00	; 0
     894:	0f 5f       	subi	r16, 0xFF	; 255
     896:	1f 4f       	sbci	r17, 0xFF	; 255
     898:	0e 0d       	add	r16, r14
     89a:	1f 1d       	adc	r17, r15
		SPI_send(data[i]);
     89c:	89 91       	ld	r24, Y+
     89e:	0e 94 63 04 	call	0x8c6	; 0x8c6 <SPI_send>

void MCP_write(uint8_t start_address, uint8_t *data, uint8_t data_length){
	SPI_SS_LOW();
	SPI_send(MCP_WRITE);
	SPI_send(start_address);
	for (uint8_t i = 0; i<data_length; i++){
     8a2:	c0 17       	cp	r28, r16
     8a4:	d1 07       	cpc	r29, r17
     8a6:	d1 f7       	brne	.-12     	; 0x89c <MCP_write+0x36>
		SPI_send(data[i]);
		//printf("MCP_W: %d,%d\n",i, data[i]);
	}
	SPI_SS_HIGH();
     8a8:	0e 94 69 04 	call	0x8d2	; 0x8d2 <SPI_SS_HIGH>
}
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	0f 91       	pop	r16
     8b4:	ff 90       	pop	r15
     8b6:	ef 90       	pop	r14
     8b8:	08 95       	ret

000008ba <SPI_read>:
     8ba:	8a ea       	ldi	r24, 0xAA	; 170
     8bc:	8f b9       	out	0x0f, r24	; 15
     8be:	77 9b       	sbis	0x0e, 7	; 14
     8c0:	fe cf       	rjmp	.-4      	; 0x8be <SPI_read+0x4>
     8c2:	8f b1       	in	r24, 0x0f	; 15
     8c4:	08 95       	ret

000008c6 <SPI_send>:
     8c6:	8f b9       	out	0x0f, r24	; 15
     8c8:	77 9b       	sbis	0x0e, 7	; 14
     8ca:	fe cf       	rjmp	.-4      	; 0x8c8 <SPI_send+0x2>
     8cc:	08 95       	ret

000008ce <SPI_SS_LOW>:
     8ce:	c4 98       	cbi	0x18, 4	; 24
     8d0:	08 95       	ret

000008d2 <SPI_SS_HIGH>:
     8d2:	c4 9a       	sbi	0x18, 4	; 24
     8d4:	08 95       	ret

000008d6 <SPI_init>:
     8d6:	80 eb       	ldi	r24, 0xB0	; 176
     8d8:	87 bb       	out	0x17, r24	; 23
     8da:	81 e5       	ldi	r24, 0x51	; 81
     8dc:	8d b9       	out	0x0d, r24	; 13
     8de:	0e 94 69 04 	call	0x8d2	; 0x8d2 <SPI_SS_HIGH>
     8e2:	08 95       	ret

000008e4 <USART_Transmit>:
#include <USART_Driver.h>

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
     8e4:	5d 9b       	sbis	0x0b, 5	; 11
     8e6:	fe cf       	rjmp	.-4      	; 0x8e4 <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
     8e8:	8c b9       	out	0x0c, r24	; 12
     8ea:	08 95       	ret

000008ec <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
     8ec:	5f 9b       	sbis	0x0b, 7	; 11
     8ee:	fe cf       	rjmp	.-4      	; 0x8ec <USART_Receive>
	;
	/* Get and return received data from buffer */
	return UDR0;
     8f0:	8c b1       	in	r24, 0x0c	; 12
}
     8f2:	08 95       	ret

000008f4 <USART_init>:

void USART_init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char) (ubrr>>8);
     8f4:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char) (ubrr);
     8f6:	89 b9       	out	0x09, r24	; 9
	
	/* Enable receiver and transmitter */
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
     8f8:	88 e1       	ldi	r24, 0x18	; 24
     8fa:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
     8fc:	8e e8       	ldi	r24, 0x8E	; 142
     8fe:	80 bd       	out	0x20, r24	; 32
	fdevopen(USART_Transmit, USART_Receive);
     900:	66 e7       	ldi	r22, 0x76	; 118
     902:	74 e0       	ldi	r23, 0x04	; 4
     904:	82 e7       	ldi	r24, 0x72	; 114
     906:	94 e0       	ldi	r25, 0x04	; 4
     908:	0e 94 87 04 	call	0x90e	; 0x90e <fdevopen>
     90c:	08 95       	ret

0000090e <fdevopen>:
     90e:	0f 93       	push	r16
     910:	1f 93       	push	r17
     912:	cf 93       	push	r28
     914:	df 93       	push	r29
     916:	00 97       	sbiw	r24, 0x00	; 0
     918:	31 f4       	brne	.+12     	; 0x926 <fdevopen+0x18>
     91a:	61 15       	cp	r22, r1
     91c:	71 05       	cpc	r23, r1
     91e:	19 f4       	brne	.+6      	; 0x926 <fdevopen+0x18>
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	3a c0       	rjmp	.+116    	; 0x99a <fdevopen+0x8c>
     926:	8b 01       	movw	r16, r22
     928:	ec 01       	movw	r28, r24
     92a:	6e e0       	ldi	r22, 0x0E	; 14
     92c:	70 e0       	ldi	r23, 0x00	; 0
     92e:	81 e0       	ldi	r24, 0x01	; 1
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	0e 94 00 07 	call	0xe00	; 0xe00 <calloc>
     936:	fc 01       	movw	r30, r24
     938:	89 2b       	or	r24, r25
     93a:	91 f3       	breq	.-28     	; 0x920 <fdevopen+0x12>
     93c:	80 e8       	ldi	r24, 0x80	; 128
     93e:	83 83       	std	Z+3, r24	; 0x03
     940:	01 15       	cp	r16, r1
     942:	11 05       	cpc	r17, r1
     944:	71 f0       	breq	.+28     	; 0x962 <fdevopen+0x54>
     946:	13 87       	std	Z+11, r17	; 0x0b
     948:	02 87       	std	Z+10, r16	; 0x0a
     94a:	81 e8       	ldi	r24, 0x81	; 129
     94c:	83 83       	std	Z+3, r24	; 0x03
     94e:	80 91 3c 04 	lds	r24, 0x043C	; 0x80043c <__iob>
     952:	90 91 3d 04 	lds	r25, 0x043D	; 0x80043d <__iob+0x1>
     956:	89 2b       	or	r24, r25
     958:	21 f4       	brne	.+8      	; 0x962 <fdevopen+0x54>
     95a:	f0 93 3d 04 	sts	0x043D, r31	; 0x80043d <__iob+0x1>
     95e:	e0 93 3c 04 	sts	0x043C, r30	; 0x80043c <__iob>
     962:	20 97       	sbiw	r28, 0x00	; 0
     964:	c9 f0       	breq	.+50     	; 0x998 <fdevopen+0x8a>
     966:	d1 87       	std	Z+9, r29	; 0x09
     968:	c0 87       	std	Z+8, r28	; 0x08
     96a:	83 81       	ldd	r24, Z+3	; 0x03
     96c:	82 60       	ori	r24, 0x02	; 2
     96e:	83 83       	std	Z+3, r24	; 0x03
     970:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <__iob+0x2>
     974:	90 91 3f 04 	lds	r25, 0x043F	; 0x80043f <__iob+0x3>
     978:	89 2b       	or	r24, r25
     97a:	71 f4       	brne	.+28     	; 0x998 <fdevopen+0x8a>
     97c:	f0 93 3f 04 	sts	0x043F, r31	; 0x80043f <__iob+0x3>
     980:	e0 93 3e 04 	sts	0x043E, r30	; 0x80043e <__iob+0x2>
     984:	80 91 40 04 	lds	r24, 0x0440	; 0x800440 <__iob+0x4>
     988:	90 91 41 04 	lds	r25, 0x0441	; 0x800441 <__iob+0x5>
     98c:	89 2b       	or	r24, r25
     98e:	21 f4       	brne	.+8      	; 0x998 <fdevopen+0x8a>
     990:	f0 93 41 04 	sts	0x0441, r31	; 0x800441 <__iob+0x5>
     994:	e0 93 40 04 	sts	0x0440, r30	; 0x800440 <__iob+0x4>
     998:	cf 01       	movw	r24, r30
     99a:	df 91       	pop	r29
     99c:	cf 91       	pop	r28
     99e:	1f 91       	pop	r17
     9a0:	0f 91       	pop	r16
     9a2:	08 95       	ret

000009a4 <printf>:
     9a4:	a0 e0       	ldi	r26, 0x00	; 0
     9a6:	b0 e0       	ldi	r27, 0x00	; 0
     9a8:	e8 ed       	ldi	r30, 0xD8	; 216
     9aa:	f4 e0       	ldi	r31, 0x04	; 4
     9ac:	0c 94 04 09 	jmp	0x1208	; 0x1208 <__prologue_saves__+0x20>
     9b0:	ae 01       	movw	r20, r28
     9b2:	4b 5f       	subi	r20, 0xFB	; 251
     9b4:	5f 4f       	sbci	r21, 0xFF	; 255
     9b6:	fa 01       	movw	r30, r20
     9b8:	61 91       	ld	r22, Z+
     9ba:	71 91       	ld	r23, Z+
     9bc:	af 01       	movw	r20, r30
     9be:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <__iob+0x2>
     9c2:	90 91 3f 04 	lds	r25, 0x043F	; 0x80043f <__iob+0x3>
     9c6:	0e 94 1f 05 	call	0xa3e	; 0xa3e <vfprintf>
     9ca:	e2 e0       	ldi	r30, 0x02	; 2
     9cc:	0c 94 20 09 	jmp	0x1240	; 0x1240 <__epilogue_restores__+0x20>

000009d0 <putchar>:
     9d0:	60 91 3e 04 	lds	r22, 0x043E	; 0x80043e <__iob+0x2>
     9d4:	70 91 3f 04 	lds	r23, 0x043F	; 0x80043f <__iob+0x3>
     9d8:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     9dc:	08 95       	ret

000009de <puts>:
     9de:	0f 93       	push	r16
     9e0:	1f 93       	push	r17
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	e0 91 3e 04 	lds	r30, 0x043E	; 0x80043e <__iob+0x2>
     9ea:	f0 91 3f 04 	lds	r31, 0x043F	; 0x80043f <__iob+0x3>
     9ee:	23 81       	ldd	r18, Z+3	; 0x03
     9f0:	21 ff       	sbrs	r18, 1
     9f2:	1b c0       	rjmp	.+54     	; 0xa2a <puts+0x4c>
     9f4:	8c 01       	movw	r16, r24
     9f6:	d0 e0       	ldi	r29, 0x00	; 0
     9f8:	c0 e0       	ldi	r28, 0x00	; 0
     9fa:	f8 01       	movw	r30, r16
     9fc:	81 91       	ld	r24, Z+
     9fe:	8f 01       	movw	r16, r30
     a00:	60 91 3e 04 	lds	r22, 0x043E	; 0x80043e <__iob+0x2>
     a04:	70 91 3f 04 	lds	r23, 0x043F	; 0x80043f <__iob+0x3>
     a08:	db 01       	movw	r26, r22
     a0a:	18 96       	adiw	r26, 0x08	; 8
     a0c:	ed 91       	ld	r30, X+
     a0e:	fc 91       	ld	r31, X
     a10:	19 97       	sbiw	r26, 0x09	; 9
     a12:	88 23       	and	r24, r24
     a14:	31 f0       	breq	.+12     	; 0xa22 <puts+0x44>
     a16:	09 95       	icall
     a18:	89 2b       	or	r24, r25
     a1a:	79 f3       	breq	.-34     	; 0x9fa <puts+0x1c>
     a1c:	df ef       	ldi	r29, 0xFF	; 255
     a1e:	cf ef       	ldi	r28, 0xFF	; 255
     a20:	ec cf       	rjmp	.-40     	; 0x9fa <puts+0x1c>
     a22:	8a e0       	ldi	r24, 0x0A	; 10
     a24:	09 95       	icall
     a26:	89 2b       	or	r24, r25
     a28:	19 f0       	breq	.+6      	; 0xa30 <puts+0x52>
     a2a:	8f ef       	ldi	r24, 0xFF	; 255
     a2c:	9f ef       	ldi	r25, 0xFF	; 255
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <puts+0x56>
     a30:	8d 2f       	mov	r24, r29
     a32:	9c 2f       	mov	r25, r28
     a34:	df 91       	pop	r29
     a36:	cf 91       	pop	r28
     a38:	1f 91       	pop	r17
     a3a:	0f 91       	pop	r16
     a3c:	08 95       	ret

00000a3e <vfprintf>:
     a3e:	ab e0       	ldi	r26, 0x0B	; 11
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	e5 e2       	ldi	r30, 0x25	; 37
     a44:	f5 e0       	ldi	r31, 0x05	; 5
     a46:	0c 94 f4 08 	jmp	0x11e8	; 0x11e8 <__prologue_saves__>
     a4a:	6c 01       	movw	r12, r24
     a4c:	7b 01       	movw	r14, r22
     a4e:	8a 01       	movw	r16, r20
     a50:	fc 01       	movw	r30, r24
     a52:	17 82       	std	Z+7, r1	; 0x07
     a54:	16 82       	std	Z+6, r1	; 0x06
     a56:	83 81       	ldd	r24, Z+3	; 0x03
     a58:	81 ff       	sbrs	r24, 1
     a5a:	cc c1       	rjmp	.+920    	; 0xdf4 <vfprintf+0x3b6>
     a5c:	ce 01       	movw	r24, r28
     a5e:	01 96       	adiw	r24, 0x01	; 1
     a60:	3c 01       	movw	r6, r24
     a62:	f6 01       	movw	r30, r12
     a64:	93 81       	ldd	r25, Z+3	; 0x03
     a66:	f7 01       	movw	r30, r14
     a68:	93 fd       	sbrc	r25, 3
     a6a:	85 91       	lpm	r24, Z+
     a6c:	93 ff       	sbrs	r25, 3
     a6e:	81 91       	ld	r24, Z+
     a70:	7f 01       	movw	r14, r30
     a72:	88 23       	and	r24, r24
     a74:	09 f4       	brne	.+2      	; 0xa78 <vfprintf+0x3a>
     a76:	ba c1       	rjmp	.+884    	; 0xdec <vfprintf+0x3ae>
     a78:	85 32       	cpi	r24, 0x25	; 37
     a7a:	39 f4       	brne	.+14     	; 0xa8a <vfprintf+0x4c>
     a7c:	93 fd       	sbrc	r25, 3
     a7e:	85 91       	lpm	r24, Z+
     a80:	93 ff       	sbrs	r25, 3
     a82:	81 91       	ld	r24, Z+
     a84:	7f 01       	movw	r14, r30
     a86:	85 32       	cpi	r24, 0x25	; 37
     a88:	29 f4       	brne	.+10     	; 0xa94 <vfprintf+0x56>
     a8a:	b6 01       	movw	r22, r12
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     a92:	e7 cf       	rjmp	.-50     	; 0xa62 <vfprintf+0x24>
     a94:	91 2c       	mov	r9, r1
     a96:	21 2c       	mov	r2, r1
     a98:	31 2c       	mov	r3, r1
     a9a:	ff e1       	ldi	r31, 0x1F	; 31
     a9c:	f3 15       	cp	r31, r3
     a9e:	d8 f0       	brcs	.+54     	; 0xad6 <vfprintf+0x98>
     aa0:	8b 32       	cpi	r24, 0x2B	; 43
     aa2:	79 f0       	breq	.+30     	; 0xac2 <vfprintf+0x84>
     aa4:	38 f4       	brcc	.+14     	; 0xab4 <vfprintf+0x76>
     aa6:	80 32       	cpi	r24, 0x20	; 32
     aa8:	79 f0       	breq	.+30     	; 0xac8 <vfprintf+0x8a>
     aaa:	83 32       	cpi	r24, 0x23	; 35
     aac:	a1 f4       	brne	.+40     	; 0xad6 <vfprintf+0x98>
     aae:	23 2d       	mov	r18, r3
     ab0:	20 61       	ori	r18, 0x10	; 16
     ab2:	1d c0       	rjmp	.+58     	; 0xaee <vfprintf+0xb0>
     ab4:	8d 32       	cpi	r24, 0x2D	; 45
     ab6:	61 f0       	breq	.+24     	; 0xad0 <vfprintf+0x92>
     ab8:	80 33       	cpi	r24, 0x30	; 48
     aba:	69 f4       	brne	.+26     	; 0xad6 <vfprintf+0x98>
     abc:	23 2d       	mov	r18, r3
     abe:	21 60       	ori	r18, 0x01	; 1
     ac0:	16 c0       	rjmp	.+44     	; 0xaee <vfprintf+0xb0>
     ac2:	83 2d       	mov	r24, r3
     ac4:	82 60       	ori	r24, 0x02	; 2
     ac6:	38 2e       	mov	r3, r24
     ac8:	e3 2d       	mov	r30, r3
     aca:	e4 60       	ori	r30, 0x04	; 4
     acc:	3e 2e       	mov	r3, r30
     ace:	2a c0       	rjmp	.+84     	; 0xb24 <vfprintf+0xe6>
     ad0:	f3 2d       	mov	r31, r3
     ad2:	f8 60       	ori	r31, 0x08	; 8
     ad4:	1d c0       	rjmp	.+58     	; 0xb10 <vfprintf+0xd2>
     ad6:	37 fc       	sbrc	r3, 7
     ad8:	2d c0       	rjmp	.+90     	; 0xb34 <vfprintf+0xf6>
     ada:	20 ed       	ldi	r18, 0xD0	; 208
     adc:	28 0f       	add	r18, r24
     ade:	2a 30       	cpi	r18, 0x0A	; 10
     ae0:	40 f0       	brcs	.+16     	; 0xaf2 <vfprintf+0xb4>
     ae2:	8e 32       	cpi	r24, 0x2E	; 46
     ae4:	b9 f4       	brne	.+46     	; 0xb14 <vfprintf+0xd6>
     ae6:	36 fc       	sbrc	r3, 6
     ae8:	81 c1       	rjmp	.+770    	; 0xdec <vfprintf+0x3ae>
     aea:	23 2d       	mov	r18, r3
     aec:	20 64       	ori	r18, 0x40	; 64
     aee:	32 2e       	mov	r3, r18
     af0:	19 c0       	rjmp	.+50     	; 0xb24 <vfprintf+0xe6>
     af2:	36 fe       	sbrs	r3, 6
     af4:	06 c0       	rjmp	.+12     	; 0xb02 <vfprintf+0xc4>
     af6:	8a e0       	ldi	r24, 0x0A	; 10
     af8:	98 9e       	mul	r9, r24
     afa:	20 0d       	add	r18, r0
     afc:	11 24       	eor	r1, r1
     afe:	92 2e       	mov	r9, r18
     b00:	11 c0       	rjmp	.+34     	; 0xb24 <vfprintf+0xe6>
     b02:	ea e0       	ldi	r30, 0x0A	; 10
     b04:	2e 9e       	mul	r2, r30
     b06:	20 0d       	add	r18, r0
     b08:	11 24       	eor	r1, r1
     b0a:	22 2e       	mov	r2, r18
     b0c:	f3 2d       	mov	r31, r3
     b0e:	f0 62       	ori	r31, 0x20	; 32
     b10:	3f 2e       	mov	r3, r31
     b12:	08 c0       	rjmp	.+16     	; 0xb24 <vfprintf+0xe6>
     b14:	8c 36       	cpi	r24, 0x6C	; 108
     b16:	21 f4       	brne	.+8      	; 0xb20 <vfprintf+0xe2>
     b18:	83 2d       	mov	r24, r3
     b1a:	80 68       	ori	r24, 0x80	; 128
     b1c:	38 2e       	mov	r3, r24
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <vfprintf+0xe6>
     b20:	88 36       	cpi	r24, 0x68	; 104
     b22:	41 f4       	brne	.+16     	; 0xb34 <vfprintf+0xf6>
     b24:	f7 01       	movw	r30, r14
     b26:	93 fd       	sbrc	r25, 3
     b28:	85 91       	lpm	r24, Z+
     b2a:	93 ff       	sbrs	r25, 3
     b2c:	81 91       	ld	r24, Z+
     b2e:	7f 01       	movw	r14, r30
     b30:	81 11       	cpse	r24, r1
     b32:	b3 cf       	rjmp	.-154    	; 0xa9a <vfprintf+0x5c>
     b34:	98 2f       	mov	r25, r24
     b36:	9f 7d       	andi	r25, 0xDF	; 223
     b38:	95 54       	subi	r25, 0x45	; 69
     b3a:	93 30       	cpi	r25, 0x03	; 3
     b3c:	28 f4       	brcc	.+10     	; 0xb48 <vfprintf+0x10a>
     b3e:	0c 5f       	subi	r16, 0xFC	; 252
     b40:	1f 4f       	sbci	r17, 0xFF	; 255
     b42:	9f e3       	ldi	r25, 0x3F	; 63
     b44:	99 83       	std	Y+1, r25	; 0x01
     b46:	0d c0       	rjmp	.+26     	; 0xb62 <vfprintf+0x124>
     b48:	83 36       	cpi	r24, 0x63	; 99
     b4a:	31 f0       	breq	.+12     	; 0xb58 <vfprintf+0x11a>
     b4c:	83 37       	cpi	r24, 0x73	; 115
     b4e:	71 f0       	breq	.+28     	; 0xb6c <vfprintf+0x12e>
     b50:	83 35       	cpi	r24, 0x53	; 83
     b52:	09 f0       	breq	.+2      	; 0xb56 <vfprintf+0x118>
     b54:	59 c0       	rjmp	.+178    	; 0xc08 <vfprintf+0x1ca>
     b56:	21 c0       	rjmp	.+66     	; 0xb9a <vfprintf+0x15c>
     b58:	f8 01       	movw	r30, r16
     b5a:	80 81       	ld	r24, Z
     b5c:	89 83       	std	Y+1, r24	; 0x01
     b5e:	0e 5f       	subi	r16, 0xFE	; 254
     b60:	1f 4f       	sbci	r17, 0xFF	; 255
     b62:	88 24       	eor	r8, r8
     b64:	83 94       	inc	r8
     b66:	91 2c       	mov	r9, r1
     b68:	53 01       	movw	r10, r6
     b6a:	13 c0       	rjmp	.+38     	; 0xb92 <vfprintf+0x154>
     b6c:	28 01       	movw	r4, r16
     b6e:	f2 e0       	ldi	r31, 0x02	; 2
     b70:	4f 0e       	add	r4, r31
     b72:	51 1c       	adc	r5, r1
     b74:	f8 01       	movw	r30, r16
     b76:	a0 80       	ld	r10, Z
     b78:	b1 80       	ldd	r11, Z+1	; 0x01
     b7a:	36 fe       	sbrs	r3, 6
     b7c:	03 c0       	rjmp	.+6      	; 0xb84 <vfprintf+0x146>
     b7e:	69 2d       	mov	r22, r9
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	02 c0       	rjmp	.+4      	; 0xb88 <vfprintf+0x14a>
     b84:	6f ef       	ldi	r22, 0xFF	; 255
     b86:	7f ef       	ldi	r23, 0xFF	; 255
     b88:	c5 01       	movw	r24, r10
     b8a:	0e 94 4f 08 	call	0x109e	; 0x109e <strnlen>
     b8e:	4c 01       	movw	r8, r24
     b90:	82 01       	movw	r16, r4
     b92:	f3 2d       	mov	r31, r3
     b94:	ff 77       	andi	r31, 0x7F	; 127
     b96:	3f 2e       	mov	r3, r31
     b98:	16 c0       	rjmp	.+44     	; 0xbc6 <vfprintf+0x188>
     b9a:	28 01       	movw	r4, r16
     b9c:	22 e0       	ldi	r18, 0x02	; 2
     b9e:	42 0e       	add	r4, r18
     ba0:	51 1c       	adc	r5, r1
     ba2:	f8 01       	movw	r30, r16
     ba4:	a0 80       	ld	r10, Z
     ba6:	b1 80       	ldd	r11, Z+1	; 0x01
     ba8:	36 fe       	sbrs	r3, 6
     baa:	03 c0       	rjmp	.+6      	; 0xbb2 <vfprintf+0x174>
     bac:	69 2d       	mov	r22, r9
     bae:	70 e0       	ldi	r23, 0x00	; 0
     bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <vfprintf+0x178>
     bb2:	6f ef       	ldi	r22, 0xFF	; 255
     bb4:	7f ef       	ldi	r23, 0xFF	; 255
     bb6:	c5 01       	movw	r24, r10
     bb8:	0e 94 3d 08 	call	0x107a	; 0x107a <strnlen_P>
     bbc:	4c 01       	movw	r8, r24
     bbe:	f3 2d       	mov	r31, r3
     bc0:	f0 68       	ori	r31, 0x80	; 128
     bc2:	3f 2e       	mov	r3, r31
     bc4:	82 01       	movw	r16, r4
     bc6:	33 fc       	sbrc	r3, 3
     bc8:	1b c0       	rjmp	.+54     	; 0xc00 <vfprintf+0x1c2>
     bca:	82 2d       	mov	r24, r2
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	88 16       	cp	r8, r24
     bd0:	99 06       	cpc	r9, r25
     bd2:	b0 f4       	brcc	.+44     	; 0xc00 <vfprintf+0x1c2>
     bd4:	b6 01       	movw	r22, r12
     bd6:	80 e2       	ldi	r24, 0x20	; 32
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     bde:	2a 94       	dec	r2
     be0:	f4 cf       	rjmp	.-24     	; 0xbca <vfprintf+0x18c>
     be2:	f5 01       	movw	r30, r10
     be4:	37 fc       	sbrc	r3, 7
     be6:	85 91       	lpm	r24, Z+
     be8:	37 fe       	sbrs	r3, 7
     bea:	81 91       	ld	r24, Z+
     bec:	5f 01       	movw	r10, r30
     bee:	b6 01       	movw	r22, r12
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     bf6:	21 10       	cpse	r2, r1
     bf8:	2a 94       	dec	r2
     bfa:	21 e0       	ldi	r18, 0x01	; 1
     bfc:	82 1a       	sub	r8, r18
     bfe:	91 08       	sbc	r9, r1
     c00:	81 14       	cp	r8, r1
     c02:	91 04       	cpc	r9, r1
     c04:	71 f7       	brne	.-36     	; 0xbe2 <vfprintf+0x1a4>
     c06:	e8 c0       	rjmp	.+464    	; 0xdd8 <vfprintf+0x39a>
     c08:	84 36       	cpi	r24, 0x64	; 100
     c0a:	11 f0       	breq	.+4      	; 0xc10 <vfprintf+0x1d2>
     c0c:	89 36       	cpi	r24, 0x69	; 105
     c0e:	41 f5       	brne	.+80     	; 0xc60 <vfprintf+0x222>
     c10:	f8 01       	movw	r30, r16
     c12:	37 fe       	sbrs	r3, 7
     c14:	07 c0       	rjmp	.+14     	; 0xc24 <vfprintf+0x1e6>
     c16:	60 81       	ld	r22, Z
     c18:	71 81       	ldd	r23, Z+1	; 0x01
     c1a:	82 81       	ldd	r24, Z+2	; 0x02
     c1c:	93 81       	ldd	r25, Z+3	; 0x03
     c1e:	0c 5f       	subi	r16, 0xFC	; 252
     c20:	1f 4f       	sbci	r17, 0xFF	; 255
     c22:	08 c0       	rjmp	.+16     	; 0xc34 <vfprintf+0x1f6>
     c24:	60 81       	ld	r22, Z
     c26:	71 81       	ldd	r23, Z+1	; 0x01
     c28:	07 2e       	mov	r0, r23
     c2a:	00 0c       	add	r0, r0
     c2c:	88 0b       	sbc	r24, r24
     c2e:	99 0b       	sbc	r25, r25
     c30:	0e 5f       	subi	r16, 0xFE	; 254
     c32:	1f 4f       	sbci	r17, 0xFF	; 255
     c34:	f3 2d       	mov	r31, r3
     c36:	ff 76       	andi	r31, 0x6F	; 111
     c38:	3f 2e       	mov	r3, r31
     c3a:	97 ff       	sbrs	r25, 7
     c3c:	09 c0       	rjmp	.+18     	; 0xc50 <vfprintf+0x212>
     c3e:	90 95       	com	r25
     c40:	80 95       	com	r24
     c42:	70 95       	com	r23
     c44:	61 95       	neg	r22
     c46:	7f 4f       	sbci	r23, 0xFF	; 255
     c48:	8f 4f       	sbci	r24, 0xFF	; 255
     c4a:	9f 4f       	sbci	r25, 0xFF	; 255
     c4c:	f0 68       	ori	r31, 0x80	; 128
     c4e:	3f 2e       	mov	r3, r31
     c50:	2a e0       	ldi	r18, 0x0A	; 10
     c52:	30 e0       	ldi	r19, 0x00	; 0
     c54:	a3 01       	movw	r20, r6
     c56:	0e 94 96 08 	call	0x112c	; 0x112c <__ultoa_invert>
     c5a:	88 2e       	mov	r8, r24
     c5c:	86 18       	sub	r8, r6
     c5e:	45 c0       	rjmp	.+138    	; 0xcea <vfprintf+0x2ac>
     c60:	85 37       	cpi	r24, 0x75	; 117
     c62:	31 f4       	brne	.+12     	; 0xc70 <vfprintf+0x232>
     c64:	23 2d       	mov	r18, r3
     c66:	2f 7e       	andi	r18, 0xEF	; 239
     c68:	b2 2e       	mov	r11, r18
     c6a:	2a e0       	ldi	r18, 0x0A	; 10
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	25 c0       	rjmp	.+74     	; 0xcba <vfprintf+0x27c>
     c70:	93 2d       	mov	r25, r3
     c72:	99 7f       	andi	r25, 0xF9	; 249
     c74:	b9 2e       	mov	r11, r25
     c76:	8f 36       	cpi	r24, 0x6F	; 111
     c78:	c1 f0       	breq	.+48     	; 0xcaa <vfprintf+0x26c>
     c7a:	18 f4       	brcc	.+6      	; 0xc82 <vfprintf+0x244>
     c7c:	88 35       	cpi	r24, 0x58	; 88
     c7e:	79 f0       	breq	.+30     	; 0xc9e <vfprintf+0x260>
     c80:	b5 c0       	rjmp	.+362    	; 0xdec <vfprintf+0x3ae>
     c82:	80 37       	cpi	r24, 0x70	; 112
     c84:	19 f0       	breq	.+6      	; 0xc8c <vfprintf+0x24e>
     c86:	88 37       	cpi	r24, 0x78	; 120
     c88:	21 f0       	breq	.+8      	; 0xc92 <vfprintf+0x254>
     c8a:	b0 c0       	rjmp	.+352    	; 0xdec <vfprintf+0x3ae>
     c8c:	e9 2f       	mov	r30, r25
     c8e:	e0 61       	ori	r30, 0x10	; 16
     c90:	be 2e       	mov	r11, r30
     c92:	b4 fe       	sbrs	r11, 4
     c94:	0d c0       	rjmp	.+26     	; 0xcb0 <vfprintf+0x272>
     c96:	fb 2d       	mov	r31, r11
     c98:	f4 60       	ori	r31, 0x04	; 4
     c9a:	bf 2e       	mov	r11, r31
     c9c:	09 c0       	rjmp	.+18     	; 0xcb0 <vfprintf+0x272>
     c9e:	34 fe       	sbrs	r3, 4
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <vfprintf+0x278>
     ca2:	29 2f       	mov	r18, r25
     ca4:	26 60       	ori	r18, 0x06	; 6
     ca6:	b2 2e       	mov	r11, r18
     ca8:	06 c0       	rjmp	.+12     	; 0xcb6 <vfprintf+0x278>
     caa:	28 e0       	ldi	r18, 0x08	; 8
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	05 c0       	rjmp	.+10     	; 0xcba <vfprintf+0x27c>
     cb0:	20 e1       	ldi	r18, 0x10	; 16
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <vfprintf+0x27c>
     cb6:	20 e1       	ldi	r18, 0x10	; 16
     cb8:	32 e0       	ldi	r19, 0x02	; 2
     cba:	f8 01       	movw	r30, r16
     cbc:	b7 fe       	sbrs	r11, 7
     cbe:	07 c0       	rjmp	.+14     	; 0xcce <vfprintf+0x290>
     cc0:	60 81       	ld	r22, Z
     cc2:	71 81       	ldd	r23, Z+1	; 0x01
     cc4:	82 81       	ldd	r24, Z+2	; 0x02
     cc6:	93 81       	ldd	r25, Z+3	; 0x03
     cc8:	0c 5f       	subi	r16, 0xFC	; 252
     cca:	1f 4f       	sbci	r17, 0xFF	; 255
     ccc:	06 c0       	rjmp	.+12     	; 0xcda <vfprintf+0x29c>
     cce:	60 81       	ld	r22, Z
     cd0:	71 81       	ldd	r23, Z+1	; 0x01
     cd2:	80 e0       	ldi	r24, 0x00	; 0
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	0e 5f       	subi	r16, 0xFE	; 254
     cd8:	1f 4f       	sbci	r17, 0xFF	; 255
     cda:	a3 01       	movw	r20, r6
     cdc:	0e 94 96 08 	call	0x112c	; 0x112c <__ultoa_invert>
     ce0:	88 2e       	mov	r8, r24
     ce2:	86 18       	sub	r8, r6
     ce4:	fb 2d       	mov	r31, r11
     ce6:	ff 77       	andi	r31, 0x7F	; 127
     ce8:	3f 2e       	mov	r3, r31
     cea:	36 fe       	sbrs	r3, 6
     cec:	0d c0       	rjmp	.+26     	; 0xd08 <vfprintf+0x2ca>
     cee:	23 2d       	mov	r18, r3
     cf0:	2e 7f       	andi	r18, 0xFE	; 254
     cf2:	a2 2e       	mov	r10, r18
     cf4:	89 14       	cp	r8, r9
     cf6:	58 f4       	brcc	.+22     	; 0xd0e <vfprintf+0x2d0>
     cf8:	34 fe       	sbrs	r3, 4
     cfa:	0b c0       	rjmp	.+22     	; 0xd12 <vfprintf+0x2d4>
     cfc:	32 fc       	sbrc	r3, 2
     cfe:	09 c0       	rjmp	.+18     	; 0xd12 <vfprintf+0x2d4>
     d00:	83 2d       	mov	r24, r3
     d02:	8e 7e       	andi	r24, 0xEE	; 238
     d04:	a8 2e       	mov	r10, r24
     d06:	05 c0       	rjmp	.+10     	; 0xd12 <vfprintf+0x2d4>
     d08:	b8 2c       	mov	r11, r8
     d0a:	a3 2c       	mov	r10, r3
     d0c:	03 c0       	rjmp	.+6      	; 0xd14 <vfprintf+0x2d6>
     d0e:	b8 2c       	mov	r11, r8
     d10:	01 c0       	rjmp	.+2      	; 0xd14 <vfprintf+0x2d6>
     d12:	b9 2c       	mov	r11, r9
     d14:	a4 fe       	sbrs	r10, 4
     d16:	0f c0       	rjmp	.+30     	; 0xd36 <vfprintf+0x2f8>
     d18:	fe 01       	movw	r30, r28
     d1a:	e8 0d       	add	r30, r8
     d1c:	f1 1d       	adc	r31, r1
     d1e:	80 81       	ld	r24, Z
     d20:	80 33       	cpi	r24, 0x30	; 48
     d22:	21 f4       	brne	.+8      	; 0xd2c <vfprintf+0x2ee>
     d24:	9a 2d       	mov	r25, r10
     d26:	99 7e       	andi	r25, 0xE9	; 233
     d28:	a9 2e       	mov	r10, r25
     d2a:	09 c0       	rjmp	.+18     	; 0xd3e <vfprintf+0x300>
     d2c:	a2 fe       	sbrs	r10, 2
     d2e:	06 c0       	rjmp	.+12     	; 0xd3c <vfprintf+0x2fe>
     d30:	b3 94       	inc	r11
     d32:	b3 94       	inc	r11
     d34:	04 c0       	rjmp	.+8      	; 0xd3e <vfprintf+0x300>
     d36:	8a 2d       	mov	r24, r10
     d38:	86 78       	andi	r24, 0x86	; 134
     d3a:	09 f0       	breq	.+2      	; 0xd3e <vfprintf+0x300>
     d3c:	b3 94       	inc	r11
     d3e:	a3 fc       	sbrc	r10, 3
     d40:	11 c0       	rjmp	.+34     	; 0xd64 <vfprintf+0x326>
     d42:	a0 fe       	sbrs	r10, 0
     d44:	06 c0       	rjmp	.+12     	; 0xd52 <vfprintf+0x314>
     d46:	b2 14       	cp	r11, r2
     d48:	88 f4       	brcc	.+34     	; 0xd6c <vfprintf+0x32e>
     d4a:	28 0c       	add	r2, r8
     d4c:	92 2c       	mov	r9, r2
     d4e:	9b 18       	sub	r9, r11
     d50:	0e c0       	rjmp	.+28     	; 0xd6e <vfprintf+0x330>
     d52:	b2 14       	cp	r11, r2
     d54:	60 f4       	brcc	.+24     	; 0xd6e <vfprintf+0x330>
     d56:	b6 01       	movw	r22, r12
     d58:	80 e2       	ldi	r24, 0x20	; 32
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     d60:	b3 94       	inc	r11
     d62:	f7 cf       	rjmp	.-18     	; 0xd52 <vfprintf+0x314>
     d64:	b2 14       	cp	r11, r2
     d66:	18 f4       	brcc	.+6      	; 0xd6e <vfprintf+0x330>
     d68:	2b 18       	sub	r2, r11
     d6a:	02 c0       	rjmp	.+4      	; 0xd70 <vfprintf+0x332>
     d6c:	98 2c       	mov	r9, r8
     d6e:	21 2c       	mov	r2, r1
     d70:	a4 fe       	sbrs	r10, 4
     d72:	10 c0       	rjmp	.+32     	; 0xd94 <vfprintf+0x356>
     d74:	b6 01       	movw	r22, r12
     d76:	80 e3       	ldi	r24, 0x30	; 48
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     d7e:	a2 fe       	sbrs	r10, 2
     d80:	17 c0       	rjmp	.+46     	; 0xdb0 <vfprintf+0x372>
     d82:	a1 fc       	sbrc	r10, 1
     d84:	03 c0       	rjmp	.+6      	; 0xd8c <vfprintf+0x34e>
     d86:	88 e7       	ldi	r24, 0x78	; 120
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <vfprintf+0x352>
     d8c:	88 e5       	ldi	r24, 0x58	; 88
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	b6 01       	movw	r22, r12
     d92:	0c c0       	rjmp	.+24     	; 0xdac <vfprintf+0x36e>
     d94:	8a 2d       	mov	r24, r10
     d96:	86 78       	andi	r24, 0x86	; 134
     d98:	59 f0       	breq	.+22     	; 0xdb0 <vfprintf+0x372>
     d9a:	a1 fe       	sbrs	r10, 1
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <vfprintf+0x364>
     d9e:	8b e2       	ldi	r24, 0x2B	; 43
     da0:	01 c0       	rjmp	.+2      	; 0xda4 <vfprintf+0x366>
     da2:	80 e2       	ldi	r24, 0x20	; 32
     da4:	a7 fc       	sbrc	r10, 7
     da6:	8d e2       	ldi	r24, 0x2D	; 45
     da8:	b6 01       	movw	r22, r12
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     db0:	89 14       	cp	r8, r9
     db2:	38 f4       	brcc	.+14     	; 0xdc2 <vfprintf+0x384>
     db4:	b6 01       	movw	r22, r12
     db6:	80 e3       	ldi	r24, 0x30	; 48
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     dbe:	9a 94       	dec	r9
     dc0:	f7 cf       	rjmp	.-18     	; 0xdb0 <vfprintf+0x372>
     dc2:	8a 94       	dec	r8
     dc4:	f3 01       	movw	r30, r6
     dc6:	e8 0d       	add	r30, r8
     dc8:	f1 1d       	adc	r31, r1
     dca:	80 81       	ld	r24, Z
     dcc:	b6 01       	movw	r22, r12
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     dd4:	81 10       	cpse	r8, r1
     dd6:	f5 cf       	rjmp	.-22     	; 0xdc2 <vfprintf+0x384>
     dd8:	22 20       	and	r2, r2
     dda:	09 f4       	brne	.+2      	; 0xdde <vfprintf+0x3a0>
     ddc:	42 ce       	rjmp	.-892    	; 0xa62 <vfprintf+0x24>
     dde:	b6 01       	movw	r22, r12
     de0:	80 e2       	ldi	r24, 0x20	; 32
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <fputc>
     de8:	2a 94       	dec	r2
     dea:	f6 cf       	rjmp	.-20     	; 0xdd8 <vfprintf+0x39a>
     dec:	f6 01       	movw	r30, r12
     dee:	86 81       	ldd	r24, Z+6	; 0x06
     df0:	97 81       	ldd	r25, Z+7	; 0x07
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <vfprintf+0x3ba>
     df4:	8f ef       	ldi	r24, 0xFF	; 255
     df6:	9f ef       	ldi	r25, 0xFF	; 255
     df8:	2b 96       	adiw	r28, 0x0b	; 11
     dfa:	e2 e1       	ldi	r30, 0x12	; 18
     dfc:	0c 94 10 09 	jmp	0x1220	; 0x1220 <__epilogue_restores__>

00000e00 <calloc>:
     e00:	0f 93       	push	r16
     e02:	1f 93       	push	r17
     e04:	cf 93       	push	r28
     e06:	df 93       	push	r29
     e08:	86 9f       	mul	r24, r22
     e0a:	80 01       	movw	r16, r0
     e0c:	87 9f       	mul	r24, r23
     e0e:	10 0d       	add	r17, r0
     e10:	96 9f       	mul	r25, r22
     e12:	10 0d       	add	r17, r0
     e14:	11 24       	eor	r1, r1
     e16:	c8 01       	movw	r24, r16
     e18:	0e 94 1c 07 	call	0xe38	; 0xe38 <malloc>
     e1c:	ec 01       	movw	r28, r24
     e1e:	00 97       	sbiw	r24, 0x00	; 0
     e20:	29 f0       	breq	.+10     	; 0xe2c <calloc+0x2c>
     e22:	a8 01       	movw	r20, r16
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	0e 94 48 08 	call	0x1090	; 0x1090 <memset>
     e2c:	ce 01       	movw	r24, r28
     e2e:	df 91       	pop	r29
     e30:	cf 91       	pop	r28
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	08 95       	ret

00000e38 <malloc>:
     e38:	0f 93       	push	r16
     e3a:	1f 93       	push	r17
     e3c:	cf 93       	push	r28
     e3e:	df 93       	push	r29
     e40:	82 30       	cpi	r24, 0x02	; 2
     e42:	91 05       	cpc	r25, r1
     e44:	10 f4       	brcc	.+4      	; 0xe4a <malloc+0x12>
     e46:	82 e0       	ldi	r24, 0x02	; 2
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	e0 91 44 04 	lds	r30, 0x0444	; 0x800444 <__flp>
     e4e:	f0 91 45 04 	lds	r31, 0x0445	; 0x800445 <__flp+0x1>
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	a0 e0       	ldi	r26, 0x00	; 0
     e58:	b0 e0       	ldi	r27, 0x00	; 0
     e5a:	30 97       	sbiw	r30, 0x00	; 0
     e5c:	19 f1       	breq	.+70     	; 0xea4 <malloc+0x6c>
     e5e:	40 81       	ld	r20, Z
     e60:	51 81       	ldd	r21, Z+1	; 0x01
     e62:	02 81       	ldd	r16, Z+2	; 0x02
     e64:	13 81       	ldd	r17, Z+3	; 0x03
     e66:	48 17       	cp	r20, r24
     e68:	59 07       	cpc	r21, r25
     e6a:	c8 f0       	brcs	.+50     	; 0xe9e <malloc+0x66>
     e6c:	84 17       	cp	r24, r20
     e6e:	95 07       	cpc	r25, r21
     e70:	69 f4       	brne	.+26     	; 0xe8c <malloc+0x54>
     e72:	10 97       	sbiw	r26, 0x00	; 0
     e74:	31 f0       	breq	.+12     	; 0xe82 <malloc+0x4a>
     e76:	12 96       	adiw	r26, 0x02	; 2
     e78:	0c 93       	st	X, r16
     e7a:	12 97       	sbiw	r26, 0x02	; 2
     e7c:	13 96       	adiw	r26, 0x03	; 3
     e7e:	1c 93       	st	X, r17
     e80:	27 c0       	rjmp	.+78     	; 0xed0 <malloc+0x98>
     e82:	00 93 44 04 	sts	0x0444, r16	; 0x800444 <__flp>
     e86:	10 93 45 04 	sts	0x0445, r17	; 0x800445 <__flp+0x1>
     e8a:	22 c0       	rjmp	.+68     	; 0xed0 <malloc+0x98>
     e8c:	21 15       	cp	r18, r1
     e8e:	31 05       	cpc	r19, r1
     e90:	19 f0       	breq	.+6      	; 0xe98 <malloc+0x60>
     e92:	42 17       	cp	r20, r18
     e94:	53 07       	cpc	r21, r19
     e96:	18 f4       	brcc	.+6      	; 0xe9e <malloc+0x66>
     e98:	9a 01       	movw	r18, r20
     e9a:	bd 01       	movw	r22, r26
     e9c:	ef 01       	movw	r28, r30
     e9e:	df 01       	movw	r26, r30
     ea0:	f8 01       	movw	r30, r16
     ea2:	db cf       	rjmp	.-74     	; 0xe5a <malloc+0x22>
     ea4:	21 15       	cp	r18, r1
     ea6:	31 05       	cpc	r19, r1
     ea8:	f9 f0       	breq	.+62     	; 0xee8 <malloc+0xb0>
     eaa:	28 1b       	sub	r18, r24
     eac:	39 0b       	sbc	r19, r25
     eae:	24 30       	cpi	r18, 0x04	; 4
     eb0:	31 05       	cpc	r19, r1
     eb2:	80 f4       	brcc	.+32     	; 0xed4 <malloc+0x9c>
     eb4:	8a 81       	ldd	r24, Y+2	; 0x02
     eb6:	9b 81       	ldd	r25, Y+3	; 0x03
     eb8:	61 15       	cp	r22, r1
     eba:	71 05       	cpc	r23, r1
     ebc:	21 f0       	breq	.+8      	; 0xec6 <malloc+0x8e>
     ebe:	fb 01       	movw	r30, r22
     ec0:	93 83       	std	Z+3, r25	; 0x03
     ec2:	82 83       	std	Z+2, r24	; 0x02
     ec4:	04 c0       	rjmp	.+8      	; 0xece <malloc+0x96>
     ec6:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <__flp+0x1>
     eca:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <__flp>
     ece:	fe 01       	movw	r30, r28
     ed0:	32 96       	adiw	r30, 0x02	; 2
     ed2:	44 c0       	rjmp	.+136    	; 0xf5c <malloc+0x124>
     ed4:	fe 01       	movw	r30, r28
     ed6:	e2 0f       	add	r30, r18
     ed8:	f3 1f       	adc	r31, r19
     eda:	81 93       	st	Z+, r24
     edc:	91 93       	st	Z+, r25
     ede:	22 50       	subi	r18, 0x02	; 2
     ee0:	31 09       	sbc	r19, r1
     ee2:	39 83       	std	Y+1, r19	; 0x01
     ee4:	28 83       	st	Y, r18
     ee6:	3a c0       	rjmp	.+116    	; 0xf5c <malloc+0x124>
     ee8:	20 91 42 04 	lds	r18, 0x0442	; 0x800442 <__brkval>
     eec:	30 91 43 04 	lds	r19, 0x0443	; 0x800443 <__brkval+0x1>
     ef0:	23 2b       	or	r18, r19
     ef2:	41 f4       	brne	.+16     	; 0xf04 <malloc+0xcc>
     ef4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     ef8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     efc:	30 93 43 04 	sts	0x0443, r19	; 0x800443 <__brkval+0x1>
     f00:	20 93 42 04 	sts	0x0442, r18	; 0x800442 <__brkval>
     f04:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     f08:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     f0c:	21 15       	cp	r18, r1
     f0e:	31 05       	cpc	r19, r1
     f10:	41 f4       	brne	.+16     	; 0xf22 <malloc+0xea>
     f12:	2d b7       	in	r18, 0x3d	; 61
     f14:	3e b7       	in	r19, 0x3e	; 62
     f16:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     f1a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     f1e:	24 1b       	sub	r18, r20
     f20:	35 0b       	sbc	r19, r21
     f22:	e0 91 42 04 	lds	r30, 0x0442	; 0x800442 <__brkval>
     f26:	f0 91 43 04 	lds	r31, 0x0443	; 0x800443 <__brkval+0x1>
     f2a:	e2 17       	cp	r30, r18
     f2c:	f3 07       	cpc	r31, r19
     f2e:	a0 f4       	brcc	.+40     	; 0xf58 <malloc+0x120>
     f30:	2e 1b       	sub	r18, r30
     f32:	3f 0b       	sbc	r19, r31
     f34:	28 17       	cp	r18, r24
     f36:	39 07       	cpc	r19, r25
     f38:	78 f0       	brcs	.+30     	; 0xf58 <malloc+0x120>
     f3a:	ac 01       	movw	r20, r24
     f3c:	4e 5f       	subi	r20, 0xFE	; 254
     f3e:	5f 4f       	sbci	r21, 0xFF	; 255
     f40:	24 17       	cp	r18, r20
     f42:	35 07       	cpc	r19, r21
     f44:	48 f0       	brcs	.+18     	; 0xf58 <malloc+0x120>
     f46:	4e 0f       	add	r20, r30
     f48:	5f 1f       	adc	r21, r31
     f4a:	50 93 43 04 	sts	0x0443, r21	; 0x800443 <__brkval+0x1>
     f4e:	40 93 42 04 	sts	0x0442, r20	; 0x800442 <__brkval>
     f52:	81 93       	st	Z+, r24
     f54:	91 93       	st	Z+, r25
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <malloc+0x124>
     f58:	e0 e0       	ldi	r30, 0x00	; 0
     f5a:	f0 e0       	ldi	r31, 0x00	; 0
     f5c:	cf 01       	movw	r24, r30
     f5e:	df 91       	pop	r29
     f60:	cf 91       	pop	r28
     f62:	1f 91       	pop	r17
     f64:	0f 91       	pop	r16
     f66:	08 95       	ret

00000f68 <free>:
     f68:	cf 93       	push	r28
     f6a:	df 93       	push	r29
     f6c:	00 97       	sbiw	r24, 0x00	; 0
     f6e:	09 f4       	brne	.+2      	; 0xf72 <free+0xa>
     f70:	81 c0       	rjmp	.+258    	; 0x1074 <free+0x10c>
     f72:	fc 01       	movw	r30, r24
     f74:	32 97       	sbiw	r30, 0x02	; 2
     f76:	13 82       	std	Z+3, r1	; 0x03
     f78:	12 82       	std	Z+2, r1	; 0x02
     f7a:	a0 91 44 04 	lds	r26, 0x0444	; 0x800444 <__flp>
     f7e:	b0 91 45 04 	lds	r27, 0x0445	; 0x800445 <__flp+0x1>
     f82:	10 97       	sbiw	r26, 0x00	; 0
     f84:	81 f4       	brne	.+32     	; 0xfa6 <free+0x3e>
     f86:	20 81       	ld	r18, Z
     f88:	31 81       	ldd	r19, Z+1	; 0x01
     f8a:	82 0f       	add	r24, r18
     f8c:	93 1f       	adc	r25, r19
     f8e:	20 91 42 04 	lds	r18, 0x0442	; 0x800442 <__brkval>
     f92:	30 91 43 04 	lds	r19, 0x0443	; 0x800443 <__brkval+0x1>
     f96:	28 17       	cp	r18, r24
     f98:	39 07       	cpc	r19, r25
     f9a:	51 f5       	brne	.+84     	; 0xff0 <free+0x88>
     f9c:	f0 93 43 04 	sts	0x0443, r31	; 0x800443 <__brkval+0x1>
     fa0:	e0 93 42 04 	sts	0x0442, r30	; 0x800442 <__brkval>
     fa4:	67 c0       	rjmp	.+206    	; 0x1074 <free+0x10c>
     fa6:	ed 01       	movw	r28, r26
     fa8:	20 e0       	ldi	r18, 0x00	; 0
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	ce 17       	cp	r28, r30
     fae:	df 07       	cpc	r29, r31
     fb0:	40 f4       	brcc	.+16     	; 0xfc2 <free+0x5a>
     fb2:	4a 81       	ldd	r20, Y+2	; 0x02
     fb4:	5b 81       	ldd	r21, Y+3	; 0x03
     fb6:	9e 01       	movw	r18, r28
     fb8:	41 15       	cp	r20, r1
     fba:	51 05       	cpc	r21, r1
     fbc:	f1 f0       	breq	.+60     	; 0xffa <free+0x92>
     fbe:	ea 01       	movw	r28, r20
     fc0:	f5 cf       	rjmp	.-22     	; 0xfac <free+0x44>
     fc2:	d3 83       	std	Z+3, r29	; 0x03
     fc4:	c2 83       	std	Z+2, r28	; 0x02
     fc6:	40 81       	ld	r20, Z
     fc8:	51 81       	ldd	r21, Z+1	; 0x01
     fca:	84 0f       	add	r24, r20
     fcc:	95 1f       	adc	r25, r21
     fce:	c8 17       	cp	r28, r24
     fd0:	d9 07       	cpc	r29, r25
     fd2:	59 f4       	brne	.+22     	; 0xfea <free+0x82>
     fd4:	88 81       	ld	r24, Y
     fd6:	99 81       	ldd	r25, Y+1	; 0x01
     fd8:	84 0f       	add	r24, r20
     fda:	95 1f       	adc	r25, r21
     fdc:	02 96       	adiw	r24, 0x02	; 2
     fde:	91 83       	std	Z+1, r25	; 0x01
     fe0:	80 83       	st	Z, r24
     fe2:	8a 81       	ldd	r24, Y+2	; 0x02
     fe4:	9b 81       	ldd	r25, Y+3	; 0x03
     fe6:	93 83       	std	Z+3, r25	; 0x03
     fe8:	82 83       	std	Z+2, r24	; 0x02
     fea:	21 15       	cp	r18, r1
     fec:	31 05       	cpc	r19, r1
     fee:	29 f4       	brne	.+10     	; 0xffa <free+0x92>
     ff0:	f0 93 45 04 	sts	0x0445, r31	; 0x800445 <__flp+0x1>
     ff4:	e0 93 44 04 	sts	0x0444, r30	; 0x800444 <__flp>
     ff8:	3d c0       	rjmp	.+122    	; 0x1074 <free+0x10c>
     ffa:	e9 01       	movw	r28, r18
     ffc:	fb 83       	std	Y+3, r31	; 0x03
     ffe:	ea 83       	std	Y+2, r30	; 0x02
    1000:	49 91       	ld	r20, Y+
    1002:	59 91       	ld	r21, Y+
    1004:	c4 0f       	add	r28, r20
    1006:	d5 1f       	adc	r29, r21
    1008:	ec 17       	cp	r30, r28
    100a:	fd 07       	cpc	r31, r29
    100c:	61 f4       	brne	.+24     	; 0x1026 <free+0xbe>
    100e:	80 81       	ld	r24, Z
    1010:	91 81       	ldd	r25, Z+1	; 0x01
    1012:	84 0f       	add	r24, r20
    1014:	95 1f       	adc	r25, r21
    1016:	02 96       	adiw	r24, 0x02	; 2
    1018:	e9 01       	movw	r28, r18
    101a:	99 83       	std	Y+1, r25	; 0x01
    101c:	88 83       	st	Y, r24
    101e:	82 81       	ldd	r24, Z+2	; 0x02
    1020:	93 81       	ldd	r25, Z+3	; 0x03
    1022:	9b 83       	std	Y+3, r25	; 0x03
    1024:	8a 83       	std	Y+2, r24	; 0x02
    1026:	e0 e0       	ldi	r30, 0x00	; 0
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	12 96       	adiw	r26, 0x02	; 2
    102c:	8d 91       	ld	r24, X+
    102e:	9c 91       	ld	r25, X
    1030:	13 97       	sbiw	r26, 0x03	; 3
    1032:	00 97       	sbiw	r24, 0x00	; 0
    1034:	19 f0       	breq	.+6      	; 0x103c <free+0xd4>
    1036:	fd 01       	movw	r30, r26
    1038:	dc 01       	movw	r26, r24
    103a:	f7 cf       	rjmp	.-18     	; 0x102a <free+0xc2>
    103c:	8d 91       	ld	r24, X+
    103e:	9c 91       	ld	r25, X
    1040:	11 97       	sbiw	r26, 0x01	; 1
    1042:	9d 01       	movw	r18, r26
    1044:	2e 5f       	subi	r18, 0xFE	; 254
    1046:	3f 4f       	sbci	r19, 0xFF	; 255
    1048:	82 0f       	add	r24, r18
    104a:	93 1f       	adc	r25, r19
    104c:	20 91 42 04 	lds	r18, 0x0442	; 0x800442 <__brkval>
    1050:	30 91 43 04 	lds	r19, 0x0443	; 0x800443 <__brkval+0x1>
    1054:	28 17       	cp	r18, r24
    1056:	39 07       	cpc	r19, r25
    1058:	69 f4       	brne	.+26     	; 0x1074 <free+0x10c>
    105a:	30 97       	sbiw	r30, 0x00	; 0
    105c:	29 f4       	brne	.+10     	; 0x1068 <free+0x100>
    105e:	10 92 45 04 	sts	0x0445, r1	; 0x800445 <__flp+0x1>
    1062:	10 92 44 04 	sts	0x0444, r1	; 0x800444 <__flp>
    1066:	02 c0       	rjmp	.+4      	; 0x106c <free+0x104>
    1068:	13 82       	std	Z+3, r1	; 0x03
    106a:	12 82       	std	Z+2, r1	; 0x02
    106c:	b0 93 43 04 	sts	0x0443, r27	; 0x800443 <__brkval+0x1>
    1070:	a0 93 42 04 	sts	0x0442, r26	; 0x800442 <__brkval>
    1074:	df 91       	pop	r29
    1076:	cf 91       	pop	r28
    1078:	08 95       	ret

0000107a <strnlen_P>:
    107a:	fc 01       	movw	r30, r24
    107c:	05 90       	lpm	r0, Z+
    107e:	61 50       	subi	r22, 0x01	; 1
    1080:	70 40       	sbci	r23, 0x00	; 0
    1082:	01 10       	cpse	r0, r1
    1084:	d8 f7       	brcc	.-10     	; 0x107c <strnlen_P+0x2>
    1086:	80 95       	com	r24
    1088:	90 95       	com	r25
    108a:	8e 0f       	add	r24, r30
    108c:	9f 1f       	adc	r25, r31
    108e:	08 95       	ret

00001090 <memset>:
    1090:	dc 01       	movw	r26, r24
    1092:	01 c0       	rjmp	.+2      	; 0x1096 <memset+0x6>
    1094:	6d 93       	st	X+, r22
    1096:	41 50       	subi	r20, 0x01	; 1
    1098:	50 40       	sbci	r21, 0x00	; 0
    109a:	e0 f7       	brcc	.-8      	; 0x1094 <memset+0x4>
    109c:	08 95       	ret

0000109e <strnlen>:
    109e:	fc 01       	movw	r30, r24
    10a0:	61 50       	subi	r22, 0x01	; 1
    10a2:	70 40       	sbci	r23, 0x00	; 0
    10a4:	01 90       	ld	r0, Z+
    10a6:	01 10       	cpse	r0, r1
    10a8:	d8 f7       	brcc	.-10     	; 0x10a0 <strnlen+0x2>
    10aa:	80 95       	com	r24
    10ac:	90 95       	com	r25
    10ae:	8e 0f       	add	r24, r30
    10b0:	9f 1f       	adc	r25, r31
    10b2:	08 95       	ret

000010b4 <fputc>:
    10b4:	0f 93       	push	r16
    10b6:	1f 93       	push	r17
    10b8:	cf 93       	push	r28
    10ba:	df 93       	push	r29
    10bc:	fb 01       	movw	r30, r22
    10be:	23 81       	ldd	r18, Z+3	; 0x03
    10c0:	21 fd       	sbrc	r18, 1
    10c2:	03 c0       	rjmp	.+6      	; 0x10ca <fputc+0x16>
    10c4:	8f ef       	ldi	r24, 0xFF	; 255
    10c6:	9f ef       	ldi	r25, 0xFF	; 255
    10c8:	2c c0       	rjmp	.+88     	; 0x1122 <fputc+0x6e>
    10ca:	22 ff       	sbrs	r18, 2
    10cc:	16 c0       	rjmp	.+44     	; 0x10fa <fputc+0x46>
    10ce:	46 81       	ldd	r20, Z+6	; 0x06
    10d0:	57 81       	ldd	r21, Z+7	; 0x07
    10d2:	24 81       	ldd	r18, Z+4	; 0x04
    10d4:	35 81       	ldd	r19, Z+5	; 0x05
    10d6:	42 17       	cp	r20, r18
    10d8:	53 07       	cpc	r21, r19
    10da:	44 f4       	brge	.+16     	; 0x10ec <fputc+0x38>
    10dc:	a0 81       	ld	r26, Z
    10de:	b1 81       	ldd	r27, Z+1	; 0x01
    10e0:	9d 01       	movw	r18, r26
    10e2:	2f 5f       	subi	r18, 0xFF	; 255
    10e4:	3f 4f       	sbci	r19, 0xFF	; 255
    10e6:	31 83       	std	Z+1, r19	; 0x01
    10e8:	20 83       	st	Z, r18
    10ea:	8c 93       	st	X, r24
    10ec:	26 81       	ldd	r18, Z+6	; 0x06
    10ee:	37 81       	ldd	r19, Z+7	; 0x07
    10f0:	2f 5f       	subi	r18, 0xFF	; 255
    10f2:	3f 4f       	sbci	r19, 0xFF	; 255
    10f4:	37 83       	std	Z+7, r19	; 0x07
    10f6:	26 83       	std	Z+6, r18	; 0x06
    10f8:	14 c0       	rjmp	.+40     	; 0x1122 <fputc+0x6e>
    10fa:	8b 01       	movw	r16, r22
    10fc:	ec 01       	movw	r28, r24
    10fe:	fb 01       	movw	r30, r22
    1100:	00 84       	ldd	r0, Z+8	; 0x08
    1102:	f1 85       	ldd	r31, Z+9	; 0x09
    1104:	e0 2d       	mov	r30, r0
    1106:	09 95       	icall
    1108:	89 2b       	or	r24, r25
    110a:	e1 f6       	brne	.-72     	; 0x10c4 <fputc+0x10>
    110c:	d8 01       	movw	r26, r16
    110e:	16 96       	adiw	r26, 0x06	; 6
    1110:	8d 91       	ld	r24, X+
    1112:	9c 91       	ld	r25, X
    1114:	17 97       	sbiw	r26, 0x07	; 7
    1116:	01 96       	adiw	r24, 0x01	; 1
    1118:	17 96       	adiw	r26, 0x07	; 7
    111a:	9c 93       	st	X, r25
    111c:	8e 93       	st	-X, r24
    111e:	16 97       	sbiw	r26, 0x06	; 6
    1120:	ce 01       	movw	r24, r28
    1122:	df 91       	pop	r29
    1124:	cf 91       	pop	r28
    1126:	1f 91       	pop	r17
    1128:	0f 91       	pop	r16
    112a:	08 95       	ret

0000112c <__ultoa_invert>:
    112c:	fa 01       	movw	r30, r20
    112e:	aa 27       	eor	r26, r26
    1130:	28 30       	cpi	r18, 0x08	; 8
    1132:	51 f1       	breq	.+84     	; 0x1188 <__ultoa_invert+0x5c>
    1134:	20 31       	cpi	r18, 0x10	; 16
    1136:	81 f1       	breq	.+96     	; 0x1198 <__ultoa_invert+0x6c>
    1138:	e8 94       	clt
    113a:	6f 93       	push	r22
    113c:	6e 7f       	andi	r22, 0xFE	; 254
    113e:	6e 5f       	subi	r22, 0xFE	; 254
    1140:	7f 4f       	sbci	r23, 0xFF	; 255
    1142:	8f 4f       	sbci	r24, 0xFF	; 255
    1144:	9f 4f       	sbci	r25, 0xFF	; 255
    1146:	af 4f       	sbci	r26, 0xFF	; 255
    1148:	b1 e0       	ldi	r27, 0x01	; 1
    114a:	3e d0       	rcall	.+124    	; 0x11c8 <__ultoa_invert+0x9c>
    114c:	b4 e0       	ldi	r27, 0x04	; 4
    114e:	3c d0       	rcall	.+120    	; 0x11c8 <__ultoa_invert+0x9c>
    1150:	67 0f       	add	r22, r23
    1152:	78 1f       	adc	r23, r24
    1154:	89 1f       	adc	r24, r25
    1156:	9a 1f       	adc	r25, r26
    1158:	a1 1d       	adc	r26, r1
    115a:	68 0f       	add	r22, r24
    115c:	79 1f       	adc	r23, r25
    115e:	8a 1f       	adc	r24, r26
    1160:	91 1d       	adc	r25, r1
    1162:	a1 1d       	adc	r26, r1
    1164:	6a 0f       	add	r22, r26
    1166:	71 1d       	adc	r23, r1
    1168:	81 1d       	adc	r24, r1
    116a:	91 1d       	adc	r25, r1
    116c:	a1 1d       	adc	r26, r1
    116e:	20 d0       	rcall	.+64     	; 0x11b0 <__ultoa_invert+0x84>
    1170:	09 f4       	brne	.+2      	; 0x1174 <__ultoa_invert+0x48>
    1172:	68 94       	set
    1174:	3f 91       	pop	r19
    1176:	2a e0       	ldi	r18, 0x0A	; 10
    1178:	26 9f       	mul	r18, r22
    117a:	11 24       	eor	r1, r1
    117c:	30 19       	sub	r19, r0
    117e:	30 5d       	subi	r19, 0xD0	; 208
    1180:	31 93       	st	Z+, r19
    1182:	de f6       	brtc	.-74     	; 0x113a <__ultoa_invert+0xe>
    1184:	cf 01       	movw	r24, r30
    1186:	08 95       	ret
    1188:	46 2f       	mov	r20, r22
    118a:	47 70       	andi	r20, 0x07	; 7
    118c:	40 5d       	subi	r20, 0xD0	; 208
    118e:	41 93       	st	Z+, r20
    1190:	b3 e0       	ldi	r27, 0x03	; 3
    1192:	0f d0       	rcall	.+30     	; 0x11b2 <__ultoa_invert+0x86>
    1194:	c9 f7       	brne	.-14     	; 0x1188 <__ultoa_invert+0x5c>
    1196:	f6 cf       	rjmp	.-20     	; 0x1184 <__ultoa_invert+0x58>
    1198:	46 2f       	mov	r20, r22
    119a:	4f 70       	andi	r20, 0x0F	; 15
    119c:	40 5d       	subi	r20, 0xD0	; 208
    119e:	4a 33       	cpi	r20, 0x3A	; 58
    11a0:	18 f0       	brcs	.+6      	; 0x11a8 <__ultoa_invert+0x7c>
    11a2:	49 5d       	subi	r20, 0xD9	; 217
    11a4:	31 fd       	sbrc	r19, 1
    11a6:	40 52       	subi	r20, 0x20	; 32
    11a8:	41 93       	st	Z+, r20
    11aa:	02 d0       	rcall	.+4      	; 0x11b0 <__ultoa_invert+0x84>
    11ac:	a9 f7       	brne	.-22     	; 0x1198 <__ultoa_invert+0x6c>
    11ae:	ea cf       	rjmp	.-44     	; 0x1184 <__ultoa_invert+0x58>
    11b0:	b4 e0       	ldi	r27, 0x04	; 4
    11b2:	a6 95       	lsr	r26
    11b4:	97 95       	ror	r25
    11b6:	87 95       	ror	r24
    11b8:	77 95       	ror	r23
    11ba:	67 95       	ror	r22
    11bc:	ba 95       	dec	r27
    11be:	c9 f7       	brne	.-14     	; 0x11b2 <__ultoa_invert+0x86>
    11c0:	00 97       	sbiw	r24, 0x00	; 0
    11c2:	61 05       	cpc	r22, r1
    11c4:	71 05       	cpc	r23, r1
    11c6:	08 95       	ret
    11c8:	9b 01       	movw	r18, r22
    11ca:	ac 01       	movw	r20, r24
    11cc:	0a 2e       	mov	r0, r26
    11ce:	06 94       	lsr	r0
    11d0:	57 95       	ror	r21
    11d2:	47 95       	ror	r20
    11d4:	37 95       	ror	r19
    11d6:	27 95       	ror	r18
    11d8:	ba 95       	dec	r27
    11da:	c9 f7       	brne	.-14     	; 0x11ce <__ultoa_invert+0xa2>
    11dc:	62 0f       	add	r22, r18
    11de:	73 1f       	adc	r23, r19
    11e0:	84 1f       	adc	r24, r20
    11e2:	95 1f       	adc	r25, r21
    11e4:	a0 1d       	adc	r26, r0
    11e6:	08 95       	ret

000011e8 <__prologue_saves__>:
    11e8:	2f 92       	push	r2
    11ea:	3f 92       	push	r3
    11ec:	4f 92       	push	r4
    11ee:	5f 92       	push	r5
    11f0:	6f 92       	push	r6
    11f2:	7f 92       	push	r7
    11f4:	8f 92       	push	r8
    11f6:	9f 92       	push	r9
    11f8:	af 92       	push	r10
    11fa:	bf 92       	push	r11
    11fc:	cf 92       	push	r12
    11fe:	df 92       	push	r13
    1200:	ef 92       	push	r14
    1202:	ff 92       	push	r15
    1204:	0f 93       	push	r16
    1206:	1f 93       	push	r17
    1208:	cf 93       	push	r28
    120a:	df 93       	push	r29
    120c:	cd b7       	in	r28, 0x3d	; 61
    120e:	de b7       	in	r29, 0x3e	; 62
    1210:	ca 1b       	sub	r28, r26
    1212:	db 0b       	sbc	r29, r27
    1214:	0f b6       	in	r0, 0x3f	; 63
    1216:	f8 94       	cli
    1218:	de bf       	out	0x3e, r29	; 62
    121a:	0f be       	out	0x3f, r0	; 63
    121c:	cd bf       	out	0x3d, r28	; 61
    121e:	09 94       	ijmp

00001220 <__epilogue_restores__>:
    1220:	2a 88       	ldd	r2, Y+18	; 0x12
    1222:	39 88       	ldd	r3, Y+17	; 0x11
    1224:	48 88       	ldd	r4, Y+16	; 0x10
    1226:	5f 84       	ldd	r5, Y+15	; 0x0f
    1228:	6e 84       	ldd	r6, Y+14	; 0x0e
    122a:	7d 84       	ldd	r7, Y+13	; 0x0d
    122c:	8c 84       	ldd	r8, Y+12	; 0x0c
    122e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1230:	aa 84       	ldd	r10, Y+10	; 0x0a
    1232:	b9 84       	ldd	r11, Y+9	; 0x09
    1234:	c8 84       	ldd	r12, Y+8	; 0x08
    1236:	df 80       	ldd	r13, Y+7	; 0x07
    1238:	ee 80       	ldd	r14, Y+6	; 0x06
    123a:	fd 80       	ldd	r15, Y+5	; 0x05
    123c:	0c 81       	ldd	r16, Y+4	; 0x04
    123e:	1b 81       	ldd	r17, Y+3	; 0x03
    1240:	aa 81       	ldd	r26, Y+2	; 0x02
    1242:	b9 81       	ldd	r27, Y+1	; 0x01
    1244:	ce 0f       	add	r28, r30
    1246:	d1 1d       	adc	r29, r1
    1248:	0f b6       	in	r0, 0x3f	; 63
    124a:	f8 94       	cli
    124c:	de bf       	out	0x3e, r29	; 62
    124e:	0f be       	out	0x3f, r0	; 63
    1250:	cd bf       	out	0x3d, r28	; 61
    1252:	ed 01       	movw	r28, r26
    1254:	08 95       	ret

00001256 <_exit>:
    1256:	f8 94       	cli

00001258 <__stop_program>:
    1258:	ff cf       	rjmp	.-2      	; 0x1258 <__stop_program>
